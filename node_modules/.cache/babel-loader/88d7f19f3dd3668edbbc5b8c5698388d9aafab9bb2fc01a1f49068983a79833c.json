{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~11 AM)',\n      items: [{\n        name: 'Beef (or Chicken) + Butter',\n        portion: '10-12 oz + 1 tbsp butter',\n        calories: 750\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Mahi Mahi OR Tuna',\n        portion: '10-12 oz',\n        calories: 500\n      }, {\n        name: 'Eggs + Butter',\n        portion: '2 eggs + 1 tbsp butter',\n        calories: 260\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 350\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Chamomile OR Lemon Balm Tea',\n        portion: '1 cup',\n        calories: 0\n      }]\n    }]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4 oz chicken liver',\n    meals: [{\n      time: 'Pre-Walk (~10 AM)',\n      items: [{\n        name: 'Honey',\n        portion: '1 tsp',\n        calories: 20\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Butter',\n        portion: '3 eggs + 1 tbsp butter',\n        calories: 400\n      }, {\n        name: 'Fresh Fish',\n        portion: '10-12 oz',\n        calories: 450\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Avocado',\n        portion: '10-12 oz + ½ avocado',\n        calories: 750\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken Liver',\n        portion: '4 oz',\n        calories: 300\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }]\n    }]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '10-12 oz + ½ cup',\n        calories: 700\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '10-12 oz + ½ cup rice',\n        calories: 700\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portion: '10-12 oz + ½ avocado',\n        calories: 570\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Eggs',\n        portion: '2 eggs',\n        calories: 160\n      }]\n    }]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 10-12 oz fish',\n        calories: 650\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter + Sauerkraut',\n        portion: '10-12 oz + 1 tbsp butter',\n        calories: 750\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '6 oz',\n        calories: 450\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }]\n    }]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 10-12 oz fish',\n        calories: 650\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '10-12 oz + 1 tbsp butter',\n        calories: 750\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 450\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }]\n    }]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '10-12 oz + ½ cup',\n        calories: 700\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '10-12 oz + ½ cup rice',\n        calories: 700\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portion: '10-12 oz + ½ avocado',\n        calories: 570\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Eggs',\n        portion: '2 eggs',\n        calories: 160\n      }]\n    }]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: 'None',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 10-12 oz fish',\n        calories: 650\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '10-12 oz + 1 tbsp butter',\n        calories: 750\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken + Avocado',\n        portion: '10-12 oz + ½ avocado',\n        calories: 570\n      }, {\n        name: 'Butter',\n        portion: '1 tbsp',\n        calories: 100\n      }, {\n        name: 'Eggs',\n        portion: '2 eggs',\n        calories: 160\n      }]\n    }]\n  }\n};\nconst MealPlanner = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [portionSizes, setPortionSizes] = useState(() => {\n    const saved = localStorage.getItem('portionSizes');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [addedMeals, setAddedMeals] = useState(() => {\n    const saved = localStorage.getItem('addedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [selectedMealTemplate, setSelectedMealTemplate] = useState('');\n  const timeOptions = ['6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM', '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  useEffect(() => {\n    localStorage.setItem('portionSizes', JSON.stringify(portionSizes));\n  }, [portionSizes]);\n  useEffect(() => {\n    localStorage.setItem('addedMeals', JSON.stringify(addedMeals));\n  }, [addedMeals]);\n  useEffect(() => {\n    // Clean up any unwanted meals from localStorage\n    const cleanupMealData = () => {\n      const updatedMealData = {\n        ...mealData\n      };\n      Object.keys(updatedMealData).forEach(key => {\n        // Check if this is a 2 PM meal on a Saturday\n        if (key.includes('2:00 PM')) {\n          const [dateStr] = key.split('-');\n          const date = new Date(dateStr);\n          const day = date.getDay();\n          // If it's a Saturday (6), remove the meal\n          if (day === 6) {\n            delete updatedMealData[key];\n          }\n        }\n      });\n      setMealData(updatedMealData);\n    };\n    cleanupMealData();\n  }, []); // Run once on mount\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (activeMealSwap !== null && swapMenuRef.current && !swapMenuRef.current.contains(event.target) && swapButtonRef.current && !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const isMealCompleted = useCallback(mealTime => {\n    var _mealData$mealKey;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n  }, [currentDate, mealData]);\n  const getPortionSize = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    return portionSizes[mealKey] || 'regular';\n  };\n  const togglePortionSize = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setPortionSizes(prev => ({\n      ...prev,\n      [mealKey]: prev[mealKey] === 'regular' ? 'large' : 'regular'\n    }));\n  };\n  const getMealItemsWithPortionSize = meal => {\n    const currentPortionSize = getPortionSize(meal.time);\n    return meal.items.map(item => {\n      if (item.portions) {\n        return {\n          ...item,\n          portion: item.portions[currentPortionSize].portion,\n          calories: item.portions[currentPortionSize].calories\n        };\n      }\n      return item;\n    });\n  };\n  const calculateStats = useCallback(() => {\n    var _mealPlanData$selecte, _mealPlanData$selecte2;\n    const todayMeals = getMealsForCurrentDate();\n    const totalCaloriesTarget = parseInt((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : (_mealPlanData$selecte2 = _mealPlanData$selecte.totalCalories) === null || _mealPlanData$selecte2 === void 0 ? void 0 : _mealPlanData$selecte2.split('-')[1]) || 2400;\n    const completedCalories = todayMeals.reduce((acc, meal) => {\n      if (isMealCompleted(meal.time)) {\n        const items = getMealItemsWithPortionSize(meal);\n        return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n      }\n      return acc;\n    }, 0);\n    const percentage = Math.round(completedCalories / totalCaloriesTarget * 100);\n    return {\n      completed: completedCalories,\n      total: totalCaloriesTarget,\n      percentage,\n      overThreshold: completedCalories > totalCaloriesTarget,\n      displayPercentage: Math.min(percentage, 100)\n    };\n  }, [selectedDay, isMealCompleted, getMealsForCurrentDate, mealPlanData]);\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    if (newMeal) {\n      var _mealData$mealKey2;\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n      setMealPlanData(prev => {\n        const updatedData = {\n          ...prev\n        };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    setActiveMealSwap(null);\n  };\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const convertTo24Hour = time12h => {\n    const timeMatch = time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);\n    if (!timeMatch) return '00:00';\n    let [_, hours, minutes = '00', modifier] = timeMatch;\n    hours = parseInt(hours);\n    if (hours === 12) {\n      hours = modifier.toUpperCase() === 'PM' ? 12 : 0;\n    } else if (modifier.toUpperCase() === 'PM') {\n      hours = hours + 12;\n    }\n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n  const getAllMealTemplates = useCallback(() => {\n    const templates = [];\n    Object.values(mealPlanData).forEach(day => {\n      day.meals.forEach(meal => {\n        if (!templates.some(t => JSON.stringify(t.items) === JSON.stringify(meal.items))) {\n          templates.push({\n            items: meal.items,\n            description: meal.items.map(item => item.name).join(', ')\n          });\n        }\n      });\n    });\n    return templates;\n  }, [mealPlanData]);\n  const getMealsForCurrentDate = useCallback(() => {\n    var _mealPlanData$selecte3;\n    const dateKey = getDateKey(currentDate);\n    const defaultMeals = ((_mealPlanData$selecte3 = mealPlanData[selectedDay]) === null || _mealPlanData$selecte3 === void 0 ? void 0 : _mealPlanData$selecte3.meals) || [];\n    const dateSpecificMeals = addedMeals[dateKey] || [];\n\n    // Combine and sort all meals\n    return [...defaultMeals, ...dateSpecificMeals].sort((a, b) => {\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n  }, [currentDate, selectedDay, mealPlanData, addedMeals]);\n  const handleAddMeal = () => {\n    if (!newMealTime || !selectedMealTemplate) return;\n    const selectedTemplate = getAllMealTemplates().find(t => t.description === selectedMealTemplate);\n    if (!selectedTemplate) return;\n    const dateKey = getDateKey(currentDate);\n    setAddedMeals(prev => ({\n      ...prev,\n      [dateKey]: [...(prev[dateKey] || []), {\n        time: newMealTime,\n        items: selectedTemplate.items,\n        isAdded: true\n      }].sort((a, b) => {\n        const timeA = convertTo24Hour(a.time);\n        const timeB = convertTo24Hour(b.time);\n        return timeA.localeCompare(timeB);\n      })\n    }));\n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setSelectedMealTemplate('');\n  };\n  const handleRemoveMeal = index => {\n    const dateKey = getDateKey(currentDate);\n    const allMeals = getMealsForCurrentDate();\n    const mealToRemove = allMeals[index];\n\n    // Only proceed if it's an added meal\n    if (!mealToRemove.isAdded) return;\n    setAddedMeals(prev => {\n      const updatedDateMeals = (prev[dateKey] || []).filter(meal => meal.time !== mealToRemove.time || JSON.stringify(meal.items) !== JSON.stringify(mealToRemove.items));\n      const newAddedMeals = {\n        ...prev\n      };\n      if (updatedDateMeals.length === 0) {\n        delete newAddedMeals[dateKey];\n      } else {\n        newAddedMeals[dateKey] = updatedDateMeals;\n      }\n      return newAddedMeals;\n    });\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n  const Dashboard = () => {\n    _s();\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      // Get the start of the current week (Sunday)\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - currentDate.getDay());\n\n      // Calculate stats for each day of the current week\n      const weekDays = Array.from({\n        length: 7\n      }, (_, i) => {\n        var _mealPlanData$weekday;\n        const date = new Date(weekStart);\n        date.setDate(weekStart.getDate() + i);\n        const dayKey = getDateKey(date);\n        const weekday = date.toLocaleDateString('en-US', {\n          weekday: 'long'\n        }).toLowerCase();\n        const dayMeals = ((_mealPlanData$weekday = mealPlanData[weekday]) === null || _mealPlanData$weekday === void 0 ? void 0 : _mealPlanData$weekday.meals) || [];\n        const completed = dayMeals.filter(meal => {\n          var _mealData$mealKey3;\n          const mealKey = `${dayKey}-${meal.time}`;\n          return ((_mealData$mealKey3 = mealData[mealKey]) === null || _mealData$mealKey3 === void 0 ? void 0 : _mealData$mealKey3.completed) || false;\n        }).length;\n        return {\n          completed,\n          total: dayMeals.length\n        };\n      });\n\n      // Sum up the totals\n      return weekDays.reduce((acc, day) => ({\n        completed: acc.completed + day.completed,\n        total: acc.total + day.total\n      }), {\n        completed: 0,\n        total: 0\n      });\n    }, [currentDate, mealData, mealPlanData]);\n    const weekPercentage = weekStats.total > 0 ? Math.round(weekStats.completed / weekStats.total * 100) : 0;\n    const getProgressColor = percentage => {\n      if (percentage <= 33) return '#ef4444'; // Red\n      if (percentage <= 66) return '#f59e0b'; // Yellow/Orange\n      return '#22c55e'; // Green\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: stats.overThreshold ? 'over-threshold' : '',\n                children: [stats.completed, \"/\", stats.total, \" (\", stats.percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `progress-fill ${stats.overThreshold ? 'over-threshold' : ''}`,\n                style: {\n                  width: `${stats.displayPercentage}%`,\n                  backgroundColor: stats.overThreshold ? '#ef4444' : getProgressColor(stats.percentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Weekly Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Week Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weekStats.completed, \"/\", weekStats.total, \" (\", weekPercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${weekPercentage}%`,\n                  backgroundColor: getProgressColor(weekPercentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Dashboard, \"3A1WL06O40UxZKevtBh+/wpgfgc=\");\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Keto-Cycling Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDate.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meal-type\",\n        children: mealPlanData[selectedDay].type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-goals\",\n        children: mealPlanData[selectedDay].goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"goal-tag\",\n          children: goal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCarbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Liver Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].liver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [stats.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-list\",\n      children: [getMealsForCurrentDate().map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [meal.isAdded && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-button\",\n              onClick: () => handleRemoveMeal(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"portion-toggle\",\n              onClick: () => togglePortionSize(meal.time),\n              children: getPortionSize(meal.time) === 'regular' ? 'Regular Portion' : 'Large Portion'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: index === activeMealSwap ? swapButtonRef : null,\n              className: \"swap-button\",\n              onClick: () => setActiveMealSwap(activeMealSwap === index ? null : index),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this), \"Swap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this), activeMealSwap === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: swapMenuRef,\n              className: \"swap-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-menu-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Swap Meal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"close-button\",\n                  onClick: () => setActiveMealSwap(null),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 21\n              }, this), days.filter(day => day !== selectedDay).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-day-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-day-header\",\n                  children: day.charAt(0).toUpperCase() + day.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 27\n                }, this), mealPlanData[day].meals.map((swapMeal, swapIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-menu-item\",\n                  onClick: () => handleMealSwap(index, day, swapIndex),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"swap-meal-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-time\",\n                      children: swapMeal.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 867,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-items\",\n                      children: swapMeal.items.map(item => item.name).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 868,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 31\n                  }, this)\n                }, `${day}-${swapIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 29\n                }, this))]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"meal-checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getMealItemsWithPortionSize(meal).map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.portion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.calories, \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 21\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-meal-button\",\n        onClick: () => setShowAddMeal(true),\n        children: \"+ Add Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), showAddMeal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newMealTime,\n            onChange: e => setNewMealTime(e.target.value),\n            className: \"time-select\",\n            children: timeOptions.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time,\n              children: time\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMealTemplate,\n            onChange: e => setSelectedMealTemplate(e.target.value),\n            className: \"meal-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a meal...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this), getAllMealTemplates().map((template, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: template.description,\n              children: template.description\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddMeal,\n            children: \"Add Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowAddMeal(false);\n              setNewMealTime('12:00 PM');\n              setSelectedMealTemplate('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 753,\n    columnNumber: 5\n  }, this);\n};\n_s2(MealPlanner, \"sCGl1pTvbQ0WO2lALx23s7eJnws=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","jsxDEV","_jsxDEV","initialMealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portion","calories","tuesday","wednesday","thursday","friday","saturday","sunday","MealPlanner","_s2","_s","$RefreshSig$","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealPlanData","setMealPlanData","mealData","setMealData","saved","localStorage","getItem","JSON","parse","portionSizes","setPortionSizes","addedMeals","setAddedMeals","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","showAddMeal","setShowAddMeal","newMealTime","setNewMealTime","selectedMealTemplate","setSelectedMealTemplate","timeOptions","swapMenuRef","swapButtonRef","setItem","stringify","cleanupMealData","updatedMealData","Object","keys","forEach","key","includes","dateStr","split","date","day","getDay","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDateKey","toISOString","isMealCompleted","mealTime","_mealData$mealKey","completed","getPortionSize","dateKey","togglePortionSize","prev","getMealItemsWithPortionSize","meal","currentPortionSize","map","item","portions","calculateStats","_mealPlanData$selecte","_mealPlanData$selecte2","todayMeals","getMealsForCurrentDate","totalCaloriesTarget","parseInt","completedCalories","reduce","acc","sum","percentage","Math","round","total","overThreshold","displayPercentage","min","calculateMacros","weeklyCarbs","values","carbs","weeklyCalories","weeklyAvgCarbs","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","newMealIndex","currentMeal","newMeal","_mealData$mealKey2","wasCompleted","updatedData","updatedMeals","toggleMealCompletion","_prev$mealKey","handleCommentOpen","handleCommentSave","convertTo24Hour","time12h","timeMatch","match","_","hours","minutes","modifier","toUpperCase","toString","padStart","getAllMealTemplates","templates","some","t","push","description","join","_mealPlanData$selecte3","defaultMeals","dateSpecificMeals","sort","a","b","timeA","timeB","localeCompare","handleAddMeal","selectedTemplate","find","isAdded","handleRemoveMeal","index","allMeals","mealToRemove","updatedDateMeals","filter","newAddedMeals","length","days","stats","Dashboard","weekStats","weekStart","setDate","getDate","weekDays","Array","from","i","_mealPlanData$weekday","dayKey","dayMeals","_mealData$mealKey3","weekPercentage","getProgressColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","CommentModal","value","onChange","e","placeholder","onClick","newDate","month","year","goal","ref","xmlns","viewBox","fill","d","charAt","slice","swapMeal","swapIndex","checked","itemIndex","template","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~11 AM)',\n        items: [\n          { name: 'Beef (or Chicken) + Butter', portion: '10-12 oz + 1 tbsp butter', calories: 750 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Mahi Mahi OR Tuna', portion: '10-12 oz', calories: 500 },\n          { name: 'Eggs + Butter', portion: '2 eggs + 1 tbsp butter', calories: 260 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n        ]\n      }\n    ]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4 oz chicken liver',\n    meals: [\n      {\n        time: 'Pre-Walk (~10 AM)',\n        items: [\n          { name: 'Honey', portion: '1 tsp', calories: 20 },\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n          { name: 'Fresh Fish', portion: '10-12 oz', calories: 450 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Avocado', portion: '10-12 oz + ½ avocado', calories: 750 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken Liver', portion: '4 oz', calories: 300 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 }\n        ]\n      }\n    ]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 },\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '10-12 oz + ½ cup', calories: 700 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '10-12 oz + ½ cup rice', calories: 700 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Fish + Avocado', portion: '10-12 oz + ½ avocado', calories: 570 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Eggs', portion: '2 eggs', calories: 160 }\n        ]\n      }\n    ]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 10-12 oz fish', calories: 650 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter + Sauerkraut', portion: '10-12 oz + 1 tbsp butter', calories: 750 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '6 oz', calories: 450 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 }\n        ]\n      }\n    ]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 10-12 oz fish', calories: 650 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '10-12 oz + 1 tbsp butter', calories: 750 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 450 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 }\n        ]\n      }\n    ]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 },\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '10-12 oz + ½ cup', calories: 700 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '10-12 oz + ½ cup rice', calories: 700 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Fish + Avocado', portion: '10-12 oz + ½ avocado', calories: 570 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Eggs', portion: '2 eggs', calories: 160 }\n        ]\n      }\n    ]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: 'None',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 10-12 oz fish', calories: 650 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '10-12 oz + 1 tbsp butter', calories: 750 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken + Avocado', portion: '10-12 oz + ½ avocado', calories: 570 },\n          { name: 'Butter', portion: '1 tbsp', calories: 100 },\n          { name: 'Eggs', portion: '2 eggs', calories: 160 }\n        ]\n      }\n    ]\n  }\n};\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [portionSizes, setPortionSizes] = useState(() => {\n    const saved = localStorage.getItem('portionSizes');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [addedMeals, setAddedMeals] = useState(() => {\n    const saved = localStorage.getItem('addedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [selectedMealTemplate, setSelectedMealTemplate] = useState('');\n  const timeOptions = [\n    '6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM',\n    '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM',\n    '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'\n  ];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  useEffect(() => {\n    localStorage.setItem('portionSizes', JSON.stringify(portionSizes));\n  }, [portionSizes]);\n\n  useEffect(() => {\n    localStorage.setItem('addedMeals', JSON.stringify(addedMeals));\n  }, [addedMeals]);\n\n  useEffect(() => {\n    // Clean up any unwanted meals from localStorage\n    const cleanupMealData = () => {\n      const updatedMealData = { ...mealData };\n      Object.keys(updatedMealData).forEach(key => {\n        // Check if this is a 2 PM meal on a Saturday\n        if (key.includes('2:00 PM')) {\n          const [dateStr] = key.split('-');\n          const date = new Date(dateStr);\n          const day = date.getDay();\n          // If it's a Saturday (6), remove the meal\n          if (day === 6) {\n            delete updatedMealData[key];\n          }\n        }\n      });\n      setMealData(updatedMealData);\n    };\n    \n    cleanupMealData();\n  }, []); // Run once on mount\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (activeMealSwap !== null &&\n          swapMenuRef.current &&\n          !swapMenuRef.current.contains(event.target) &&\n          swapButtonRef.current &&\n          !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const isMealCompleted = useCallback((mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  }, [currentDate, mealData]);\n\n  const getPortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    return portionSizes[mealKey] || 'regular';\n  };\n\n  const togglePortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setPortionSizes(prev => ({\n      ...prev,\n      [mealKey]: prev[mealKey] === 'regular' ? 'large' : 'regular'\n    }));\n  };\n\n  const getMealItemsWithPortionSize = (meal) => {\n    const currentPortionSize = getPortionSize(meal.time);\n    \n    return meal.items.map(item => {\n      if (item.portions) {\n        return {\n          ...item,\n          portion: item.portions[currentPortionSize].portion,\n          calories: item.portions[currentPortionSize].calories\n        };\n      }\n      return item;\n    });\n  };\n\n  const calculateStats = useCallback(() => {\n    const todayMeals = getMealsForCurrentDate();\n    const totalCaloriesTarget = parseInt(mealPlanData[selectedDay]?.totalCalories?.split('-')[1]) || 2400;\n    \n    const completedCalories = todayMeals.reduce((acc, meal) => {\n      if (isMealCompleted(meal.time)) {\n        const items = getMealItemsWithPortionSize(meal);\n        return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n      }\n      return acc;\n    }, 0);\n\n    const percentage = Math.round((completedCalories / totalCaloriesTarget) * 100);\n    \n    return {\n      completed: completedCalories,\n      total: totalCaloriesTarget,\n      percentage,\n      overThreshold: completedCalories > totalCaloriesTarget,\n      displayPercentage: Math.min(percentage, 100)\n    };\n  }, [selectedDay, isMealCompleted, getMealsForCurrentDate, mealPlanData]);\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    \n    if (newMeal) {\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = mealData[mealKey]?.completed || false;\n      \n      setMealPlanData(prev => {\n        const updatedData = { ...prev };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      \n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const convertTo24Hour = (time12h) => {\n    const timeMatch = time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);\n    if (!timeMatch) return '00:00';\n    \n    let [_, hours, minutes = '00', modifier] = timeMatch;\n    hours = parseInt(hours);\n    \n    if (hours === 12) {\n      hours = modifier.toUpperCase() === 'PM' ? 12 : 0;\n    } else if (modifier.toUpperCase() === 'PM') {\n      hours = hours + 12;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n\n  const getAllMealTemplates = useCallback(() => {\n    const templates = [];\n    Object.values(mealPlanData).forEach(day => {\n      day.meals.forEach(meal => {\n        if (!templates.some(t => \n          JSON.stringify(t.items) === JSON.stringify(meal.items)\n        )) {\n          templates.push({\n            items: meal.items,\n            description: meal.items.map(item => item.name).join(', ')\n          });\n        }\n      });\n    });\n    return templates;\n  }, [mealPlanData]);\n\n  const getMealsForCurrentDate = useCallback(() => {\n    const dateKey = getDateKey(currentDate);\n    const defaultMeals = mealPlanData[selectedDay]?.meals || [];\n    const dateSpecificMeals = addedMeals[dateKey] || [];\n    \n    // Combine and sort all meals\n    return [...defaultMeals, ...dateSpecificMeals].sort((a, b) => {\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n  }, [currentDate, selectedDay, mealPlanData, addedMeals]);\n\n  const handleAddMeal = () => {\n    if (!newMealTime || !selectedMealTemplate) return;\n    \n    const selectedTemplate = getAllMealTemplates().find(t => \n      t.description === selectedMealTemplate\n    );\n    \n    if (!selectedTemplate) return;\n\n    const dateKey = getDateKey(currentDate);\n    \n    setAddedMeals(prev => ({\n      ...prev,\n      [dateKey]: [\n        ...(prev[dateKey] || []),\n        {\n          time: newMealTime,\n          items: selectedTemplate.items,\n          isAdded: true\n        }\n      ].sort((a, b) => {\n        const timeA = convertTo24Hour(a.time);\n        const timeB = convertTo24Hour(b.time);\n        return timeA.localeCompare(timeB);\n      })\n    }));\n    \n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setSelectedMealTemplate('');\n  };\n\n  const handleRemoveMeal = (index) => {\n    const dateKey = getDateKey(currentDate);\n    const allMeals = getMealsForCurrentDate();\n    const mealToRemove = allMeals[index];\n    \n    // Only proceed if it's an added meal\n    if (!mealToRemove.isAdded) return;\n    \n    setAddedMeals(prev => {\n      const updatedDateMeals = (prev[dateKey] || []).filter(meal => \n        meal.time !== mealToRemove.time || \n        JSON.stringify(meal.items) !== JSON.stringify(mealToRemove.items)\n      );\n      \n      const newAddedMeals = { ...prev };\n      if (updatedDateMeals.length === 0) {\n        delete newAddedMeals[dateKey];\n      } else {\n        newAddedMeals[dateKey] = updatedDateMeals;\n      }\n      \n      return newAddedMeals;\n    });\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      // Get the start of the current week (Sunday)\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - currentDate.getDay());\n      \n      // Calculate stats for each day of the current week\n      const weekDays = Array.from({ length: 7 }, (_, i) => {\n        const date = new Date(weekStart);\n        date.setDate(weekStart.getDate() + i);\n        const dayKey = getDateKey(date);\n        const weekday = date.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n        \n        const dayMeals = mealPlanData[weekday]?.meals || [];\n        const completed = dayMeals.filter(meal => {\n          const mealKey = `${dayKey}-${meal.time}`;\n          return mealData[mealKey]?.completed || false;\n        }).length;\n        \n        return {\n          completed,\n          total: dayMeals.length\n        };\n      });\n      \n      // Sum up the totals\n      return weekDays.reduce((acc, day) => ({\n        completed: acc.completed + day.completed,\n        total: acc.total + day.total\n      }), { completed: 0, total: 0 });\n    }, [currentDate, mealData, mealPlanData]);\n\n    const weekPercentage = weekStats.total > 0 \n      ? Math.round((weekStats.completed / weekStats.total) * 100)\n      : 0;\n    \n    const getProgressColor = (percentage) => {\n      if (percentage <= 33) return '#ef4444';  // Red\n      if (percentage <= 66) return '#f59e0b';  // Yellow/Orange\n      return '#22c55e';  // Green\n    };\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Calories</span>\n                <span className={stats.overThreshold ? 'over-threshold' : ''}>\n                  {stats.completed}/{stats.total} ({stats.percentage}%)\n                </span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className={`progress-fill ${stats.overThreshold ? 'over-threshold' : ''}`}\n                  style={{ \n                    width: `${stats.displayPercentage}%`,\n                    backgroundColor: stats.overThreshold ? '#ef4444' : getProgressColor(stats.percentage),\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"stats-section\">\n            <h3>Weekly Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Week Total</span>\n                <span>{weekStats.completed}/{weekStats.total} ({weekPercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${weekPercentage}%`,\n                    backgroundColor: getProgressColor(weekPercentage)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"meal-planner\">\n      <header className=\"header\">\n        <h1>Keto-Cycling Meal Plan</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Prev\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n      </header>\n\n      <Dashboard />\n\n      <div className=\"daily-overview\">\n        <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n        \n        <div className=\"meal-goals\">\n          {mealPlanData[selectedDay].goals.map((goal, index) => (\n            <span key={index} className=\"goal-tag\">{goal}</span>\n          ))}\n        </div>\n\n        <div className=\"meal-stats\">\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Carbs</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCarbs}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Calories</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCalories}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Liver Intake</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].liver}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Completion</div>\n            <div className=\"stat-value\">{stats.percentage}%</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meal-list\">\n        {getMealsForCurrentDate().map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                {meal.isAdded && (\n                  <button \n                    className=\"remove-button\"\n                    onClick={() => handleRemoveMeal(index)}\n                  >\n                    Remove\n                  </button>\n                )}\n                <button\n                  className=\"portion-toggle\"\n                  onClick={() => togglePortionSize(meal.time)}\n                >\n                  {getPortionSize(meal.time) === 'regular' ? 'Regular Portion' : 'Large Portion'}\n                </button>\n                <button \n                  ref={index === activeMealSwap ? swapButtonRef : null}\n                  className=\"swap-button\"\n                  onClick={() => setActiveMealSwap(activeMealSwap === index ? null : index)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                  </svg>\n                  Swap\n                </button>\n                {activeMealSwap === index && (\n                  <div ref={swapMenuRef} className=\"swap-menu\">\n                    <div className=\"swap-menu-header\">\n                      <h4>Swap Meal</h4>\n                      <button \n                        className=\"close-button\"\n                        onClick={() => setActiveMealSwap(null)}\n                      >\n                        ×\n                      </button>\n                    </div>\n                    {days\n                      .filter(day => day !== selectedDay)\n                      .map(day => (\n                        <div key={day} className=\"swap-day-section\">\n                          <div className=\"swap-day-header\">{day.charAt(0).toUpperCase() + day.slice(1)}</div>\n                          {mealPlanData[day].meals.map((swapMeal, swapIndex) => (\n                            <div \n                              key={`${day}-${swapIndex}`}\n                              className=\"swap-menu-item\"\n                              onClick={() => handleMealSwap(index, day, swapIndex)}\n                            >\n                              <div className=\"swap-meal-info\">\n                                <div className=\"swap-meal-time\">{swapMeal.time}</div>\n                                <div className=\"swap-meal-items\">\n                                  {swapMeal.items.map(item => item.name).join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                  </div>\n                )}\n                <input\n                  type=\"checkbox\"\n                  className=\"meal-checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMealItemsWithPortionSize(meal).map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n        <button \n          className=\"add-meal-button\"\n          onClick={() => setShowAddMeal(true)}\n        >\n          + Add Meal\n        </button>\n      </div>\n      \n      <CommentModal />\n      \n      {showAddMeal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Add New Meal</h3>\n            <div className=\"input-group\">\n              <label>Select Time</label>\n              <select\n                value={newMealTime}\n                onChange={(e) => setNewMealTime(e.target.value)}\n                className=\"time-select\"\n              >\n                {timeOptions.map(time => (\n                  <option key={time} value={time}>{time}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"input-group\">\n              <label>Select Meal</label>\n              <select\n                value={selectedMealTemplate}\n                onChange={(e) => setSelectedMealTemplate(e.target.value)}\n                className=\"meal-select\"\n              >\n                <option value=\"\">Select a meal...</option>\n                {getAllMealTemplates().map((template, index) => (\n                  <option key={index} value={template.description}>\n                    {template.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"modal-buttons\">\n              <button onClick={handleAddMeal}>Add Meal</button>\n              <button onClick={() => {\n                setShowAddMeal(false);\n                setNewMealTime('12:00 PM');\n                setSelectedMealTemplate('');\n              }}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,mBAAmB,GAAG;EAC1BC,MAAM,EAAE;IACNC,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,aAAa,EAAE,sBAAsB,EAAE,cAAc,CAAC;IAC9DC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,4BAA4B;MAClCC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,4BAA4B;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC1F;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACvD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACjE;QAAEF,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAE/E,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACxD;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACvD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,6BAA6B;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAE,CAAC;IAE1E,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE;IACPX,IAAI,EAAE,8BAA8B;IACpCC,KAAK,EAAE,CAAC,sBAAsB,EAAE,8BAA8B,CAAC;IAC/DC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,oBAAoB;IAC3BC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,mBAAmB;MACzBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC,EACjD;QAAEF,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC3E;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAE9D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC1E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACzD;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACvD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAExD,CAAC;EAEL,CAAC;EACDE,SAAS,EAAE;IACTZ,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;IAChEC,UAAU,EAAE,UAAU;IACtBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,sBAAsB;MAC5BC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE,yBAAyB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC7E;QAAEF,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC3E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAChF;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAElE,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC1E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAEtD,CAAC;EAEL,CAAC;EACDG,QAAQ,EAAE;IACRb,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,mBAAmB,EAAE,wBAAwB,CAAC;IACtDC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,iBAAiB;IACxBC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,4BAA4B;MAClCC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACzE;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAExD,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,4BAA4B;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC1F;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAE3D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACtD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAE3D,CAAC;EAEL,CAAC;EACDI,MAAM,EAAE;IACNd,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,kBAAkB,EAAE,SAAS,EAAE,sBAAsB,CAAC;IAC9DC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,4BAA4B;MAClCC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACzE;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAExD,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC7E;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACvD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACxD;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAE3D,CAAC;EAEL,CAAC;EACDK,QAAQ,EAAE;IACRf,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,wBAAwB,EAAE,qBAAqB,CAAC;IACxDC,UAAU,EAAE,UAAU;IACtBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,mBAAmB;IAC1BC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,sBAAsB;MAC5BC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE,yBAAyB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC7E;QAAEF,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAE,kBAAkB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC3E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,qBAAqB;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAChF;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAElE,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC1E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAEtD,CAAC;EAEL,CAAC;EACDM,MAAM,EAAE;IACNhB,IAAI,EAAE,iBAAiB;IACvBC,KAAK,EAAE,CAAC,gBAAgB,EAAE,UAAU,CAAC;IACrCC,UAAU,EAAE,QAAQ;IACpBC,aAAa,EAAE,WAAW;IAC1BC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,CACL;MACEC,IAAI,EAAE,4BAA4B;MAClCC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,sBAAsB;QAAEC,OAAO,EAAE,oBAAoB;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAElF,CAAC,EACD;MACEJ,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE,wBAAwB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACzE;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAExD,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE,0BAA0B;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC7E;QAAEF,IAAI,EAAE,SAAS;QAAEC,OAAO,EAAE,UAAU;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACvD;QAAEF,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAE1D,CAAC,EACD;MACEJ,IAAI,EAAE,gBAAgB;MACtBC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,QAAQ,EAAE;MAAI,CAAC,EAC7E;QAAEF,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC,EACpD;QAAEF,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAI,CAAC;IAEtD,CAAC;EAEL;AACF,CAAC;AAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,IAAIgC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,MAAM;IACnD,MAAMmC,OAAO,GAAGL,WAAW,CAACM,kBAAkB,CAAC,OAAO,EAAE;MAAED,OAAO,EAAE;IAAO,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC1F,OAAOF,OAAO;EAChB,CAAC,CAAC;EAEF,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAACO,mBAAmB,CAAC;EACrE,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,MAAM;IAC7C,MAAM0C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,MAAM;IACrD,MAAM0C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGlD,QAAQ,CAAC,MAAM;IACjD,MAAM0C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,MAAM;IACrD,MAAM0C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC;EAEF,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC;IAC/CuD,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC4D,cAAc,EAAEC,iBAAiB,CAAC,GAAG7D,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC8D,WAAW,EAAEC,cAAc,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC,UAAU,CAAC;EAC1D,MAAM,CAACkE,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAMoE,WAAW,GAAG,CAClB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAClE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACjE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CACvD;EACD,MAAMC,WAAW,GAAGjE,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMkE,aAAa,GAAGlE,MAAM,CAAC,IAAI,CAAC;EAElCH,SAAS,CAAC,MAAM;IACd0C,YAAY,CAAC4B,OAAO,CAAC,UAAU,EAAE1B,IAAI,CAAC2B,SAAS,CAAChC,QAAQ,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdvC,SAAS,CAAC,MAAM;IACd0C,YAAY,CAAC4B,OAAO,CAAC,cAAc,EAAE1B,IAAI,CAAC2B,SAAS,CAACrB,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElBlD,SAAS,CAAC,MAAM;IACd0C,YAAY,CAAC4B,OAAO,CAAC,cAAc,EAAE1B,IAAI,CAAC2B,SAAS,CAACzB,YAAY,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB9C,SAAS,CAAC,MAAM;IACd0C,YAAY,CAAC4B,OAAO,CAAC,YAAY,EAAE1B,IAAI,CAAC2B,SAAS,CAACvB,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBhD,SAAS,CAAC,MAAM;IACd;IACA,MAAMwE,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,eAAe,GAAG;QAAE,GAAGlC;MAAS,CAAC;MACvCmC,MAAM,CAACC,IAAI,CAACF,eAAe,CAAC,CAACG,OAAO,CAACC,GAAG,IAAI;QAC1C;QACA,IAAIA,GAAG,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;UAC3B,MAAM,CAACC,OAAO,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;UAChC,MAAMC,IAAI,GAAG,IAAIlD,IAAI,CAACgD,OAAO,CAAC;UAC9B,MAAMG,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC;UACzB;UACA,IAAID,GAAG,KAAK,CAAC,EAAE;YACb,OAAOT,eAAe,CAACI,GAAG,CAAC;UAC7B;QACF;MACF,CAAC,CAAC;MACFrC,WAAW,CAACiC,eAAe,CAAC;IAC9B,CAAC;IAEDD,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERxE,SAAS,CAAC,MAAM;IACd,MAAMkC,OAAO,GAAGL,WAAW,CAACM,kBAAkB,CAAC,OAAO,EAAE;MAAED,OAAO,EAAE;IAAO,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;IAC1FH,cAAc,CAACC,OAAO,CAAC;EACzB,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB7B,SAAS,CAAC,MAAM;IACd,MAAMoF,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAI1B,cAAc,KAAK,IAAI,IACvBS,WAAW,CAACkB,OAAO,IACnB,CAAClB,WAAW,CAACkB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,IAC3CnB,aAAa,CAACiB,OAAO,IACrB,CAACjB,aAAa,CAACiB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACjD5B,iBAAiB,CAAC,IAAI,CAAC;MACzB;IACF,CAAC;IAED6B,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACzB,cAAc,CAAC,CAAC;EAEpB,MAAMiC,UAAU,GAAIX,IAAI,IAAKA,IAAI,CAACY,WAAW,CAAC,CAAC,CAACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE7D,MAAMc,eAAe,GAAG7F,WAAW,CAAE8F,QAAQ,IAAK;IAAA,IAAAC,iBAAA;IAChD,MAAMzC,OAAO,GAAG,GAAG1B,WAAW,CAACgE,WAAW,CAAC,CAAC,CAACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIe,QAAQ,EAAE;IACxE,OAAO,EAAAC,iBAAA,GAAAzD,QAAQ,CAACgB,OAAO,CAAC,cAAAyC,iBAAA,uBAAjBA,iBAAA,CAAmBC,SAAS,KAAI,KAAK;EAC9C,CAAC,EAAE,CAACpE,WAAW,EAAEU,QAAQ,CAAC,CAAC;EAE3B,MAAM2D,cAAc,GAAIH,QAAQ,IAAK;IACnC,MAAMI,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAM0B,OAAO,GAAG,GAAG4C,OAAO,IAAIJ,QAAQ,EAAE;IACxC,OAAOjD,YAAY,CAACS,OAAO,CAAC,IAAI,SAAS;EAC3C,CAAC;EAED,MAAM6C,iBAAiB,GAAIL,QAAQ,IAAK;IACtC,MAAMI,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAM0B,OAAO,GAAG,GAAG4C,OAAO,IAAIJ,QAAQ,EAAE;IACxChD,eAAe,CAACsD,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP,CAAC9C,OAAO,GAAG8C,IAAI,CAAC9C,OAAO,CAAC,KAAK,SAAS,GAAG,OAAO,GAAG;IACrD,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM+C,2BAA2B,GAAIC,IAAI,IAAK;IAC5C,MAAMC,kBAAkB,GAAGN,cAAc,CAACK,IAAI,CAACzF,IAAI,CAAC;IAEpD,OAAOyF,IAAI,CAACxF,KAAK,CAAC0F,GAAG,CAACC,IAAI,IAAI;MAC5B,IAAIA,IAAI,CAACC,QAAQ,EAAE;QACjB,OAAO;UACL,GAAGD,IAAI;UACPzF,OAAO,EAAEyF,IAAI,CAACC,QAAQ,CAACH,kBAAkB,CAAC,CAACvF,OAAO;UAClDC,QAAQ,EAAEwF,IAAI,CAACC,QAAQ,CAACH,kBAAkB,CAAC,CAACtF;QAC9C,CAAC;MACH;MACA,OAAOwF,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,cAAc,GAAG3G,WAAW,CAAC,MAAM;IAAA,IAAA4G,qBAAA,EAAAC,sBAAA;IACvC,MAAMC,UAAU,GAAGC,sBAAsB,CAAC,CAAC;IAC3C,MAAMC,mBAAmB,GAAGC,QAAQ,EAAAL,qBAAA,GAACxE,YAAY,CAACL,WAAW,CAAC,cAAA6E,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA2BlG,aAAa,cAAAmG,sBAAA,uBAAxCA,sBAAA,CAA0C9B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;IAErG,MAAMmC,iBAAiB,GAAGJ,UAAU,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEd,IAAI,KAAK;MACzD,IAAIT,eAAe,CAACS,IAAI,CAACzF,IAAI,CAAC,EAAE;QAC9B,MAAMC,KAAK,GAAGuF,2BAA2B,CAACC,IAAI,CAAC;QAC/C,OAAOc,GAAG,GAAGtG,KAAK,CAACqG,MAAM,CAAC,CAACE,GAAG,EAAEZ,IAAI,KAAKY,GAAG,IAAIZ,IAAI,CAACxF,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACzE;MACA,OAAOmG,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC;IAEL,MAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAEN,iBAAiB,GAAGF,mBAAmB,GAAI,GAAG,CAAC;IAE9E,OAAO;MACLhB,SAAS,EAAEkB,iBAAiB;MAC5BO,KAAK,EAAET,mBAAmB;MAC1BM,UAAU;MACVI,aAAa,EAAER,iBAAiB,GAAGF,mBAAmB;MACtDW,iBAAiB,EAAEJ,IAAI,CAACK,GAAG,CAACN,UAAU,EAAE,GAAG;IAC7C,CAAC;EACH,CAAC,EAAE,CAACvF,WAAW,EAAE8D,eAAe,EAAEkB,sBAAsB,EAAE3E,YAAY,CAAC,CAAC;EAExE,MAAMyF,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,WAAW,GAAGrD,MAAM,CAACsD,MAAM,CAAC3F,YAAY,CAAC,CAAC+E,MAAM,CAAC,CAACC,GAAG,EAAEnC,GAAG,KAAK;MACnE,MAAM+C,KAAK,GAAGf,QAAQ,CAAChC,GAAG,CAACxE,UAAU,CAAC,IAAI,CAAC;MAC3C,OAAO2G,GAAG,GAAGY,KAAK;IACpB,CAAC,EAAE,CAAC,CAAC;IAEL,MAAMC,cAAc,GAAGxD,MAAM,CAACsD,MAAM,CAAC3F,YAAY,CAAC,CAAC+E,MAAM,CAAC,CAACC,GAAG,EAAEnC,GAAG,KAAK;MACtE,MAAMhE,QAAQ,GAAGgG,QAAQ,CAAChC,GAAG,CAACvE,aAAa,CAAC,IAAI,CAAC;MACjD,OAAO0G,GAAG,GAAGnG,QAAQ;IACvB,CAAC,EAAE,CAAC,CAAC;IAEL,OAAO;MACLiH,cAAc,EAAEX,IAAI,CAACC,KAAK,CAACM,WAAW,GAAG,CAAC,CAAC;MAC3CK,iBAAiB,EAAEZ,IAAI,CAACC,KAAK,CAACS,cAAc,GAAG,CAAC,CAAC;MACjDG,eAAe,EAAEb,IAAI,CAACC,KAAK,CAACM,WAAW,GAAG,CAAC,GAAG,EAAE,CAAC;MACjDO,kBAAkB,EAAEd,IAAI,CAACC,KAAK,CAACS,cAAc,GAAG,CAAC,GAAG,EAAE;IACxD,CAAC;EACH,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACC,SAAS,EAAEC,UAAU,EAAEC,YAAY,KAAK;IAC9D,MAAMC,WAAW,GAAGtG,YAAY,CAACL,WAAW,CAAC,CAACnB,KAAK,CAAC2H,SAAS,CAAC;IAC9D,MAAMI,OAAO,GAAGvG,YAAY,CAACoG,UAAU,CAAC,CAAC5H,KAAK,CAAC6H,YAAY,CAAC;IAE5D,IAAIE,OAAO,EAAE;MAAA,IAAAC,kBAAA;MACX,MAAM1C,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;MACvC,MAAM0B,OAAO,GAAG,GAAG4C,OAAO,IAAIwC,WAAW,CAAC7H,IAAI,EAAE;MAChD,MAAMgI,YAAY,GAAG,EAAAD,kBAAA,GAAAtG,QAAQ,CAACgB,OAAO,CAAC,cAAAsF,kBAAA,uBAAjBA,kBAAA,CAAmB5C,SAAS,KAAI,KAAK;MAE1D3D,eAAe,CAAC+D,IAAI,IAAI;QACtB,MAAM0C,WAAW,GAAG;UAAE,GAAG1C;QAAK,CAAC;QAC/B,MAAM2C,YAAY,GAAG,CAAC,GAAG3C,IAAI,CAACrE,WAAW,CAAC,CAACnB,KAAK,CAAC;QACjDmI,YAAY,CAACR,SAAS,CAAC,GAAG;UACxB,GAAGI,OAAO;UACV9H,IAAI,EAAE6H,WAAW,CAAC7H;QACpB,CAAC;QACDiI,WAAW,CAAC/G,WAAW,CAAC,GAAG;UACzB,GAAGqE,IAAI,CAACrE,WAAW,CAAC;UACpBnB,KAAK,EAAEmI;QACT,CAAC;QACD,OAAOD,WAAW;MACpB,CAAC,CAAC;MAEFvG,WAAW,CAAC6D,IAAI,KAAK;QACnB,GAAGA,IAAI;QACP,CAAC9C,OAAO,GAAG;UACT,GAAG8C,IAAI,CAAC9C,OAAO,CAAC;UAChB0C,SAAS,EAAE6C;QACb;MACF,CAAC,CAAC,CAAC;IACL;IAEAlF,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMqF,oBAAoB,GAAIlD,QAAQ,IAAK;IACzC,MAAMI,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAM0B,OAAO,GAAG,GAAG4C,OAAO,IAAIJ,QAAQ,EAAE;IACxCvD,WAAW,CAAC6D,IAAI;MAAA,IAAA6C,aAAA;MAAA,OAAK;QACnB,GAAG7C,IAAI;QACP,CAAC9C,OAAO,GAAG;UACT,GAAG8C,IAAI,CAAC9C,OAAO,CAAC;UAChB0C,SAAS,EAAE,GAAAiD,aAAA,GAAC7C,IAAI,CAAC9C,OAAO,CAAC,cAAA2F,aAAA,eAAbA,aAAA,CAAejD,SAAS;QACtC;MACF,CAAC;IAAA,CAAC,CAAC;EACL,CAAC;EAED,MAAMkD,iBAAiB,GAAIpD,QAAQ,IAAK;IACtC,MAAMI,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAM0B,OAAO,GAAG,GAAG4C,OAAO,IAAIJ,QAAQ,EAAE;IACxC1C,eAAe,CAAC;MACdC,MAAM,EAAE,IAAI;MACZC,OAAO;MACPC,OAAO,EAAEN,YAAY,CAACK,OAAO,CAAC,IAAI;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAM6F,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIhG,YAAY,CAACG,OAAO,EAAE;MACxBJ,eAAe,CAACkD,IAAI,KAAK;QACvB,GAAGA,IAAI;QACP,CAACjD,YAAY,CAACG,OAAO,GAAGH,YAAY,CAACI;MACvC,CAAC,CAAC,CAAC;MACHH,eAAe,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAM6F,eAAe,GAAIC,OAAO,IAAK;IACnC,MAAMC,SAAS,GAAGD,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC;IACjE,IAAI,CAACD,SAAS,EAAE,OAAO,OAAO;IAE9B,IAAI,CAACE,CAAC,EAAEC,KAAK,EAAEC,OAAO,GAAG,IAAI,EAAEC,QAAQ,CAAC,GAAGL,SAAS;IACpDG,KAAK,GAAGxC,QAAQ,CAACwC,KAAK,CAAC;IAEvB,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChBA,KAAK,GAAGE,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC;IAClD,CAAC,MAAM,IAAID,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAK,IAAI,EAAE;MAC1CH,KAAK,GAAGA,KAAK,GAAG,EAAE;IACpB;IAEA,OAAO,GAAGA,KAAK,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,OAAO,EAAE;EAC1D,CAAC;EAED,MAAMK,mBAAmB,GAAG/J,WAAW,CAAC,MAAM;IAC5C,MAAMgK,SAAS,GAAG,EAAE;IACpBvF,MAAM,CAACsD,MAAM,CAAC3F,YAAY,CAAC,CAACuC,OAAO,CAACM,GAAG,IAAI;MACzCA,GAAG,CAACrE,KAAK,CAAC+D,OAAO,CAAC2B,IAAI,IAAI;QACxB,IAAI,CAAC0D,SAAS,CAACC,IAAI,CAACC,CAAC,IACnBvH,IAAI,CAAC2B,SAAS,CAAC4F,CAAC,CAACpJ,KAAK,CAAC,KAAK6B,IAAI,CAAC2B,SAAS,CAACgC,IAAI,CAACxF,KAAK,CACvD,CAAC,EAAE;UACDkJ,SAAS,CAACG,IAAI,CAAC;YACbrJ,KAAK,EAAEwF,IAAI,CAACxF,KAAK;YACjBsJ,WAAW,EAAE9D,IAAI,CAACxF,KAAK,CAAC0F,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC1F,IAAI,CAAC,CAACsJ,IAAI,CAAC,IAAI;UAC1D,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOL,SAAS;EAClB,CAAC,EAAE,CAAC5H,YAAY,CAAC,CAAC;EAElB,MAAM2E,sBAAsB,GAAG/G,WAAW,CAAC,MAAM;IAAA,IAAAsK,sBAAA;IAC/C,MAAMpE,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAM2I,YAAY,GAAG,EAAAD,sBAAA,GAAAlI,YAAY,CAACL,WAAW,CAAC,cAAAuI,sBAAA,uBAAzBA,sBAAA,CAA2B1J,KAAK,KAAI,EAAE;IAC3D,MAAM4J,iBAAiB,GAAGzH,UAAU,CAACmD,OAAO,CAAC,IAAI,EAAE;;IAEnD;IACA,OAAO,CAAC,GAAGqE,YAAY,EAAE,GAAGC,iBAAiB,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC5D,MAAMC,KAAK,GAAGxB,eAAe,CAACsB,CAAC,CAAC7J,IAAI,CAAC;MACrC,MAAMgK,KAAK,GAAGzB,eAAe,CAACuB,CAAC,CAAC9J,IAAI,CAAC;MACrC,OAAO+J,KAAK,CAACE,aAAa,CAACD,KAAK,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjJ,WAAW,EAAEG,WAAW,EAAEK,YAAY,EAAEW,UAAU,CAAC,CAAC;EAExD,MAAMgI,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACjH,WAAW,IAAI,CAACE,oBAAoB,EAAE;IAE3C,MAAMgH,gBAAgB,GAAGjB,mBAAmB,CAAC,CAAC,CAACkB,IAAI,CAACf,CAAC,IACnDA,CAAC,CAACE,WAAW,KAAKpG,oBACpB,CAAC;IAED,IAAI,CAACgH,gBAAgB,EAAE;IAEvB,MAAM9E,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IAEvCoB,aAAa,CAACoD,IAAI,KAAK;MACrB,GAAGA,IAAI;MACP,CAACF,OAAO,GAAG,CACT,IAAIE,IAAI,CAACF,OAAO,CAAC,IAAI,EAAE,CAAC,EACxB;QACErF,IAAI,EAAEiD,WAAW;QACjBhD,KAAK,EAAEkK,gBAAgB,CAAClK,KAAK;QAC7BoK,OAAO,EAAE;MACX,CAAC,CACF,CAACT,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACf,MAAMC,KAAK,GAAGxB,eAAe,CAACsB,CAAC,CAAC7J,IAAI,CAAC;QACrC,MAAMgK,KAAK,GAAGzB,eAAe,CAACuB,CAAC,CAAC9J,IAAI,CAAC;QACrC,OAAO+J,KAAK,CAACE,aAAa,CAACD,KAAK,CAAC;MACnC,CAAC;IACH,CAAC,CAAC,CAAC;IAEHhH,cAAc,CAAC,KAAK,CAAC;IACrBE,cAAc,CAAC,UAAU,CAAC;IAC1BE,uBAAuB,CAAC,EAAE,CAAC;EAC7B,CAAC;EAED,MAAMkH,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMlF,OAAO,GAAGP,UAAU,CAAC/D,WAAW,CAAC;IACvC,MAAMyJ,QAAQ,GAAGtE,sBAAsB,CAAC,CAAC;IACzC,MAAMuE,YAAY,GAAGD,QAAQ,CAACD,KAAK,CAAC;;IAEpC;IACA,IAAI,CAACE,YAAY,CAACJ,OAAO,EAAE;IAE3BlI,aAAa,CAACoD,IAAI,IAAI;MACpB,MAAMmF,gBAAgB,GAAG,CAACnF,IAAI,CAACF,OAAO,CAAC,IAAI,EAAE,EAAEsF,MAAM,CAAClF,IAAI,IACxDA,IAAI,CAACzF,IAAI,KAAKyK,YAAY,CAACzK,IAAI,IAC/B8B,IAAI,CAAC2B,SAAS,CAACgC,IAAI,CAACxF,KAAK,CAAC,KAAK6B,IAAI,CAAC2B,SAAS,CAACgH,YAAY,CAACxK,KAAK,CAClE,CAAC;MAED,MAAM2K,aAAa,GAAG;QAAE,GAAGrF;MAAK,CAAC;MACjC,IAAImF,gBAAgB,CAACG,MAAM,KAAK,CAAC,EAAE;QACjC,OAAOD,aAAa,CAACvF,OAAO,CAAC;MAC/B,CAAC,MAAM;QACLuF,aAAa,CAACvF,OAAO,CAAC,GAAGqF,gBAAgB;MAC3C;MAEA,OAAOE,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;EAC3F,MAAMC,KAAK,GAAGjF,cAAc,CAAC,CAAC;EAE9B,MAAMkF,SAAS,GAAGA,CAAA,KAAM;IAAAnK,EAAA;IACtB,MAAMkK,KAAK,GAAGjF,cAAc,CAAC,CAAC;IAC9B,MAAMmF,SAAS,GAAG7L,OAAO,CAAC,MAAM;MAC9B;MACA,MAAM8L,SAAS,GAAG,IAAIjK,IAAI,CAACF,WAAW,CAAC;MACvCmK,SAAS,CAACC,OAAO,CAACpK,WAAW,CAACqK,OAAO,CAAC,CAAC,GAAGrK,WAAW,CAACsD,MAAM,CAAC,CAAC,CAAC;;MAE/D;MACA,MAAMgH,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEV,MAAM,EAAE;MAAE,CAAC,EAAE,CAAClC,CAAC,EAAE6C,CAAC,KAAK;QAAA,IAAAC,qBAAA;QACnD,MAAMtH,IAAI,GAAG,IAAIlD,IAAI,CAACiK,SAAS,CAAC;QAChC/G,IAAI,CAACgH,OAAO,CAACD,SAAS,CAACE,OAAO,CAAC,CAAC,GAAGI,CAAC,CAAC;QACrC,MAAME,MAAM,GAAG5G,UAAU,CAACX,IAAI,CAAC;QAC/B,MAAM/C,OAAO,GAAG+C,IAAI,CAAC9C,kBAAkB,CAAC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAO,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;QAEnF,MAAMqK,QAAQ,GAAG,EAAAF,qBAAA,GAAAlK,YAAY,CAACH,OAAO,CAAC,cAAAqK,qBAAA,uBAArBA,qBAAA,CAAuB1L,KAAK,KAAI,EAAE;QACnD,MAAMoF,SAAS,GAAGwG,QAAQ,CAAChB,MAAM,CAAClF,IAAI,IAAI;UAAA,IAAAmG,kBAAA;UACxC,MAAMnJ,OAAO,GAAG,GAAGiJ,MAAM,IAAIjG,IAAI,CAACzF,IAAI,EAAE;UACxC,OAAO,EAAA4L,kBAAA,GAAAnK,QAAQ,CAACgB,OAAO,CAAC,cAAAmJ,kBAAA,uBAAjBA,kBAAA,CAAmBzG,SAAS,KAAI,KAAK;QAC9C,CAAC,CAAC,CAAC0F,MAAM;QAET,OAAO;UACL1F,SAAS;UACTyB,KAAK,EAAE+E,QAAQ,CAACd;QAClB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,OAAOQ,QAAQ,CAAC/E,MAAM,CAAC,CAACC,GAAG,EAAEnC,GAAG,MAAM;QACpCe,SAAS,EAAEoB,GAAG,CAACpB,SAAS,GAAGf,GAAG,CAACe,SAAS;QACxCyB,KAAK,EAAEL,GAAG,CAACK,KAAK,GAAGxC,GAAG,CAACwC;MACzB,CAAC,CAAC,EAAE;QAAEzB,SAAS,EAAE,CAAC;QAAEyB,KAAK,EAAE;MAAE,CAAC,CAAC;IACjC,CAAC,EAAE,CAAC7F,WAAW,EAAEU,QAAQ,EAAEF,YAAY,CAAC,CAAC;IAEzC,MAAMsK,cAAc,GAAGZ,SAAS,CAACrE,KAAK,GAAG,CAAC,GACtCF,IAAI,CAACC,KAAK,CAAEsE,SAAS,CAAC9F,SAAS,GAAG8F,SAAS,CAACrE,KAAK,GAAI,GAAG,CAAC,GACzD,CAAC;IAEL,MAAMkF,gBAAgB,GAAIrF,UAAU,IAAK;MACvC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAE;MACzC,IAAIA,UAAU,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAE;MACzC,OAAO,SAAS,CAAC,CAAE;IACrB,CAAC;IAED,oBACElH,OAAA;MAAKwM,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBzM,OAAA;QAAKwM,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BzM,OAAA;UAAKwM,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzM,OAAA;YAAAyM,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB7M,OAAA;YAAKwM,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCzM,OAAA;cAAKwM,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BzM,OAAA;gBAAAyM,QAAA,EAAM;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrB7M,OAAA;gBAAMwM,SAAS,EAAEhB,KAAK,CAAClE,aAAa,GAAG,gBAAgB,GAAG,EAAG;gBAAAmF,QAAA,GAC1DjB,KAAK,CAAC5F,SAAS,EAAC,GAAC,EAAC4F,KAAK,CAACnE,KAAK,EAAC,IAAE,EAACmE,KAAK,CAACtE,UAAU,EAAC,IACrD;cAAA;gBAAAwF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BzM,OAAA;gBACEwM,SAAS,EAAE,iBAAiBhB,KAAK,CAAClE,aAAa,GAAG,gBAAgB,GAAG,EAAE,EAAG;gBAC1EwF,KAAK,EAAE;kBACLC,KAAK,EAAE,GAAGvB,KAAK,CAACjE,iBAAiB,GAAG;kBACpCyF,eAAe,EAAExB,KAAK,CAAClE,aAAa,GAAG,SAAS,GAAGiF,gBAAgB,CAACf,KAAK,CAACtE,UAAU;gBACtF;cAAE;gBAAAwF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN7M,OAAA;UAAKwM,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzM,OAAA;YAAAyM,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxB7M,OAAA;YAAKwM,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCzM,OAAA;cAAKwM,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BzM,OAAA;gBAAAyM,QAAA,EAAM;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvB7M,OAAA;gBAAAyM,QAAA,GAAOf,SAAS,CAAC9F,SAAS,EAAC,GAAC,EAAC8F,SAAS,CAACrE,KAAK,EAAC,IAAE,EAACiF,cAAc,EAAC,IAAE;cAAA;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eACN7M,OAAA;cAAKwM,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BzM,OAAA;gBACEwM,SAAS,EAAC,eAAe;gBACzBM,KAAK,EAAE;kBACLC,KAAK,EAAE,GAAGT,cAAc,GAAG;kBAC3BU,eAAe,EAAET,gBAAgB,CAACD,cAAc;gBAClD;cAAE;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAACvL,EAAA,CAxFImK,SAAS;EA0Ff,MAAMwB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAClK,YAAY,CAACE,MAAM,EAAE,OAAO,IAAI;IAErC,oBACEjD,OAAA;MAAKwM,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBzM,OAAA;QAAKwM,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BzM,OAAA;UAAAyM,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB7M,OAAA;UACEkN,KAAK,EAAEnK,YAAY,CAACI,OAAQ;UAC5BgK,QAAQ,EAAGC,CAAC,IAAKpK,eAAe,CAACgD,IAAI,KAAK;YACxC,GAAGA,IAAI;YACP7C,OAAO,EAAEiK,CAAC,CAACjI,MAAM,CAAC+H;UACpB,CAAC,CAAC,CAAE;UACJG,WAAW,EAAC;QAAuB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACF7M,OAAA;UAAKwM,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzM,OAAA;YAAQsN,OAAO,EAAEvE,iBAAkB;YAAA0D,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjD7M,OAAA;YAAQsN,OAAO,EAAEA,CAAA,KAAMtK,eAAe,CAAC;cAAEC,MAAM,EAAE,KAAK;cAAEC,OAAO,EAAE,IAAI;cAAEC,OAAO,EAAE;YAAG,CAAC,CAAE;YAAAsJ,QAAA,EAAC;UAEvF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,oBACE7M,OAAA;IAAKwM,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BzM,OAAA;MAAQwM,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACxBzM,OAAA;QAAAyM,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE/B7M,OAAA;QAAKwM,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BzM,OAAA;UAAQsN,OAAO,EAAEA,CAAA,KAAM7L,cAAc,CAACuE,IAAI,IAAI;YAC5C,MAAMuH,OAAO,GAAG,IAAI7L,IAAI,CAACsE,IAAI,CAAC;YAC9BuH,OAAO,CAAC3B,OAAO,CAAC5F,IAAI,CAAC6F,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO0B,OAAO;UAChB,CAAC,CAAE;UAAAd,QAAA,EAAC;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET7M,OAAA;UAAAyM,QAAA,EAAKjL,WAAW,CAACM,kBAAkB,CAAC,OAAO,EAAE;YAC3CD,OAAO,EAAE,OAAO;YAChB2L,KAAK,EAAE,OAAO;YACd3I,GAAG,EAAE,SAAS;YACd4I,IAAI,EAAE;UACR,CAAC;QAAC;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAER7M,OAAA;UAAQsN,OAAO,EAAEA,CAAA,KAAM7L,cAAc,CAACuE,IAAI,IAAI;YAC5C,MAAMuH,OAAO,GAAG,IAAI7L,IAAI,CAACsE,IAAI,CAAC;YAC9BuH,OAAO,CAAC3B,OAAO,CAAC5F,IAAI,CAAC6F,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO0B,OAAO;UAChB,CAAC,CAAE;UAAAd,QAAA,EAAC;QAEJ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAET7M,OAAA,CAACyL,SAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEb7M,OAAA;MAAKwM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BzM,OAAA;QAAIwM,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEzK,YAAY,CAACL,WAAW,CAAC,CAACxB;MAAI;QAAAuM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE/D7M,OAAA;QAAKwM,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBzK,YAAY,CAACL,WAAW,CAAC,CAACvB,KAAK,CAACgG,GAAG,CAAC,CAACsH,IAAI,EAAE1C,KAAK,kBAC/ChL,OAAA;UAAkBwM,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAEiB;QAAI,GAAjC1C,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN7M,OAAA;QAAKwM,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBzM,OAAA;UAAKwM,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBzM,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7C7M,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEzK,YAAY,CAACL,WAAW,CAAC,CAACtB;UAAU;YAAAqM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eACN7M,OAAA;UAAKwM,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBzM,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChD7M,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEzK,YAAY,CAACL,WAAW,CAAC,CAACrB;UAAa;YAAAoM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACN7M,OAAA;UAAKwM,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBzM,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9C7M,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEzK,YAAY,CAACL,WAAW,CAAC,CAACpB;UAAK;YAAAmM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACN7M,OAAA;UAAKwM,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBzM,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5C7M,OAAA;YAAKwM,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEjB,KAAK,CAACtE,UAAU,EAAC,GAAC;UAAA;YAAAwF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN7M,OAAA;MAAKwM,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvB9F,sBAAsB,CAAC,CAAC,CAACP,GAAG,CAAC,CAACF,IAAI,EAAE8E,KAAK,kBACxChL,OAAA;QAAiBwM,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACpCzM,OAAA;UAAKwM,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BzM,OAAA;YAAAyM,QAAA,EAAKvG,IAAI,CAACzF;UAAI;YAAAiM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB7M,OAAA;YAAKwM,SAAS,EAAC,cAAc;YAAAC,QAAA,GAC1BvG,IAAI,CAAC4E,OAAO,iBACX9K,OAAA;cACEwM,SAAS,EAAC,eAAe;cACzBc,OAAO,EAAEA,CAAA,KAAMvC,gBAAgB,CAACC,KAAK,CAAE;cAAAyB,QAAA,EACxC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,eACD7M,OAAA;cACEwM,SAAS,EAAC,gBAAgB;cAC1Bc,OAAO,EAAEA,CAAA,KAAMvH,iBAAiB,CAACG,IAAI,CAACzF,IAAI,CAAE;cAAAgM,QAAA,EAE3C5G,cAAc,CAACK,IAAI,CAACzF,IAAI,CAAC,KAAK,SAAS,GAAG,iBAAiB,GAAG;YAAe;cAAAiM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,eACT7M,OAAA;cACE2N,GAAG,EAAE3C,KAAK,KAAK1H,cAAc,GAAGU,aAAa,GAAG,IAAK;cACrDwI,SAAS,EAAC,aAAa;cACvBc,OAAO,EAAEA,CAAA,KAAM/J,iBAAiB,CAACD,cAAc,KAAK0H,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAE;cAAAyB,QAAA,gBAE1EzM,OAAA;gBAAK4N,KAAK,EAAC,4BAA4B;gBAACC,OAAO,EAAC,WAAW;gBAACC,IAAI,EAAC,cAAc;gBAAArB,QAAA,eAC7EzM,OAAA;kBAAM+N,CAAC,EAAC;gBAAsO;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9O,CAAC,QAER;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRvJ,cAAc,KAAK0H,KAAK,iBACvBhL,OAAA;cAAK2N,GAAG,EAAE5J,WAAY;cAACyI,SAAS,EAAC,WAAW;cAAAC,QAAA,gBAC1CzM,OAAA;gBAAKwM,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/BzM,OAAA;kBAAAyM,QAAA,EAAI;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClB7M,OAAA;kBACEwM,SAAS,EAAC,cAAc;kBACxBc,OAAO,EAAEA,CAAA,KAAM/J,iBAAiB,CAAC,IAAI,CAAE;kBAAAkJ,QAAA,EACxC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,EACLtB,IAAI,CACFH,MAAM,CAACvG,GAAG,IAAIA,GAAG,KAAKlD,WAAW,CAAC,CAClCyE,GAAG,CAACvB,GAAG,iBACN7E,OAAA;gBAAewM,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBACzCzM,OAAA;kBAAKwM,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAAE5H,GAAG,CAACmJ,MAAM,CAAC,CAAC,CAAC,CAACxE,WAAW,CAAC,CAAC,GAAG3E,GAAG,CAACoJ,KAAK,CAAC,CAAC;gBAAC;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAClF7K,YAAY,CAAC6C,GAAG,CAAC,CAACrE,KAAK,CAAC4F,GAAG,CAAC,CAAC8H,QAAQ,EAAEC,SAAS,kBAC/CnO,OAAA;kBAEEwM,SAAS,EAAC,gBAAgB;kBAC1Bc,OAAO,EAAEA,CAAA,KAAMpF,cAAc,CAAC8C,KAAK,EAAEnG,GAAG,EAAEsJ,SAAS,CAAE;kBAAA1B,QAAA,eAErDzM,OAAA;oBAAKwM,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,gBAC7BzM,OAAA;sBAAKwM,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,EAAEyB,QAAQ,CAACzN;oBAAI;sBAAAiM,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACrD7M,OAAA;sBAAKwM,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,EAC7ByB,QAAQ,CAACxN,KAAK,CAAC0F,GAAG,CAACC,IAAI,IAAIA,IAAI,CAAC1F,IAAI,CAAC,CAACsJ,IAAI,CAAC,IAAI;oBAAC;sBAAAyC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9C,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC,GATD,GAAGhI,GAAG,IAAIsJ,SAAS,EAAE;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUvB,CACN,CAAC;cAAA,GAfMhI,GAAG;gBAAA6H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBR,CACN,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACN,eACD7M,OAAA;cACEG,IAAI,EAAC,UAAU;cACfqM,SAAS,EAAC,eAAe;cACzB4B,OAAO,EAAE3I,eAAe,CAACS,IAAI,CAACzF,IAAI,CAAE;cACpC0M,QAAQ,EAAEA,CAAA,KAAMvE,oBAAoB,CAAC1C,IAAI,CAACzF,IAAI;YAAE;cAAAiM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN7M,OAAA;UAAOwM,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC3BzM,OAAA;YAAAyM,QAAA,eACEzM,OAAA;cAAAyM,QAAA,gBACEzM,OAAA;gBAAAyM,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACb7M,OAAA;gBAAAyM,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChB7M,OAAA;gBAAAyM,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR7M,OAAA;YAAAyM,QAAA,EACGxG,2BAA2B,CAACC,IAAI,CAAC,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEgI,SAAS,kBACrDrO,OAAA;cAAAyM,QAAA,gBACEzM,OAAA;gBAAAyM,QAAA,EAAKpG,IAAI,CAAC1F;cAAI;gBAAA+L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpB7M,OAAA;gBAAAyM,QAAA,EAAKpG,IAAI,CAACzF;cAAO;gBAAA8L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvB7M,OAAA;gBAAAyM,QAAA,GAAKpG,IAAI,CAACxF,QAAQ,EAAC,OAAK;cAAA;gBAAA6L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,GAHtBwB,SAAS;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAId,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAvFA7B,KAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAwFV,CACN,CAAC,eAEF7M,OAAA;QACEwM,SAAS,EAAC,iBAAiB;QAC3Bc,OAAO,EAAEA,CAAA,KAAM7J,cAAc,CAAC,IAAI,CAAE;QAAAgJ,QAAA,EACrC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7M,OAAA,CAACiN,YAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEfrJ,WAAW,iBACVxD,OAAA;MAAKwM,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBzM,OAAA;QAAKwM,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BzM,OAAA;UAAAyM,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB7M,OAAA;UAAKwM,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BzM,OAAA;YAAAyM,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B7M,OAAA;YACEkN,KAAK,EAAExJ,WAAY;YACnByJ,QAAQ,EAAGC,CAAC,IAAKzJ,cAAc,CAACyJ,CAAC,CAACjI,MAAM,CAAC+H,KAAK,CAAE;YAChDV,SAAS,EAAC,aAAa;YAAAC,QAAA,EAEtB3I,WAAW,CAACsC,GAAG,CAAC3F,IAAI,iBACnBT,OAAA;cAAmBkN,KAAK,EAAEzM,IAAK;cAAAgM,QAAA,EAAEhM;YAAI,GAAxBA,IAAI;cAAAiM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA6B,CAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7M,OAAA;UAAKwM,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BzM,OAAA;YAAAyM,QAAA,EAAO;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1B7M,OAAA;YACEkN,KAAK,EAAEtJ,oBAAqB;YAC5BuJ,QAAQ,EAAGC,CAAC,IAAKvJ,uBAAuB,CAACuJ,CAAC,CAACjI,MAAM,CAAC+H,KAAK,CAAE;YACzDV,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAEvBzM,OAAA;cAAQkN,KAAK,EAAC,EAAE;cAAAT,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACzClD,mBAAmB,CAAC,CAAC,CAACvD,GAAG,CAAC,CAACkI,QAAQ,EAAEtD,KAAK,kBACzChL,OAAA;cAAoBkN,KAAK,EAAEoB,QAAQ,CAACtE,WAAY;cAAAyC,QAAA,EAC7C6B,QAAQ,CAACtE;YAAW,GADVgB,KAAK;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN7M,OAAA;UAAKwM,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BzM,OAAA;YAAQsN,OAAO,EAAE3C,aAAc;YAAA8B,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjD7M,OAAA;YAAQsN,OAAO,EAAEA,CAAA,KAAM;cACrB7J,cAAc,CAAC,KAAK,CAAC;cACrBE,cAAc,CAAC,UAAU,CAAC;cAC1BE,uBAAuB,CAAC,EAAE,CAAC;YAC7B,CAAE;YAAA4I,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxL,GAAA,CA9qBID,WAAW;AAAAmN,EAAA,GAAXnN,WAAW;AAgrBjB,eAAeA,WAAW;AAAC,IAAAmN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}