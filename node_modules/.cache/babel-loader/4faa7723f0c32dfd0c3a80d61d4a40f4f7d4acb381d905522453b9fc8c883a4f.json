{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~11 AM)',\n      items: [{\n        name: 'Beef (or Chicken) + Butter',\n        portions: {\n          regular: {\n            portion: '8-10 oz + 1 tbsp butter',\n            calories: 600\n          },\n          large: {\n            portion: '10-12 oz + 1 tbsp butter',\n            calories: 750\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Mahi Mahi OR Tuna',\n        portions: {\n          regular: {\n            portion: '8-10 oz',\n            calories: 400\n          },\n          large: {\n            portion: '10-12 oz',\n            calories: 500\n          }\n        }\n      }, {\n        name: 'Eggs + Butter',\n        portions: {\n          regular: {\n            portion: '2 eggs + 1 tbsp butter',\n            calories: 260\n          },\n          large: {\n            portion: '3 eggs + 1 tbsp butter',\n            calories: 360\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portions: {\n          regular: {\n            portion: '4 oz',\n            calories: 350\n          },\n          large: {\n            portion: '6 oz',\n            calories: 450\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Chamomile OR Lemon Balm Tea',\n        portion: '1 cup',\n        calories: 0\n      }]\n    }]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4 oz chicken liver',\n    meals: [{\n      time: 'Pre-Walk (~10 AM)',\n      items: [{\n        name: 'Honey',\n        portion: '1 tsp',\n        calories: 20\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Butter',\n        portions: {\n          regular: {\n            portion: '3 eggs + 1 tbsp butter',\n            calories: 400\n          },\n          large: {\n            portion: '4 eggs + 1.5 tbsp butter',\n            calories: 550\n          }\n        }\n      }, {\n        name: 'Fresh Fish',\n        portions: {\n          regular: {\n            portion: '8-10 oz',\n            calories: 350\n          },\n          large: {\n            portion: '10-12 oz',\n            calories: 450\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Avocado',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ avocado',\n            calories: 600\n          },\n          large: {\n            portion: '10-12 oz + ½ avocado',\n            calories: 750\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken Liver',\n        portions: {\n          regular: {\n            portion: '4 oz',\n            calories: 300\n          },\n          large: {\n            portion: '6 oz',\n            calories: 450\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }]\n    }]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portions: {\n          regular: {\n            portion: '1 tbsp honey + ½ banana',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp honey + 1 banana',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ cup',\n            calories: 550\n          },\n          large: {\n            portion: '10-12 oz + ¾ cup',\n            calories: 700\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ cup rice',\n            calories: 550\n          },\n          large: {\n            portion: '10-12 oz + ¾ cup rice',\n            calories: 700\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Banana/Pineapple',\n        portions: {\n          regular: {\n            portion: '½ fruit',\n            calories: 50\n          },\n          large: {\n            portion: '1 fruit',\n            calories: 100\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ avocado',\n            calories: 450\n          },\n          large: {\n            portion: '10-12 oz + ½ avocado',\n            calories: 570\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Eggs',\n        portions: {\n          regular: {\n            portion: '2 eggs',\n            calories: 160\n          },\n          large: {\n            portion: '3 eggs',\n            calories: 240\n          }\n        }\n      }]\n    }]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portions: {\n          regular: {\n            portion: '3 eggs + 8-10 oz fish',\n            calories: 500\n          },\n          large: {\n            portion: '3 eggs + 10-12 oz fish',\n            calories: 650\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter + Sauerkraut',\n        portions: {\n          regular: {\n            portion: '8-10 oz + 1 tbsp butter',\n            calories: 600\n          },\n          large: {\n            portion: '10-12 oz + 1 tbsp butter',\n            calories: 750\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portions: {\n          regular: {\n            portion: '4 oz',\n            calories: 350\n          },\n          large: {\n            portion: '6 oz',\n            calories: 450\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }]\n    }]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portions: {\n          regular: {\n            portion: '3 eggs + 8-10 oz fish',\n            calories: 500\n          },\n          large: {\n            portion: '3 eggs + 10-12 oz fish',\n            calories: 650\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portions: {\n          regular: {\n            portion: '8-10 oz + 1 tbsp butter',\n            calories: 600\n          },\n          large: {\n            portion: '10-12 oz + 1 tbsp butter',\n            calories: 750\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portions: {\n          regular: {\n            portion: '4 oz',\n            calories: 350\n          },\n          large: {\n            portion: '6 oz',\n            calories: 450\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }]\n    }]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portions: {\n          regular: {\n            portion: '1 tbsp honey + ½ banana',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp honey + 1 banana',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ cup',\n            calories: 550\n          },\n          large: {\n            portion: '10-12 oz + ¾ cup',\n            calories: 700\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ cup rice',\n            calories: 550\n          },\n          large: {\n            portion: '10-12 oz + ¾ cup rice',\n            calories: 700\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Banana/Pineapple',\n        portions: {\n          regular: {\n            portion: '½ fruit',\n            calories: 50\n          },\n          large: {\n            portion: '1 fruit',\n            calories: 100\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ avocado',\n            calories: 450\n          },\n          large: {\n            portion: '10-12 oz + ½ avocado',\n            calories: 570\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Eggs',\n        portions: {\n          regular: {\n            portion: '2 eggs',\n            calories: 160\n          },\n          large: {\n            portion: '3 eggs',\n            calories: 240\n          }\n        }\n      }]\n    }]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: 'None',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portions: {\n          regular: {\n            portion: '1 tbsp coconut oil',\n            calories: 120\n          },\n          large: {\n            portion: '1.5 tbsp coconut oil',\n            calories: 180\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portions: {\n          regular: {\n            portion: '3 eggs + 8-10 oz fish',\n            calories: 500\n          },\n          large: {\n            portion: '3 eggs + 10-12 oz fish',\n            calories: 650\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portions: {\n          regular: {\n            portion: '8-10 oz + 1 tbsp butter',\n            calories: 600\n          },\n          large: {\n            portion: '10-12 oz + 1 tbsp butter',\n            calories: 750\n          }\n        }\n      }, {\n        name: 'Avocado',\n        portions: {\n          regular: {\n            portion: '½ medium',\n            calories: 120\n          },\n          large: {\n            portion: '1 medium',\n            calories: 240\n          }\n        }\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken + Avocado',\n        portions: {\n          regular: {\n            portion: '8-10 oz + ½ avocado',\n            calories: 450\n          },\n          large: {\n            portion: '10-12 oz + ½ avocado',\n            calories: 570\n          }\n        }\n      }, {\n        name: 'Butter',\n        portions: {\n          regular: {\n            portion: '1 tbsp',\n            calories: 100\n          },\n          large: {\n            portion: '1.5 tbsp',\n            calories: 150\n          }\n        }\n      }, {\n        name: 'Eggs',\n        portions: {\n          regular: {\n            portion: '2 eggs',\n            calories: 160\n          },\n          large: {\n            portion: '3 eggs',\n            calories: 240\n          }\n        }\n      }]\n    }]\n  }\n};\nconst MealPlanner = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [portionSizes, setPortionSizes] = useState(() => {\n    const saved = localStorage.getItem('portionSizes');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [addedMeals, setAddedMeals] = useState(() => {\n    const saved = localStorage.getItem('addedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [selectedMealTemplate, setSelectedMealTemplate] = useState('');\n  const timeOptions = ['6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM', '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  useEffect(() => {\n    localStorage.setItem('portionSizes', JSON.stringify(portionSizes));\n  }, [portionSizes]);\n  useEffect(() => {\n    localStorage.setItem('addedMeals', JSON.stringify(addedMeals));\n  }, [addedMeals]);\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n  useEffect(() => {\n    // Clean up any unwanted meals from localStorage\n    const cleanupMealData = () => {\n      const updatedMealData = {\n        ...mealData\n      };\n      Object.keys(updatedMealData).forEach(key => {\n        if (key.includes('2:00 PM')) {\n          const [dateStr] = key.split('-');\n          const date = new Date(dateStr);\n          const day = date.getDay();\n          if (day === 6) {\n            delete updatedMealData[key];\n          }\n        }\n      });\n      setMealData(updatedMealData);\n    };\n    cleanupMealData();\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (activeMealSwap !== null && swapMenuRef.current && !swapMenuRef.current.contains(event.target) && swapButtonRef.current && !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const convertTo24Hour = time12h => {\n    const timeMatch = time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);\n    if (!timeMatch) return '00:00';\n    let [_, hours, minutes = '00', modifier] = timeMatch;\n    hours = parseInt(hours);\n    if (hours === 12) {\n      hours = modifier.toUpperCase() === 'PM' ? 12 : 0;\n    } else if (modifier.toUpperCase() === 'PM') {\n      hours = hours + 12;\n    }\n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n  const isMealCompleted = useCallback(mealTime => {\n    var _mealData$mealKey;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n  }, [currentDate, mealData]);\n  const getPortionSize = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    return portionSizes[mealKey] || 'regular';\n  };\n  const togglePortionSize = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setPortionSizes(prev => ({\n      ...prev,\n      [mealKey]: prev[mealKey] === 'regular' ? 'large' : 'regular'\n    }));\n  };\n  const getMealItemsWithPortionSize = meal => {\n    const currentPortionSize = getPortionSize(meal.time);\n    return meal.items.map(item => {\n      if (item.portions) {\n        return {\n          ...item,\n          portion: item.portions[currentPortionSize].portion,\n          calories: item.portions[currentPortionSize].calories\n        };\n      }\n      return item;\n    });\n  };\n  const getMealsForCurrentDate = useCallback(() => {\n    var _mealPlanData$selecte;\n    const dateKey = getDateKey(currentDate);\n    const defaultMeals = ((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : _mealPlanData$selecte.meals) || [];\n    const dateSpecificMeals = addedMeals[dateKey] || [];\n\n    // Combine and sort all meals\n    return [...defaultMeals, ...dateSpecificMeals].sort((a, b) => {\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n  }, [currentDate, selectedDay, mealPlanData, addedMeals]);\n  const calculateStats = useCallback(() => {\n    var _mealPlanData$selecte2, _mealPlanData$selecte3;\n    const todayMeals = getMealsForCurrentDate();\n    const totalCaloriesTarget = parseInt((_mealPlanData$selecte2 = mealPlanData[selectedDay]) === null || _mealPlanData$selecte2 === void 0 ? void 0 : (_mealPlanData$selecte3 = _mealPlanData$selecte2.totalCalories) === null || _mealPlanData$selecte3 === void 0 ? void 0 : _mealPlanData$selecte3.split('-')[1]) || 2400;\n    const completedCalories = todayMeals.reduce((acc, meal) => {\n      if (isMealCompleted(meal.time)) {\n        const items = getMealItemsWithPortionSize(meal);\n        return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n      }\n      return acc;\n    }, 0);\n    const percentage = Math.round(completedCalories / totalCaloriesTarget * 100);\n    return {\n      completed: completedCalories,\n      total: totalCaloriesTarget,\n      percentage,\n      overThreshold: completedCalories > totalCaloriesTarget,\n      displayPercentage: Math.min(percentage, 100)\n    };\n  }, [selectedDay, isMealCompleted, getMealsForCurrentDate, getMealItemsWithPortionSize, mealPlanData]);\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    if (newMeal) {\n      var _mealData$mealKey2;\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n      setMealPlanData(prev => {\n        const updatedData = {\n          ...prev\n        };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    setActiveMealSwap(null);\n  };\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const getAllMealTemplates = useCallback(() => {\n    const templates = [];\n    Object.values(mealPlanData).forEach(day => {\n      day.meals.forEach(meal => {\n        if (!templates.some(t => JSON.stringify(t.items) === JSON.stringify(meal.items))) {\n          templates.push({\n            items: meal.items,\n            description: meal.items.map(item => item.name).join(', ')\n          });\n        }\n      });\n    });\n    return templates;\n  }, [mealPlanData]);\n  const handleAddMeal = () => {\n    if (!newMealTime || !selectedMealTemplate) return;\n    const selectedTemplate = getAllMealTemplates().find(t => t.description === selectedMealTemplate);\n    if (!selectedTemplate) return;\n    const dateKey = getDateKey(currentDate);\n    setAddedMeals(prev => ({\n      ...prev,\n      [dateKey]: [...(prev[dateKey] || []), {\n        time: newMealTime,\n        items: selectedTemplate.items,\n        isAdded: true\n      }].sort((a, b) => {\n        const timeA = convertTo24Hour(a.time);\n        const timeB = convertTo24Hour(b.time);\n        return timeA.localeCompare(timeB);\n      })\n    }));\n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setSelectedMealTemplate('');\n  };\n  const handleRemoveMeal = index => {\n    const dateKey = getDateKey(currentDate);\n    const allMeals = getMealsForCurrentDate();\n    const mealToRemove = allMeals[index];\n\n    // Only proceed if it's an added meal\n    if (!mealToRemove.isAdded) return;\n    setAddedMeals(prev => {\n      const updatedDateMeals = (prev[dateKey] || []).filter(meal => meal.time !== mealToRemove.time || JSON.stringify(meal.items) !== JSON.stringify(mealToRemove.items));\n      const newAddedMeals = {\n        ...prev\n      };\n      if (updatedDateMeals.length === 0) {\n        delete newAddedMeals[dateKey];\n      } else {\n        newAddedMeals[dateKey] = updatedDateMeals;\n      }\n      return newAddedMeals;\n    });\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n  const Dashboard = () => {\n    _s();\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      // Get the start of the current week (Sunday)\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - currentDate.getDay());\n\n      // Calculate stats for each day of the current week\n      const weekDays = Array.from({\n        length: 7\n      }, (_, i) => {\n        var _mealPlanData$weekday, _mealPlanData$weekday2, _mealPlanData$weekday3;\n        const date = new Date(weekStart);\n        date.setDate(weekStart.getDate() + i);\n        const dayKey = getDateKey(date);\n        const weekday = date.toLocaleDateString('en-US', {\n          weekday: 'long'\n        }).toLowerCase();\n\n        // Get all meals for this day\n        const dayMeals = [...(((_mealPlanData$weekday = mealPlanData[weekday]) === null || _mealPlanData$weekday === void 0 ? void 0 : _mealPlanData$weekday.meals) || [])];\n        const dateSpecificMeals = addedMeals[dayKey] || [];\n        const allMeals = [...dayMeals, ...dateSpecificMeals];\n\n        // Calculate completed calories for this day\n        const completedCalories = allMeals.reduce((acc, meal) => {\n          var _mealData$mealKey3;\n          const mealKey = `${dayKey}-${meal.time}`;\n          if ((_mealData$mealKey3 = mealData[mealKey]) !== null && _mealData$mealKey3 !== void 0 && _mealData$mealKey3.completed) {\n            const items = getMealItemsWithPortionSize({\n              ...meal,\n              time: meal.time\n            });\n            return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n          }\n          return acc;\n        }, 0);\n\n        // Get target calories for this day\n        const targetCalories = parseInt((_mealPlanData$weekday2 = mealPlanData[weekday]) === null || _mealPlanData$weekday2 === void 0 ? void 0 : (_mealPlanData$weekday3 = _mealPlanData$weekday2.totalCalories) === null || _mealPlanData$weekday3 === void 0 ? void 0 : _mealPlanData$weekday3.split('-')[1]) || 2400;\n        return {\n          completed: completedCalories,\n          total: targetCalories\n        };\n      });\n\n      // Sum up the totals\n      return weekDays.reduce((acc, day) => ({\n        completed: acc.completed + day.completed,\n        total: acc.total + day.total\n      }), {\n        completed: 0,\n        total: 0\n      });\n    }, [currentDate, mealData, mealPlanData, addedMeals, getMealItemsWithPortionSize]);\n    const weekPercentage = weekStats.total > 0 ? Math.round(weekStats.completed / weekStats.total * 100) : 0;\n    const getProgressColor = percentage => {\n      if (percentage <= 33) return '#ef4444'; // Red\n      if (percentage <= 66) return '#f59e0b'; // Yellow/Orange\n      return '#22c55e'; // Green\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: stats.overThreshold ? 'over-threshold' : '',\n                children: [stats.completed, \"/\", stats.total, \" (\", stats.percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `progress-fill ${stats.overThreshold ? 'over-threshold' : ''}`,\n                style: {\n                  width: `${stats.displayPercentage}%`,\n                  backgroundColor: stats.overThreshold ? '#ef4444' : getProgressColor(stats.percentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Weekly Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Week Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1077,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weekStats.completed.toLocaleString(), \"/\", weekStats.total.toLocaleString(), \" (\", weekPercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${weekPercentage}%`,\n                  backgroundColor: getProgressColor(weekPercentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1081,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Dashboard, \"3A1WL06O40UxZKevtBh+/wpgfgc=\");\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Keto-Cycling Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDate.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meal-type\",\n        children: mealPlanData[selectedDay].type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-goals\",\n        children: mealPlanData[selectedDay].goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"goal-tag\",\n          children: goal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCarbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Liver Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].liver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [stats.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-list\",\n      children: [getMealsForCurrentDate().map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [meal.isAdded && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-button\",\n              onClick: () => handleRemoveMeal(index),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"portion-toggle\",\n              onClick: () => togglePortionSize(meal.time),\n              \"data-active\": getPortionSize(meal.time) === 'large',\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-label\",\n                children: \"Large Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toggle-switch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              ref: index === activeMealSwap ? swapButtonRef : null,\n              className: \"swap-button\",\n              onClick: () => setActiveMealSwap(activeMealSwap === index ? null : index),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 19\n              }, this), \"Swap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 17\n            }, this), activeMealSwap === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: swapMenuRef,\n              className: \"swap-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-menu-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Swap Meal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"close-button\",\n                  onClick: () => setActiveMealSwap(null),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 21\n              }, this), days.filter(day => day !== selectedDay).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-day-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-day-header\",\n                  children: day.charAt(0).toUpperCase() + day.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1231,\n                  columnNumber: 27\n                }, this), mealPlanData[day].meals.map((swapMeal, swapIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-menu-item\",\n                  onClick: () => handleMealSwap(index, day, swapIndex),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"swap-meal-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-time\",\n                      children: swapMeal.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1239,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-items\",\n                      children: swapMeal.items.map(item => item.name).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1240,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1238,\n                    columnNumber: 31\n                  }, this)\n                }, `${day}-${swapIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1233,\n                  columnNumber: 29\n                }, this))]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"meal-checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: getMealItemsWithPortionSize(meal).map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.portion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.calories, \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 21\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-meal-button\",\n        onClick: () => setShowAddMeal(true),\n        children: \"+ Add Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 7\n    }, this), showAddMeal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newMealTime,\n            onChange: e => setNewMealTime(e.target.value),\n            className: \"time-select\",\n            children: timeOptions.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time,\n              children: time\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1301,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMealTemplate,\n            onChange: e => setSelectedMealTemplate(e.target.value),\n            className: \"meal-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a meal...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 17\n            }, this), getAllMealTemplates().map((template, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: template.description,\n              children: template.description\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddMeal,\n            children: \"Add Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowAddMeal(false);\n              setNewMealTime('12:00 PM');\n              setSelectedMealTemplate('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1123,\n    columnNumber: 5\n  }, this);\n};\n_s2(MealPlanner, \"0zNgmIfj3B2F1y2TEhxmXIaj0ZE=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","jsxDEV","_jsxDEV","initialMealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portions","regular","portion","calories","large","tuesday","wednesday","thursday","friday","saturday","sunday","MealPlanner","_s2","_s","$RefreshSig$","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealPlanData","setMealPlanData","mealData","setMealData","saved","localStorage","getItem","JSON","parse","portionSizes","setPortionSizes","addedMeals","setAddedMeals","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","showAddMeal","setShowAddMeal","newMealTime","setNewMealTime","selectedMealTemplate","setSelectedMealTemplate","timeOptions","swapMenuRef","swapButtonRef","setItem","stringify","cleanupMealData","updatedMealData","Object","keys","forEach","key","includes","dateStr","split","date","day","getDay","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDateKey","toISOString","convertTo24Hour","time12h","timeMatch","match","_","hours","minutes","modifier","parseInt","toUpperCase","toString","padStart","isMealCompleted","mealTime","_mealData$mealKey","completed","getPortionSize","dateKey","togglePortionSize","prev","getMealItemsWithPortionSize","meal","currentPortionSize","map","item","getMealsForCurrentDate","_mealPlanData$selecte","defaultMeals","dateSpecificMeals","sort","a","b","timeA","timeB","localeCompare","calculateStats","_mealPlanData$selecte2","_mealPlanData$selecte3","todayMeals","totalCaloriesTarget","completedCalories","reduce","acc","sum","percentage","Math","round","total","overThreshold","displayPercentage","min","calculateMacros","weeklyCarbs","values","carbs","weeklyCalories","weeklyAvgCarbs","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","newMealIndex","currentMeal","newMeal","_mealData$mealKey2","wasCompleted","updatedData","updatedMeals","toggleMealCompletion","_prev$mealKey","handleCommentOpen","handleCommentSave","getAllMealTemplates","templates","some","t","push","description","join","handleAddMeal","selectedTemplate","find","isAdded","handleRemoveMeal","index","allMeals","mealToRemove","updatedDateMeals","filter","newAddedMeals","length","days","stats","Dashboard","weekStats","weekStart","setDate","getDate","weekDays","Array","from","i","_mealPlanData$weekday","_mealPlanData$weekday2","_mealPlanData$weekday3","dayKey","dayMeals","_mealData$mealKey3","targetCalories","weekPercentage","getProgressColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","toLocaleString","CommentModal","value","onChange","e","placeholder","onClick","newDate","month","year","goal","ref","xmlns","viewBox","fill","d","charAt","slice","swapMeal","swapIndex","checked","itemIndex","template","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~11 AM)',\n        items: [\n          {\n            name: 'Beef (or Chicken) + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Mahi Mahi OR Tuna',\n            portions: {\n              regular: { portion: '8-10 oz', calories: 400 },\n              large: { portion: '10-12 oz', calories: 500 }\n            }\n          },\n          {\n            name: 'Eggs + Butter',\n            portions: {\n              regular: { portion: '2 eggs + 1 tbsp butter', calories: 260 },\n              large: { portion: '3 eggs + 1 tbsp butter', calories: 360 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n        ]\n      }\n    ]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4 oz chicken liver',\n    meals: [\n      {\n        time: 'Pre-Walk (~10 AM)',\n        items: [\n          { name: 'Honey', portion: '1 tsp', calories: 20 },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Butter',\n            portions: {\n              regular: { portion: '3 eggs + 1 tbsp butter', calories: 400 },\n              large: { portion: '4 eggs + 1.5 tbsp butter', calories: 550 }\n            }\n          },\n          {\n            name: 'Fresh Fish',\n            portions: {\n              regular: { portion: '8-10 oz', calories: 350 },\n              large: { portion: '10-12 oz', calories: 450 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 600 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 750 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Chicken Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 300 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          {\n            name: 'Honey + Banana',\n            portions: {\n              regular: { portion: '1 tbsp honey + ½ banana', calories: 100 },\n              large: { portion: '1.5 tbsp honey + 1 banana', calories: 150 }\n            }\n          },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Beef + Sweet Potato',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef/Chicken + Rice',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup rice', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup rice', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Banana/Pineapple',\n            portions: {\n              regular: { portion: '½ fruit', calories: 50 },\n              large: { portion: '1 fruit', calories: 100 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Fish + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter + Sauerkraut',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          {\n            name: 'Honey + Banana',\n            portions: {\n              regular: { portion: '1 tbsp honey + ½ banana', calories: 100 },\n              large: { portion: '1.5 tbsp honey + 1 banana', calories: 150 }\n            }\n          },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Beef + Sweet Potato',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef/Chicken + Rice',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup rice', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup rice', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Banana/Pineapple',\n            portions: {\n              regular: { portion: '½ fruit', calories: 50 },\n              large: { portion: '1 fruit', calories: 100 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Fish + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: 'None',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Chicken + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [portionSizes, setPortionSizes] = useState(() => {\n    const saved = localStorage.getItem('portionSizes');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [addedMeals, setAddedMeals] = useState(() => {\n    const saved = localStorage.getItem('addedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [selectedMealTemplate, setSelectedMealTemplate] = useState('');\n  const timeOptions = [\n    '6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM',\n    '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM',\n    '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'\n  ];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  useEffect(() => {\n    localStorage.setItem('portionSizes', JSON.stringify(portionSizes));\n  }, [portionSizes]);\n\n  useEffect(() => {\n    localStorage.setItem('addedMeals', JSON.stringify(addedMeals));\n  }, [addedMeals]);\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n\n  useEffect(() => {\n    // Clean up any unwanted meals from localStorage\n    const cleanupMealData = () => {\n      const updatedMealData = { ...mealData };\n      Object.keys(updatedMealData).forEach(key => {\n        if (key.includes('2:00 PM')) {\n          const [dateStr] = key.split('-');\n          const date = new Date(dateStr);\n          const day = date.getDay();\n          if (day === 6) {\n            delete updatedMealData[key];\n          }\n        }\n      });\n      setMealData(updatedMealData);\n    };\n    \n    cleanupMealData();\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (activeMealSwap !== null &&\n          swapMenuRef.current &&\n          !swapMenuRef.current.contains(event.target) &&\n          swapButtonRef.current &&\n          !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const convertTo24Hour = (time12h) => {\n    const timeMatch = time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);\n    if (!timeMatch) return '00:00';\n    \n    let [_, hours, minutes = '00', modifier] = timeMatch;\n    hours = parseInt(hours);\n    \n    if (hours === 12) {\n      hours = modifier.toUpperCase() === 'PM' ? 12 : 0;\n    } else if (modifier.toUpperCase() === 'PM') {\n      hours = hours + 12;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n\n  const isMealCompleted = useCallback((mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  }, [currentDate, mealData]);\n\n  const getPortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    return portionSizes[mealKey] || 'regular';\n  };\n\n  const togglePortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setPortionSizes(prev => ({\n      ...prev,\n      [mealKey]: prev[mealKey] === 'regular' ? 'large' : 'regular'\n    }));\n  };\n\n  const getMealItemsWithPortionSize = (meal) => {\n    const currentPortionSize = getPortionSize(meal.time);\n    \n    return meal.items.map(item => {\n      if (item.portions) {\n        return {\n          ...item,\n          portion: item.portions[currentPortionSize].portion,\n          calories: item.portions[currentPortionSize].calories\n        };\n      }\n      return item;\n    });\n  };\n\n  const getMealsForCurrentDate = useCallback(() => {\n    const dateKey = getDateKey(currentDate);\n    const defaultMeals = mealPlanData[selectedDay]?.meals || [];\n    const dateSpecificMeals = addedMeals[dateKey] || [];\n    \n    // Combine and sort all meals\n    return [...defaultMeals, ...dateSpecificMeals].sort((a, b) => {\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n  }, [currentDate, selectedDay, mealPlanData, addedMeals]);\n\n  const calculateStats = useCallback(() => {\n    const todayMeals = getMealsForCurrentDate();\n    const totalCaloriesTarget = parseInt(mealPlanData[selectedDay]?.totalCalories?.split('-')[1]) || 2400;\n    \n    const completedCalories = todayMeals.reduce((acc, meal) => {\n      if (isMealCompleted(meal.time)) {\n        const items = getMealItemsWithPortionSize(meal);\n        return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n      }\n      return acc;\n    }, 0);\n\n    const percentage = Math.round((completedCalories / totalCaloriesTarget) * 100);\n    \n    return {\n      completed: completedCalories,\n      total: totalCaloriesTarget,\n      percentage,\n      overThreshold: completedCalories > totalCaloriesTarget,\n      displayPercentage: Math.min(percentage, 100)\n    };\n  }, [selectedDay, isMealCompleted, getMealsForCurrentDate, getMealItemsWithPortionSize, mealPlanData]);\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    \n    if (newMeal) {\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = mealData[mealKey]?.completed || false;\n      \n      setMealPlanData(prev => {\n        const updatedData = { ...prev };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      \n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const getAllMealTemplates = useCallback(() => {\n    const templates = [];\n    Object.values(mealPlanData).forEach(day => {\n      day.meals.forEach(meal => {\n        if (!templates.some(t => \n          JSON.stringify(t.items) === JSON.stringify(meal.items)\n        )) {\n          templates.push({\n            items: meal.items,\n            description: meal.items.map(item => item.name).join(', ')\n          });\n        }\n      });\n    });\n    return templates;\n  }, [mealPlanData]);\n\n  const handleAddMeal = () => {\n    if (!newMealTime || !selectedMealTemplate) return;\n    \n    const selectedTemplate = getAllMealTemplates().find(t => \n      t.description === selectedMealTemplate\n    );\n    \n    if (!selectedTemplate) return;\n\n    const dateKey = getDateKey(currentDate);\n    \n    setAddedMeals(prev => ({\n      ...prev,\n      [dateKey]: [\n        ...(prev[dateKey] || []),\n        {\n          time: newMealTime,\n          items: selectedTemplate.items,\n          isAdded: true\n        }\n      ].sort((a, b) => {\n        const timeA = convertTo24Hour(a.time);\n        const timeB = convertTo24Hour(b.time);\n        return timeA.localeCompare(timeB);\n      })\n    }));\n    \n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setSelectedMealTemplate('');\n  };\n\n  const handleRemoveMeal = (index) => {\n    const dateKey = getDateKey(currentDate);\n    const allMeals = getMealsForCurrentDate();\n    const mealToRemove = allMeals[index];\n    \n    // Only proceed if it's an added meal\n    if (!mealToRemove.isAdded) return;\n    \n    setAddedMeals(prev => {\n      const updatedDateMeals = (prev[dateKey] || []).filter(meal => \n        meal.time !== mealToRemove.time || \n        JSON.stringify(meal.items) !== JSON.stringify(mealToRemove.items)\n      );\n      \n      const newAddedMeals = { ...prev };\n      if (updatedDateMeals.length === 0) {\n        delete newAddedMeals[dateKey];\n      } else {\n        newAddedMeals[dateKey] = updatedDateMeals;\n      }\n      \n      return newAddedMeals;\n    });\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      // Get the start of the current week (Sunday)\n      const weekStart = new Date(currentDate);\n      weekStart.setDate(currentDate.getDate() - currentDate.getDay());\n      \n      // Calculate stats for each day of the current week\n      const weekDays = Array.from({ length: 7 }, (_, i) => {\n        const date = new Date(weekStart);\n        date.setDate(weekStart.getDate() + i);\n        const dayKey = getDateKey(date);\n        const weekday = date.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n        \n        // Get all meals for this day\n        const dayMeals = [...(mealPlanData[weekday]?.meals || [])];\n        const dateSpecificMeals = addedMeals[dayKey] || [];\n        const allMeals = [...dayMeals, ...dateSpecificMeals];\n\n        // Calculate completed calories for this day\n        const completedCalories = allMeals.reduce((acc, meal) => {\n          const mealKey = `${dayKey}-${meal.time}`;\n          if (mealData[mealKey]?.completed) {\n            const items = getMealItemsWithPortionSize({ ...meal, time: meal.time });\n            return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n          }\n          return acc;\n        }, 0);\n\n        // Get target calories for this day\n        const targetCalories = parseInt(mealPlanData[weekday]?.totalCalories?.split('-')[1]) || 2400;\n        \n        return {\n          completed: completedCalories,\n          total: targetCalories\n        };\n      });\n      \n      // Sum up the totals\n      return weekDays.reduce((acc, day) => ({\n        completed: acc.completed + day.completed,\n        total: acc.total + day.total\n      }), { completed: 0, total: 0 });\n    }, [currentDate, mealData, mealPlanData, addedMeals, getMealItemsWithPortionSize]);\n\n    const weekPercentage = weekStats.total > 0 \n      ? Math.round((weekStats.completed / weekStats.total) * 100)\n      : 0;\n    \n    const getProgressColor = (percentage) => {\n      if (percentage <= 33) return '#ef4444';  // Red\n      if (percentage <= 66) return '#f59e0b';  // Yellow/Orange\n      return '#22c55e';  // Green\n    };\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Calories</span>\n                <span className={stats.overThreshold ? 'over-threshold' : ''}>\n                  {stats.completed}/{stats.total} ({stats.percentage}%)\n                </span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className={`progress-fill ${stats.overThreshold ? 'over-threshold' : ''}`}\n                  style={{ \n                    width: `${stats.displayPercentage}%`,\n                    backgroundColor: stats.overThreshold ? '#ef4444' : getProgressColor(stats.percentage),\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"stats-section\">\n            <h3>Weekly Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Week Calories</span>\n                <span>{weekStats.completed.toLocaleString()}/{weekStats.total.toLocaleString()} ({weekPercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${weekPercentage}%`,\n                    backgroundColor: getProgressColor(weekPercentage)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"meal-planner\">\n      <header className=\"header\">\n        <h1>Keto-Cycling Meal Plan</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Prev\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n      </header>\n\n      <Dashboard />\n\n      <div className=\"daily-overview\">\n        <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n        \n        <div className=\"meal-goals\">\n          {mealPlanData[selectedDay].goals.map((goal, index) => (\n            <span key={index} className=\"goal-tag\">{goal}</span>\n          ))}\n        </div>\n\n        <div className=\"meal-stats\">\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Carbs</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCarbs}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Calories</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCalories}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Liver Intake</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].liver}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Completion</div>\n            <div className=\"stat-value\">{stats.percentage}%</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meal-list\">\n        {getMealsForCurrentDate().map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                {meal.isAdded && (\n                  <button \n                    className=\"remove-button\"\n                    onClick={() => handleRemoveMeal(index)}\n                  >\n                    Remove\n                  </button>\n                )}\n                <button\n                  className=\"portion-toggle\"\n                  onClick={() => togglePortionSize(meal.time)}\n                  data-active={getPortionSize(meal.time) === 'large'}\n                >\n                  <span className=\"toggle-label\">Large Portion</span>\n                  <div className=\"toggle-switch\" />\n                </button>\n                <button \n                  ref={index === activeMealSwap ? swapButtonRef : null}\n                  className=\"swap-button\"\n                  onClick={() => setActiveMealSwap(activeMealSwap === index ? null : index)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                  </svg>\n                  Swap\n                </button>\n                {activeMealSwap === index && (\n                  <div ref={swapMenuRef} className=\"swap-menu\">\n                    <div className=\"swap-menu-header\">\n                      <h4>Swap Meal</h4>\n                      <button \n                        className=\"close-button\"\n                        onClick={() => setActiveMealSwap(null)}\n                      >\n                        ×\n                      </button>\n                    </div>\n                    {days\n                      .filter(day => day !== selectedDay)\n                      .map(day => (\n                        <div key={day} className=\"swap-day-section\">\n                          <div className=\"swap-day-header\">{day.charAt(0).toUpperCase() + day.slice(1)}</div>\n                          {mealPlanData[day].meals.map((swapMeal, swapIndex) => (\n                            <div \n                              key={`${day}-${swapIndex}`}\n                              className=\"swap-menu-item\"\n                              onClick={() => handleMealSwap(index, day, swapIndex)}\n                            >\n                              <div className=\"swap-meal-info\">\n                                <div className=\"swap-meal-time\">{swapMeal.time}</div>\n                                <div className=\"swap-meal-items\">\n                                  {swapMeal.items.map(item => item.name).join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                  </div>\n                )}\n                <input\n                  type=\"checkbox\"\n                  className=\"meal-checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMealItemsWithPortionSize(meal).map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n        <button \n          className=\"add-meal-button\"\n          onClick={() => setShowAddMeal(true)}\n        >\n          + Add Meal\n        </button>\n      </div>\n      \n      <CommentModal />\n      \n      {showAddMeal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Add New Meal</h3>\n            <div className=\"input-group\">\n              <label>Select Time</label>\n              <select\n                value={newMealTime}\n                onChange={(e) => setNewMealTime(e.target.value)}\n                className=\"time-select\"\n              >\n                {timeOptions.map(time => (\n                  <option key={time} value={time}>{time}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"input-group\">\n              <label>Select Meal</label>\n              <select\n                value={selectedMealTemplate}\n                onChange={(e) => setSelectedMealTemplate(e.target.value)}\n                className=\"meal-select\"\n              >\n                <option value=\"\">Select a meal...</option>\n                {getAllMealTemplates().map((template, index) => (\n                  <option key={index} value={template.description}>\n                    {template.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"modal-buttons\">\n              <button onClick={handleAddMeal}>Add Meal</button>\n              <button onClick={() => {\n                setShowAddMeal(false);\n                setNewMealTime('12:00 PM');\n                setSelectedMealTemplate('');\n              }}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}