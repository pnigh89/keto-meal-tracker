{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanner = () => {\n  _s();\n  var _mealPlanData$selecte2;\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const calculateStats = () => {\n    var _mealPlanData$selecte;\n    const today = getDateKey(currentDate);\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    let weeklyTotal = 0;\n    let weeklyCompleted = 0;\n    let todayTotal = 0;\n    let todayCompleted = 0;\n\n    // Calculate today's stats\n    const todayMeals = ((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : _mealPlanData$selecte.meals) || [];\n    todayTotal = todayMeals.length;\n    todayCompleted = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n\n    // Calculate weekly stats\n    for (let i = 0; i < 7; i++) {\n      var _mealPlanData$dayName;\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      const dateKey = getDateKey(date);\n      const dayName = date.toLocaleDateString('en-US', {\n        weekday: 'long'\n      }).toLowerCase();\n      const dayMeals = ((_mealPlanData$dayName = mealPlanData[dayName]) === null || _mealPlanData$dayName === void 0 ? void 0 : _mealPlanData$dayName.meals) || [];\n      weeklyTotal += dayMeals.length;\n      weeklyCompleted += dayMeals.filter(meal => {\n        var _mealData$mealKey;\n        const mealKey = `${dateKey}-${meal.time}`;\n        return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n      }).length;\n    }\n    return {\n      weeklyPercentage: weeklyCompleted / weeklyTotal * 100 || 0,\n      todayPercentage: todayCompleted / todayTotal * 100 || 0\n    };\n  };\n  const Dashboard = () => {\n    const stats = calculateStats();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress weekly\",\n            style: {\n              width: `${stats.weeklyPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress daily\",\n            style: {\n              width: `${stats.todayPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Today: \", Math.round(stats.todayPercentage), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Week: \", Math.round(stats.weeklyPercentage), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  };\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  };\n  const mealPlanData = {\n    monday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n      totalCarbs: '30-40g',\n      totalCalories: '2200-2400',\n      liver: '4-6 oz beef liver',\n      meals: [{\n        time: 'Morning (Fasted) OR Coffee',\n        items: [{\n          name: 'Coffee + Coconut Oil',\n          portion: '1 tbsp coconut oil',\n          calories: 120\n        }]\n      }, {\n        time: 'Meal 1 (~11 AM)',\n        items: [{\n          name: 'Beef (or Chicken) + Butter',\n          portion: '8-10 oz + 1 tbsp butter',\n          calories: 600\n        }, {\n          name: 'Avocado',\n          portion: '½ medium',\n          calories: 120\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Mahi Mahi OR Tuna',\n          portion: '8-10 oz',\n          calories: 400\n        }, {\n          name: 'Eggs',\n          portion: '2 eggs',\n          calories: 160\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '4-6 oz',\n          calories: 350\n        }, {\n          name: 'Avocado',\n          portion: '½ medium',\n          calories: 120\n        }, {\n          name: 'Chamomile OR Lemon Balm Tea',\n          portion: '1 cup',\n          calories: 0\n        }]\n      }]\n    },\n    tuesday: {\n      type: 'Strict Keto Day (With Honey)',\n      goals: ['Continue fat-burning', 'Small honey boost for energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4 oz chicken liver',\n      meals: [{\n        time: 'Pre-Walk (~10 AM)',\n        items: [{\n          name: 'Honey',\n          portion: '1 tsp',\n          calories: 20\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Butter',\n          portion: '3 eggs + 1 tbsp butter',\n          calories: 400\n        }, {\n          name: 'Fresh Fish',\n          portion: '8 oz',\n          calories: 350\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Avocado',\n          portion: '8 oz + ½ avocado',\n          calories: 600\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Chicken Liver',\n          portion: '4 oz',\n          calories: 300\n        }]\n      }]\n    },\n    wednesday: {\n      type: 'Carb Refeed Day',\n      goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [{\n        time: 'Pre-Workout (~10 AM)',\n        items: [{\n          name: 'Honey + Banana',\n          portion: '1 tbsp honey + ½ banana',\n          calories: 100\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Beef + Sweet Potato',\n          portion: '8 oz + ½ cup',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef/Chicken + Rice',\n          portion: '8 oz + ½ cup rice',\n          calories: 550\n        }, {\n          name: 'Banana/Pineapple',\n          portion: '½ fruit',\n          calories: 50\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Fish + Avocado',\n          portion: '6 oz + ½ avocado',\n          calories: 450\n        }]\n      }]\n    },\n    thursday: {\n      type: 'Strict Keto Day',\n      goals: ['Return to ketosis', 'Maintain stable energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '6 oz beef liver',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter + Sauerkraut',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '6 oz',\n          calories: 450\n        }]\n      }]\n    },\n    friday: {\n      type: 'Strict Keto Day',\n      goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4-6 oz beef liver',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '4-6 oz',\n          calories: 450\n        }]\n      }]\n    },\n    saturday: {\n      type: 'Carb Refeed Day',\n      goals: ['Glycogen replenishment', 'Performance support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [{\n        time: 'Pre-Workout (~10 AM)',\n        items: [{\n          name: 'Honey + Banana',\n          portion: '1 tbsp honey + ½ banana',\n          calories: 100\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Beef + Sweet Potato',\n          portion: '8 oz + ½ cup',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef/Chicken + Rice',\n          portion: '8 oz + ½ cup rice',\n          calories: 550\n        }, {\n          name: 'Banana/Pineapple',\n          portion: '½ fruit',\n          calories: 50\n        }]\n      }]\n    },\n    sunday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat adaptation', 'Recovery'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: 'None',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Chicken + Avocado',\n          portion: '8 oz + ½ avocado',\n          calories: 450\n        }]\n      }]\n    }\n  };\n  const isMealCompleted = mealTime => {\n    var _mealData$mealKey2;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() - 1);\n          return newDate;\n        }),\n        children: \"Previous Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentDate.toLocaleDateString('en-US', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() + 1);\n          return newDate;\n        }),\n        children: \"Next Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-plan\",\n      children: (_mealPlanData$selecte2 = mealPlanData[selectedDay]) === null || _mealPlanData$selecte2 === void 0 ? void 0 : _mealPlanData$selecte2.meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCommentOpen(meal.time),\n              className: \"comment-button\",\n              children: \"\\uD83D\\uDCAD Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), mealComments[`${getDateKey(currentDate)}-${meal.time}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-comment\",\n          children: [\"\\uD83D\\uDCDD \", mealComments[`${getDateKey(currentDate)}-${meal.time}`]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-items\",\n          children: meal.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-item-detail\",\n            children: [item.name, \" - \", item.portion, \" (\", item.calories, \" cal)\"]\n          }, itemIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(MealPlanner, \"2vbYY7VblUx3L0y68n1SdFd9YfI=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MealPlanner","_s","_mealPlanData$selecte2","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealData","setMealData","saved","localStorage","getItem","JSON","parse","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","setItem","stringify","getDateKey","date","toISOString","split","toggleMealCompletion","mealTime","dateKey","prev","_prev$mealKey","completed","handleCommentOpen","handleCommentSave","calculateStats","_mealPlanData$selecte","today","startOfWeek","setDate","getDate","getDay","weeklyTotal","weeklyCompleted","todayTotal","todayCompleted","todayMeals","mealPlanData","meals","length","filter","meal","isMealCompleted","time","i","_mealPlanData$dayName","dayName","dayMeals","_mealData$mealKey","weeklyPercentage","todayPercentage","Dashboard","stats","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","Math","round","CommentModal","value","onChange","e","target","placeholder","onClick","monday","type","goals","totalCarbs","totalCalories","liver","items","name","portion","calories","tuesday","wednesday","thursday","friday","saturday","sunday","_mealData$mealKey2","days","newDate","year","month","day","map","index","checked","item","itemIndex","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const calculateStats = () => {\n    const today = getDateKey(currentDate);\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    \n    let weeklyTotal = 0;\n    let weeklyCompleted = 0;\n    let todayTotal = 0;\n    let todayCompleted = 0;\n\n    // Calculate today's stats\n    const todayMeals = mealPlanData[selectedDay]?.meals || [];\n    todayTotal = todayMeals.length;\n    todayCompleted = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n\n    // Calculate weekly stats\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      const dateKey = getDateKey(date);\n      const dayName = date.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const dayMeals = mealPlanData[dayName]?.meals || [];\n      weeklyTotal += dayMeals.length;\n      weeklyCompleted += dayMeals.filter(meal => {\n        const mealKey = `${dateKey}-${meal.time}`;\n        return mealData[mealKey]?.completed || false;\n      }).length;\n    }\n\n    return {\n      weeklyPercentage: (weeklyCompleted / weeklyTotal) * 100 || 0,\n      todayPercentage: (todayCompleted / todayTotal) * 100 || 0\n    };\n  };\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    return (\n      <div className=\"dashboard\">\n        <div className=\"progress-container\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress weekly\"\n              style={{ width: `${stats.weeklyPercentage}%` }}\n            />\n            <div \n              className=\"progress daily\"\n              style={{ width: `${stats.todayPercentage}%` }}\n            />\n          </div>\n          <div className=\"progress-labels\">\n            <span>Today: {Math.round(stats.todayPercentage)}%</span>\n            <span>Week: {Math.round(stats.weeklyPercentage)}%</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const mealPlanData = {\n    monday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n      totalCarbs: '30-40g',\n      totalCalories: '2200-2400',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Morning (Fasted) OR Coffee',\n          items: [\n            { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~11 AM)',\n          items: [\n            { name: 'Beef (or Chicken) + Butter', portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Mahi Mahi OR Tuna', portion: '8-10 oz', calories: 400 },\n            { name: 'Eggs', portion: '2 eggs', calories: 160 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n          ]\n        }\n      ]\n    },\n    tuesday: {\n      type: 'Strict Keto Day (With Honey)',\n      goals: ['Continue fat-burning', 'Small honey boost for energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4 oz chicken liver',\n      meals: [\n        {\n          time: 'Pre-Walk (~10 AM)',\n          items: [\n            { name: 'Honey', portion: '1 tsp', calories: 20 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n            { name: 'Fresh Fish', portion: '8 oz', calories: 350 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Avocado', portion: '8 oz + ½ avocado', calories: 600 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken Liver', portion: '4 oz', calories: 300 }\n          ]\n        }\n      ]\n    },\n    wednesday: {\n      type: 'Carb Refeed Day',\n      goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Fish + Avocado', portion: '6 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    },\n    thursday: {\n      type: 'Strict Keto Day',\n      goals: ['Return to ketosis', 'Maintain stable energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter + Sauerkraut', portion: '8 oz + 1 tbsp butter', calories: 550 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    friday: {\n      type: 'Strict Keto Day',\n      goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    saturday: {\n      type: 'Carb Refeed Day',\n      goals: ['Glycogen replenishment', 'Performance support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        }\n      ]\n    },\n    sunday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat adaptation', 'Recovery'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: 'None',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken + Avocado', portion: '8 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    }\n  };\n\n  const isMealCompleted = (mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n  return (\n    <div className=\"meal-planner\">\n      <Dashboard />\n      \n      <div className=\"date-navigation\">\n        <button onClick={() => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() - 1);\n          return newDate;\n        })}>Previous Day</button>\n        \n        <h2>{currentDate.toLocaleDateString('en-US', { \n          weekday: 'long', \n          year: 'numeric', \n          month: 'long', \n          day: 'numeric' \n        })}</h2>\n        \n        <button onClick={() => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() + 1);\n          return newDate;\n        })}>Next Day</button>\n      </div>\n\n      <div className=\"meal-plan\">\n        {mealPlanData[selectedDay]?.meals.map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                <button \n                  onClick={() => handleCommentOpen(meal.time)}\n                  className=\"comment-button\"\n                >\n                  💭 Comment\n                </button>\n                <input\n                  type=\"checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            {mealComments[`${getDateKey(currentDate)}-${meal.time}`] && (\n              <div className=\"meal-comment\">\n                📝 {mealComments[`${getDateKey(currentDate)}-${meal.time}`]}\n              </div>\n            )}\n            <div className=\"meal-items\">\n              {meal.items.map((item, itemIndex) => (\n                <div key={itemIndex} className=\"meal-item-detail\">\n                  {item.name} - {item.portion} ({item.calories} cal)\n                </div>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n      \n      <CommentModal />\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}