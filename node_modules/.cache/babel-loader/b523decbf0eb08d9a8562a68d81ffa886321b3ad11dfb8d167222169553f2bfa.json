{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanner = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const calculateStats = () => {\n    var _mealPlanData$selecte;\n    const today = getDateKey(currentDate);\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    let weeklyTotal = 0;\n    let weeklyCompleted = 0;\n    let todayTotal = 0;\n    let todayCompleted = 0;\n\n    // Calculate today's stats\n    const todayMeals = ((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : _mealPlanData$selecte.meals) || [];\n    todayTotal = todayMeals.length;\n    todayCompleted = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n\n    // Calculate weekly stats\n    for (let i = 0; i < 7; i++) {\n      var _mealPlanData$dayName;\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      const dateKey = getDateKey(date);\n      const dayName = date.toLocaleDateString('en-US', {\n        weekday: 'long'\n      }).toLowerCase();\n      const dayMeals = ((_mealPlanData$dayName = mealPlanData[dayName]) === null || _mealPlanData$dayName === void 0 ? void 0 : _mealPlanData$dayName.meals) || [];\n      weeklyTotal += dayMeals.length;\n      weeklyCompleted += dayMeals.filter(meal => {\n        var _mealData$mealKey;\n        const mealKey = `${dateKey}-${meal.time}`;\n        return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n      }).length;\n    }\n    return {\n      weeklyPercentage: weeklyCompleted / weeklyTotal * 100 || 0,\n      todayPercentage: todayCompleted / todayTotal * 100 || 0\n    };\n  };\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n  const handleMealSwap = (mealIndex, newMealDay) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals.find(meal => meal.time.includes(currentMeal.time.split('(')[1].split(')')[0].trim()));\n    if (newMeal) {\n      const updatedMeals = [...mealPlanData[selectedDay].meals];\n      updatedMeals[mealIndex] = newMeal;\n      // Note: In a real app, you'd want to update this in your backend/storage\n      console.log(`Swapped meal ${mealIndex + 1} with ${newMealDay}'s corresponding meal`);\n    }\n    setActiveMealSwap(null);\n  };\n  const Dashboard = () => {\n    const stats = calculateStats();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [Math.round(stats.todayPercentage), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${stats.todayPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Weekly Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [Math.round(stats.weeklyPercentage), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill week\",\n            style: {\n              width: `${stats.weeklyPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  };\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  };\n  const mealPlanData = {\n    monday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n      totalCarbs: '30-40g',\n      totalCalories: '2200-2400',\n      liver: '4-6 oz beef liver',\n      meals: [{\n        time: 'Morning (Fasted) OR Coffee',\n        items: [{\n          name: 'Coffee + Coconut Oil',\n          portion: '1 tbsp coconut oil',\n          calories: 120\n        }]\n      }, {\n        time: 'Meal 1 (~11 AM)',\n        items: [{\n          name: 'Beef (or Chicken) + Butter',\n          portion: '8-10 oz + 1 tbsp butter',\n          calories: 600\n        }, {\n          name: 'Avocado',\n          portion: '½ medium',\n          calories: 120\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Mahi Mahi OR Tuna',\n          portion: '8-10 oz',\n          calories: 400\n        }, {\n          name: 'Eggs',\n          portion: '2 eggs',\n          calories: 160\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '4-6 oz',\n          calories: 350\n        }, {\n          name: 'Avocado',\n          portion: '½ medium',\n          calories: 120\n        }, {\n          name: 'Chamomile OR Lemon Balm Tea',\n          portion: '1 cup',\n          calories: 0\n        }]\n      }]\n    },\n    tuesday: {\n      type: 'Strict Keto Day (With Honey)',\n      goals: ['Continue fat-burning', 'Small honey boost for energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4 oz chicken liver',\n      meals: [{\n        time: 'Pre-Walk (~10 AM)',\n        items: [{\n          name: 'Honey',\n          portion: '1 tsp',\n          calories: 20\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Butter',\n          portion: '3 eggs + 1 tbsp butter',\n          calories: 400\n        }, {\n          name: 'Fresh Fish',\n          portion: '8 oz',\n          calories: 350\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Avocado',\n          portion: '8 oz + ½ avocado',\n          calories: 600\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Chicken Liver',\n          portion: '4 oz',\n          calories: 300\n        }]\n      }]\n    },\n    wednesday: {\n      type: 'Carb Refeed Day',\n      goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [{\n        time: 'Pre-Workout (~10 AM)',\n        items: [{\n          name: 'Honey + Banana',\n          portion: '1 tbsp honey + ½ banana',\n          calories: 100\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Beef + Sweet Potato',\n          portion: '8 oz + ½ cup',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef/Chicken + Rice',\n          portion: '8 oz + ½ cup rice',\n          calories: 550\n        }, {\n          name: 'Banana/Pineapple',\n          portion: '½ fruit',\n          calories: 50\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Fish + Avocado',\n          portion: '6 oz + ½ avocado',\n          calories: 450\n        }]\n      }]\n    },\n    thursday: {\n      type: 'Strict Keto Day',\n      goals: ['Return to ketosis', 'Maintain stable energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '6 oz beef liver',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter + Sauerkraut',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '6 oz',\n          calories: 450\n        }]\n      }]\n    },\n    friday: {\n      type: 'Strict Keto Day',\n      goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4-6 oz beef liver',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Beef Liver',\n          portion: '4-6 oz',\n          calories: 450\n        }]\n      }]\n    },\n    saturday: {\n      type: 'Carb Refeed Day',\n      goals: ['Glycogen replenishment', 'Performance support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [{\n        time: 'Pre-Workout (~10 AM)',\n        items: [{\n          name: 'Honey + Banana',\n          portion: '1 tbsp honey + ½ banana',\n          calories: 100\n        }]\n      }, {\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Beef + Sweet Potato',\n          portion: '8 oz + ½ cup',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef/Chicken + Rice',\n          portion: '8 oz + ½ cup rice',\n          calories: 550\n        }, {\n          name: 'Banana/Pineapple',\n          portion: '½ fruit',\n          calories: 50\n        }]\n      }]\n    },\n    sunday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat adaptation', 'Recovery'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: 'None',\n      meals: [{\n        time: 'Meal 1 (~12 PM)',\n        items: [{\n          name: 'Eggs + Fish',\n          portion: '3 eggs + 8 oz fish',\n          calories: 500\n        }]\n      }, {\n        time: 'Meal 2 (~4 PM)',\n        items: [{\n          name: 'Beef + Butter',\n          portion: '8 oz + 1 tbsp butter',\n          calories: 550\n        }, {\n          name: 'Sauerkraut',\n          portion: '¼ cup',\n          calories: 10\n        }]\n      }, {\n        time: 'Meal 3 (~8 PM)',\n        items: [{\n          name: 'Chicken + Avocado',\n          portion: '8 oz + ½ avocado',\n          calories: 450\n        }]\n      }]\n    }\n  };\n  const isMealCompleted = mealTime => {\n    var _mealData$mealKey2;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Keto-Cycling Meal Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() - 1);\n          return newDate;\n        }),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentDate.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() + 1);\n          return newDate;\n        }),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-selector\",\n      children: days.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: selectedDay === day ? 'active' : '',\n        onClick: () => setSelectedDay(day),\n        children: day.charAt(0).toUpperCase() + day.slice(1, 3)\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"meal-type\",\n      children: mealPlanData[selectedDay].type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-goals\",\n      children: mealPlanData[selectedDay].goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"goal-tag\",\n        children: goal\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Carbs: \", mealPlanData[selectedDay].totalCarbs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Calories: \", mealPlanData[selectedDay].totalCalories]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Liver Intake: \", mealPlanData[selectedDay].liver]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-list\",\n      children: mealPlanData[selectedDay].meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-swap\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"swap-button\",\n                onClick: () => setActiveMealSwap(index),\n                children: \"\\uD83D\\uDD04 Swap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this), activeMealSwap === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-menu\",\n                children: days.filter(day => day !== selectedDay).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-menu-item\",\n                  onClick: () => handleMealSwap(index, day),\n                  children: [\"Swap with \", day.charAt(0).toUpperCase() + day.slice(1), \" meal\"]\n                }, day, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: meal.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.portion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.calories, \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n};\n_s(MealPlanner, \"xDViPUZrhUD1hJW2myriQLOnx6w=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MealPlanner","_s","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealData","setMealData","saved","localStorage","getItem","JSON","parse","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","setItem","stringify","getDateKey","date","toISOString","split","toggleMealCompletion","mealTime","dateKey","prev","_prev$mealKey","completed","handleCommentOpen","handleCommentSave","calculateStats","_mealPlanData$selecte","today","startOfWeek","setDate","getDate","getDay","weeklyTotal","weeklyCompleted","todayTotal","todayCompleted","todayMeals","mealPlanData","meals","length","filter","meal","isMealCompleted","time","i","_mealPlanData$dayName","dayName","dayMeals","_mealData$mealKey","weeklyPercentage","todayPercentage","calculateMacros","weeklyCarbs","Object","values","reduce","acc","day","carbs","parseInt","totalCarbs","weeklyCalories","calories","totalCalories","weeklyAvgCarbs","Math","round","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","currentMeal","newMeal","find","includes","trim","updatedMeals","console","log","Dashboard","stats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","CommentModal","value","onChange","e","target","placeholder","onClick","monday","type","goals","liver","items","name","portion","tuesday","wednesday","thursday","friday","saturday","sunday","_mealData$mealKey2","days","newDate","month","year","map","charAt","toUpperCase","slice","goal","index","checked","item","itemIndex","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const calculateStats = () => {\n    const today = getDateKey(currentDate);\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(currentDate.getDate() - currentDate.getDay());\n    \n    let weeklyTotal = 0;\n    let weeklyCompleted = 0;\n    let todayTotal = 0;\n    let todayCompleted = 0;\n\n    // Calculate today's stats\n    const todayMeals = mealPlanData[selectedDay]?.meals || [];\n    todayTotal = todayMeals.length;\n    todayCompleted = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n\n    // Calculate weekly stats\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(startOfWeek);\n      date.setDate(startOfWeek.getDate() + i);\n      const dateKey = getDateKey(date);\n      const dayName = date.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n      const dayMeals = mealPlanData[dayName]?.meals || [];\n      weeklyTotal += dayMeals.length;\n      weeklyCompleted += dayMeals.filter(meal => {\n        const mealKey = `${dateKey}-${meal.time}`;\n        return mealData[mealKey]?.completed || false;\n      }).length;\n    }\n\n    return {\n      weeklyPercentage: (weeklyCompleted / weeklyTotal) * 100 || 0,\n      todayPercentage: (todayCompleted / todayTotal) * 100 || 0\n    };\n  };\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals.find(meal => \n      meal.time.includes(currentMeal.time.split('(')[1].split(')')[0].trim())\n    );\n    \n    if (newMeal) {\n      const updatedMeals = [...mealPlanData[selectedDay].meals];\n      updatedMeals[mealIndex] = newMeal;\n      // Note: In a real app, you'd want to update this in your backend/storage\n      console.log(`Swapped meal ${mealIndex + 1} with ${newMealDay}'s corresponding meal`);\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    \n    return (\n      <div className=\"dashboard\">\n        <div className=\"progress-container\">\n          <div className=\"progress-label\">\n            <span>Today's Progress</span>\n            <span>{Math.round(stats.todayPercentage)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ width: `${stats.todayPercentage}%` }}\n            />\n          </div>\n        </div>\n        \n        <div className=\"progress-container\">\n          <div className=\"progress-label\">\n            <span>Weekly Progress</span>\n            <span>{Math.round(stats.weeklyPercentage)}%</span>\n          </div>\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill week\"\n              style={{ width: `${stats.weeklyPercentage}%` }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const mealPlanData = {\n    monday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n      totalCarbs: '30-40g',\n      totalCalories: '2200-2400',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Morning (Fasted) OR Coffee',\n          items: [\n            { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~11 AM)',\n          items: [\n            { name: 'Beef (or Chicken) + Butter', portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Mahi Mahi OR Tuna', portion: '8-10 oz', calories: 400 },\n            { name: 'Eggs', portion: '2 eggs', calories: 160 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n          ]\n        }\n      ]\n    },\n    tuesday: {\n      type: 'Strict Keto Day (With Honey)',\n      goals: ['Continue fat-burning', 'Small honey boost for energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4 oz chicken liver',\n      meals: [\n        {\n          time: 'Pre-Walk (~10 AM)',\n          items: [\n            { name: 'Honey', portion: '1 tsp', calories: 20 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n            { name: 'Fresh Fish', portion: '8 oz', calories: 350 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Avocado', portion: '8 oz + ½ avocado', calories: 600 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken Liver', portion: '4 oz', calories: 300 }\n          ]\n        }\n      ]\n    },\n    wednesday: {\n      type: 'Carb Refeed Day',\n      goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Fish + Avocado', portion: '6 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    },\n    thursday: {\n      type: 'Strict Keto Day',\n      goals: ['Return to ketosis', 'Maintain stable energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter + Sauerkraut', portion: '8 oz + 1 tbsp butter', calories: 550 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    friday: {\n      type: 'Strict Keto Day',\n      goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    saturday: {\n      type: 'Carb Refeed Day',\n      goals: ['Glycogen replenishment', 'Performance support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        }\n      ]\n    },\n    sunday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat adaptation', 'Recovery'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: 'None',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken + Avocado', portion: '8 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    }\n  };\n\n  const isMealCompleted = (mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n  return (\n    <div className=\"meal-planner\">\n      <h1>Keto-Cycling Meal Plan</h1>\n      \n      <div className=\"date-navigation\">\n        <button onClick={() => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() - 1);\n          return newDate;\n        })}>Previous</button>\n        \n        <h2>{currentDate.toLocaleDateString('en-US', { \n          month: 'short',\n          day: 'numeric',\n          year: 'numeric'\n        })}</h2>\n        \n        <button onClick={() => setCurrentDate(prev => {\n          const newDate = new Date(prev);\n          newDate.setDate(prev.getDate() + 1);\n          return newDate;\n        })}>Next</button>\n      </div>\n\n      <div className=\"day-selector\">\n        {days.map(day => (\n          <button \n            key={day}\n            className={selectedDay === day ? 'active' : ''}\n            onClick={() => setSelectedDay(day)}\n          >\n            {day.charAt(0).toUpperCase() + day.slice(1, 3)}\n          </button>\n        ))}\n      </div>\n\n      <Dashboard />\n\n      <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n      \n      <div className=\"meal-goals\">\n        {mealPlanData[selectedDay].goals.map((goal, index) => (\n          <span key={index} className=\"goal-tag\">{goal}</span>\n        ))}\n      </div>\n\n      <div className=\"meal-stats\">\n        <div>Total Carbs: {mealPlanData[selectedDay].totalCarbs}</div>\n        <div>Total Calories: {mealPlanData[selectedDay].totalCalories}</div>\n        <div>Liver Intake: {mealPlanData[selectedDay].liver}</div>\n      </div>\n\n      <div className=\"meal-list\">\n        {mealPlanData[selectedDay].meals.map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                <div className=\"meal-swap\">\n                  <button \n                    className=\"swap-button\"\n                    onClick={() => setActiveMealSwap(index)}\n                  >\n                    🔄 Swap\n                  </button>\n                  {activeMealSwap === index && (\n                    <div className=\"swap-menu\">\n                      {days.filter(day => day !== selectedDay).map(day => (\n                        <div \n                          key={day}\n                          className=\"swap-menu-item\"\n                          onClick={() => handleMealSwap(index, day)}\n                        >\n                          Swap with {day.charAt(0).toUpperCase() + day.slice(1)} meal\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n                <input\n                  type=\"checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {meal.items.map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n      \n      <CommentModal />\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}