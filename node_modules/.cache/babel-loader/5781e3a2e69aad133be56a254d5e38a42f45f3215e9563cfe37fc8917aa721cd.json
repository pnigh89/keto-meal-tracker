{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const initialMealPlanData={monday:{type:'Strict Keto Day',goals:['Fat-burning','Low insulin response','High satiety'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'4-6 oz beef liver',meals:[{time:'Morning (Fasted) OR Coffee',items:[{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~11 AM)',items:[{name:'Beef (or Chicken) + Butter',portions:{regular:{portion:'8-10 oz + 1 tbsp butter',calories:600},large:{portion:'10-12 oz + 1 tbsp butter',calories:750}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Mahi Mahi OR Tuna',portions:{regular:{portion:'8-10 oz',calories:400},large:{portion:'10-12 oz',calories:500}}},{name:'Eggs + Butter',portions:{regular:{portion:'2 eggs + 1 tbsp butter',calories:260},large:{portion:'3 eggs + 1 tbsp butter',calories:360}}}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portions:{regular:{portion:'4 oz',calories:350},large:{portion:'6 oz',calories:450}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Chamomile OR Lemon Balm Tea',portion:'1 cup',calories:0}]}]},tuesday:{type:'Strict Keto Day (With Honey)',goals:['Continue fat-burning','Small honey boost for energy'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'4 oz chicken liver',meals:[{time:'Pre-Walk (~10 AM)',items:[{name:'Honey',portion:'1 tsp',calories:20},{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Butter',portions:{regular:{portion:'3 eggs + 1 tbsp butter',calories:400},large:{portion:'4 eggs + 1.5 tbsp butter',calories:550}}},{name:'Fresh Fish',portions:{regular:{portion:'8-10 oz',calories:350},large:{portion:'10-12 oz',calories:450}}}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Avocado',portions:{regular:{portion:'8-10 oz + ½ avocado',calories:600},large:{portion:'10-12 oz + ½ avocado',calories:750}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Chicken Liver',portions:{regular:{portion:'4 oz',calories:300},large:{portion:'6 oz',calories:450}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}}]}]},wednesday:{type:'Carb Refeed Day',goals:['Refuel glycogen','Metabolic reset','Hormone support'],totalCarbs:'100-120g',totalCalories:'2200-2400',liver:'None (Refeed day)',meals:[{time:'Pre-Workout (~10 AM)',items:[{name:'Honey + Banana',portions:{regular:{portion:'1 tbsp honey + ½ banana',calories:100},large:{portion:'1.5 tbsp honey + 1 banana',calories:150}}},{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Beef + Sweet Potato',portions:{regular:{portion:'8-10 oz + ½ cup',calories:550},large:{portion:'10-12 oz + ¾ cup',calories:700}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef/Chicken + Rice',portions:{regular:{portion:'8-10 oz + ½ cup rice',calories:550},large:{portion:'10-12 oz + ¾ cup rice',calories:700}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Banana/Pineapple',portions:{regular:{portion:'½ fruit',calories:50},large:{portion:'1 fruit',calories:100}}}]},{time:'Meal 3 (~8 PM)',items:[{name:'Fish + Avocado',portions:{regular:{portion:'8-10 oz + ½ avocado',calories:450},large:{portion:'10-12 oz + ½ avocado',calories:570}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Eggs',portions:{regular:{portion:'2 eggs',calories:160},large:{portion:'3 eggs',calories:240}}}]}]},thursday:{type:'Strict Keto Day',goals:['Return to ketosis','Maintain stable energy'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'6 oz beef liver',meals:[{time:'Morning (Fasted) OR Coffee',items:[{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portions:{regular:{portion:'3 eggs + 8-10 oz fish',calories:500},large:{portion:'3 eggs + 10-12 oz fish',calories:650}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter + Sauerkraut',portions:{regular:{portion:'8-10 oz + 1 tbsp butter',calories:600},large:{portion:'10-12 oz + 1 tbsp butter',calories:750}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portions:{regular:{portion:'4 oz',calories:350},large:{portion:'6 oz',calories:450}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}}]}]},friday:{type:'Strict Keto Day',goals:['Deep fat-burning','Satiety','Nutrient rebalancing'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'4-6 oz beef liver',meals:[{time:'Morning (Fasted) OR Coffee',items:[{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portions:{regular:{portion:'3 eggs + 8-10 oz fish',calories:500},large:{portion:'3 eggs + 10-12 oz fish',calories:650}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter',portions:{regular:{portion:'8-10 oz + 1 tbsp butter',calories:600},large:{portion:'10-12 oz + 1 tbsp butter',calories:750}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portions:{regular:{portion:'4 oz',calories:350},large:{portion:'6 oz',calories:450}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}}]}]},saturday:{type:'Carb Refeed Day',goals:['Glycogen replenishment','Performance support'],totalCarbs:'100-120g',totalCalories:'2200-2400',liver:'None (Refeed day)',meals:[{time:'Pre-Workout (~10 AM)',items:[{name:'Honey + Banana',portions:{regular:{portion:'1 tbsp honey + ½ banana',calories:100},large:{portion:'1.5 tbsp honey + 1 banana',calories:150}}},{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Beef + Sweet Potato',portions:{regular:{portion:'8-10 oz + ½ cup',calories:550},large:{portion:'10-12 oz + ¾ cup',calories:700}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef/Chicken + Rice',portions:{regular:{portion:'8-10 oz + ½ cup rice',calories:550},large:{portion:'10-12 oz + ¾ cup rice',calories:700}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Banana/Pineapple',portions:{regular:{portion:'½ fruit',calories:50},large:{portion:'1 fruit',calories:100}}}]},{time:'Meal 3 (~8 PM)',items:[{name:'Fish + Avocado',portions:{regular:{portion:'8-10 oz + ½ avocado',calories:450},large:{portion:'10-12 oz + ½ avocado',calories:570}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Eggs',portions:{regular:{portion:'2 eggs',calories:160},large:{portion:'3 eggs',calories:240}}}]}]},sunday:{type:'Strict Keto Day',goals:['Fat adaptation','Recovery'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'None',meals:[{time:'Morning (Fasted) OR Coffee',items:[{name:'Coffee + Coconut Oil',portions:{regular:{portion:'1 tbsp coconut oil',calories:120},large:{portion:'1.5 tbsp coconut oil',calories:180}}}]},{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portions:{regular:{portion:'3 eggs + 8-10 oz fish',calories:500},large:{portion:'3 eggs + 10-12 oz fish',calories:650}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter',portions:{regular:{portion:'8-10 oz + 1 tbsp butter',calories:600},large:{portion:'10-12 oz + 1 tbsp butter',calories:750}}},{name:'Avocado',portions:{regular:{portion:'½ medium',calories:120},large:{portion:'1 medium',calories:240}}},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Chicken + Avocado',portions:{regular:{portion:'8-10 oz + ½ avocado',calories:450},large:{portion:'10-12 oz + ½ avocado',calories:570}}},{name:'Butter',portions:{regular:{portion:'1 tbsp',calories:100},large:{portion:'1.5 tbsp',calories:150}}},{name:'Eggs',portions:{regular:{portion:'2 eggs',calories:160},large:{portion:'3 eggs',calories:240}}}]}]}};const MealPlanner=()=>{const[currentDate,setCurrentDate]=useState(new Date());const[selectedDay,setSelectedDay]=useState(()=>{const weekday=currentDate.toLocaleDateString('en-US',{weekday:'long'}).toLowerCase();return weekday;});const[mealPlanData,setMealPlanData]=useState(initialMealPlanData);const[mealData,setMealData]=useState(()=>{const saved=localStorage.getItem('mealData');return saved?JSON.parse(saved):{};});const[portionSizes,setPortionSizes]=useState(()=>{const saved=localStorage.getItem('portionSizes');return saved?JSON.parse(saved):{};});const[addedMeals,setAddedMeals]=useState(()=>{const saved=localStorage.getItem('addedMeals');return saved?JSON.parse(saved):{};});const[mealComments,setMealComments]=useState(()=>{const saved=localStorage.getItem('mealComments');return saved?JSON.parse(saved):{};});const[commentModal,setCommentModal]=useState({isOpen:false,mealKey:null,comment:''});const[showExpandedStats,setShowExpandedStats]=useState(false);const[activeMealSwap,setActiveMealSwap]=useState(null);const[showAddMeal,setShowAddMeal]=useState(false);const[newMealTime,setNewMealTime]=useState('12:00 PM');const[selectedMealTemplate,setSelectedMealTemplate]=useState('');const timeOptions=['6:00 AM','7:00 AM','8:00 AM','9:00 AM','10:00 AM','11:00 AM','12:00 PM','1:00 PM','2:00 PM','3:00 PM','4:00 PM','5:00 PM','6:00 PM','7:00 PM','8:00 PM','9:00 PM','10:00 PM'];const swapMenuRef=useRef(null);const swapButtonRef=useRef(null);useEffect(()=>{localStorage.setItem('mealData',JSON.stringify(mealData));},[mealData]);useEffect(()=>{localStorage.setItem('mealComments',JSON.stringify(mealComments));},[mealComments]);useEffect(()=>{localStorage.setItem('portionSizes',JSON.stringify(portionSizes));},[portionSizes]);useEffect(()=>{localStorage.setItem('addedMeals',JSON.stringify(addedMeals));},[addedMeals]);useEffect(()=>{const weekday=currentDate.toLocaleDateString('en-US',{weekday:'long'}).toLowerCase();setSelectedDay(weekday);},[currentDate]);useEffect(()=>{// Clean up any unwanted meals from localStorage\nconst cleanupMealData=()=>{const updatedMealData={...mealData};Object.keys(updatedMealData).forEach(key=>{if(key.includes('2:00 PM')){const[dateStr]=key.split('-');const date=new Date(dateStr);const day=date.getDay();if(day===6){delete updatedMealData[key];}}});setMealData(updatedMealData);};cleanupMealData();},[]);useEffect(()=>{const handleClickOutside=event=>{if(activeMealSwap!==null&&swapMenuRef.current&&!swapMenuRef.current.contains(event.target)&&swapButtonRef.current&&!swapButtonRef.current.contains(event.target)){setActiveMealSwap(null);}};document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[activeMealSwap]);const getDateKey=date=>date.toISOString().split('T')[0];const convertTo24Hour=time12h=>{const timeMatch=time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);if(!timeMatch)return'00:00';let[_,hours,minutes='00',modifier]=timeMatch;hours=parseInt(hours);if(hours===12){hours=modifier.toUpperCase()==='PM'?12:0;}else if(modifier.toUpperCase()==='PM'){hours=hours+12;}return`${hours.toString().padStart(2,'0')}:${minutes}`;};const isMealCompleted=useCallback(mealTime=>{var _mealData$mealKey;const mealKey=`${currentDate.toISOString().split('T')[0]}-${mealTime}`;return((_mealData$mealKey=mealData[mealKey])===null||_mealData$mealKey===void 0?void 0:_mealData$mealKey.completed)||false;},[currentDate,mealData]);const getPortionSize=mealTime=>{const dateKey=getDateKey(currentDate);const mealKey=`${dateKey}-${mealTime}`;return portionSizes[mealKey]||'regular';};const togglePortionSize=mealTime=>{const dateKey=getDateKey(currentDate);const mealKey=`${dateKey}-${mealTime}`;setPortionSizes(prev=>({...prev,[mealKey]:prev[mealKey]==='regular'?'large':'regular'}));};const getMealItemsWithPortionSize=meal=>{const currentPortionSize=getPortionSize(meal.time);return meal.items.map(item=>{if(item.portions){return{...item,portion:item.portions[currentPortionSize].portion,calories:item.portions[currentPortionSize].calories};}return item;});};const getMealsForCurrentDate=useCallback(()=>{var _mealPlanData$selecte;const dateKey=getDateKey(currentDate);const defaultMeals=((_mealPlanData$selecte=mealPlanData[selectedDay])===null||_mealPlanData$selecte===void 0?void 0:_mealPlanData$selecte.meals)||[];const dateSpecificMeals=addedMeals[dateKey]||[];// Combine and sort all meals\nreturn[...defaultMeals,...dateSpecificMeals].sort((a,b)=>{const timeA=convertTo24Hour(a.time);const timeB=convertTo24Hour(b.time);return timeA.localeCompare(timeB);});},[currentDate,selectedDay,mealPlanData,addedMeals]);const calculateStats=useCallback(()=>{var _mealPlanData$selecte2,_mealPlanData$selecte3;const todayMeals=getMealsForCurrentDate();const totalCaloriesTarget=parseInt((_mealPlanData$selecte2=mealPlanData[selectedDay])===null||_mealPlanData$selecte2===void 0?void 0:(_mealPlanData$selecte3=_mealPlanData$selecte2.totalCalories)===null||_mealPlanData$selecte3===void 0?void 0:_mealPlanData$selecte3.split('-')[1])||2400;const completedCalories=todayMeals.reduce((acc,meal)=>{if(isMealCompleted(meal.time)){const items=getMealItemsWithPortionSize(meal);return acc+items.reduce((sum,item)=>sum+(item.calories||0),0);}return acc;},0);const percentage=Math.round(completedCalories/totalCaloriesTarget*100);return{completed:completedCalories,total:totalCaloriesTarget,percentage,overThreshold:completedCalories>totalCaloriesTarget,displayPercentage:Math.min(percentage,100)};},[selectedDay,isMealCompleted,getMealsForCurrentDate,getMealItemsWithPortionSize,mealPlanData]);const calculateMacros=()=>{const weeklyCarbs=Object.values(mealPlanData).reduce((acc,day)=>{const carbs=parseInt(day.totalCarbs)||0;return acc+carbs;},0);const weeklyCalories=Object.values(mealPlanData).reduce((acc,day)=>{const calories=parseInt(day.totalCalories)||0;return acc+calories;},0);return{weeklyAvgCarbs:Math.round(weeklyCarbs/7),weeklyAvgCalories:Math.round(weeklyCalories/7),monthlyAvgCarbs:Math.round(weeklyCarbs/7*30),monthlyAvgCalories:Math.round(weeklyCalories/7*30)};};const handleMealSwap=(mealIndex,newMealDay,newMealIndex)=>{const currentMeal=mealPlanData[selectedDay].meals[mealIndex];const newMeal=mealPlanData[newMealDay].meals[newMealIndex];if(newMeal){var _mealData$mealKey2;const dateKey=getDateKey(currentDate);const mealKey=`${dateKey}-${currentMeal.time}`;const wasCompleted=((_mealData$mealKey2=mealData[mealKey])===null||_mealData$mealKey2===void 0?void 0:_mealData$mealKey2.completed)||false;setMealPlanData(prev=>{const updatedData={...prev};const updatedMeals=[...prev[selectedDay].meals];updatedMeals[mealIndex]={...newMeal,time:currentMeal.time};updatedData[selectedDay]={...prev[selectedDay],meals:updatedMeals};return updatedData;});setMealData(prev=>({...prev,[mealKey]:{...prev[mealKey],completed:wasCompleted}}));}setActiveMealSwap(null);};const toggleMealCompletion=mealTime=>{const dateKey=getDateKey(currentDate);const mealKey=`${dateKey}-${mealTime}`;setMealData(prev=>{var _prev$mealKey;return{...prev,[mealKey]:{...prev[mealKey],completed:!((_prev$mealKey=prev[mealKey])!==null&&_prev$mealKey!==void 0&&_prev$mealKey.completed)}};});};const handleCommentOpen=mealTime=>{const dateKey=getDateKey(currentDate);const mealKey=`${dateKey}-${mealTime}`;setCommentModal({isOpen:true,mealKey,comment:mealComments[mealKey]||''});};const handleCommentSave=()=>{if(commentModal.mealKey){setMealComments(prev=>({...prev,[commentModal.mealKey]:commentModal.comment}));setCommentModal({isOpen:false,mealKey:null,comment:''});}};const getAllMealTemplates=useCallback(()=>{const templates=[];Object.values(mealPlanData).forEach(day=>{day.meals.forEach(meal=>{if(!templates.some(t=>JSON.stringify(t.items)===JSON.stringify(meal.items))){templates.push({items:meal.items,description:meal.items.map(item=>item.name).join(', ')});}});});return templates;},[mealPlanData]);const handleAddMeal=()=>{if(!newMealTime||!selectedMealTemplate)return;const selectedTemplate=getAllMealTemplates().find(t=>t.description===selectedMealTemplate);if(!selectedTemplate)return;const dateKey=getDateKey(currentDate);setAddedMeals(prev=>({...prev,[dateKey]:[...(prev[dateKey]||[]),{time:newMealTime,items:selectedTemplate.items,isAdded:true}].sort((a,b)=>{const timeA=convertTo24Hour(a.time);const timeB=convertTo24Hour(b.time);return timeA.localeCompare(timeB);})}));setShowAddMeal(false);setNewMealTime('12:00 PM');setSelectedMealTemplate('');};const handleRemoveMeal=index=>{const dateKey=getDateKey(currentDate);const allMeals=getMealsForCurrentDate();const mealToRemove=allMeals[index];// Only proceed if it's an added meal\nif(!mealToRemove.isAdded)return;setAddedMeals(prev=>{const updatedDateMeals=(prev[dateKey]||[]).filter(meal=>meal.time!==mealToRemove.time||JSON.stringify(meal.items)!==JSON.stringify(mealToRemove.items));const newAddedMeals={...prev};if(updatedDateMeals.length===0){delete newAddedMeals[dateKey];}else{newAddedMeals[dateKey]=updatedDateMeals;}return newAddedMeals;});};const days=['monday','tuesday','wednesday','thursday','friday','saturday','sunday'];const stats=calculateStats();const Dashboard=()=>{const stats=calculateStats();const weekStats=useMemo(()=>{// Get the start of the current week (Monday)\nconst weekStart=new Date(currentDate);const day=weekStart.getDay();const diff=weekStart.getDate()-day+(day===0?-6:1);// Adjust when day is Sunday\nweekStart.setDate(diff);// Calculate stats for each day of the current week (Monday to Sunday)\nconst weekDays=Array.from({length:7},(_,i)=>{var _mealPlanData$weekday,_mealPlanData$weekday2,_mealPlanData$weekday3;const date=new Date(weekStart);date.setDate(weekStart.getDate()+i);const dayKey=getDateKey(date);const weekday=date.toLocaleDateString('en-US',{weekday:'long'}).toLowerCase();// Get all meals for this day\nconst dayMeals=[...(((_mealPlanData$weekday=mealPlanData[weekday])===null||_mealPlanData$weekday===void 0?void 0:_mealPlanData$weekday.meals)||[])];const dateSpecificMeals=addedMeals[dayKey]||[];const allMeals=[...dayMeals,...dateSpecificMeals];// Calculate completed calories for this day\nconst completedCalories=allMeals.reduce((acc,meal)=>{var _mealData$mealKey3;const mealKey=`${dayKey}-${meal.time}`;if((_mealData$mealKey3=mealData[mealKey])!==null&&_mealData$mealKey3!==void 0&&_mealData$mealKey3.completed){const items=getMealItemsWithPortionSize({...meal,time:meal.time});return acc+items.reduce((sum,item)=>sum+(item.calories||0),0);}return acc;},0);// Get target calories for this day\nconst targetCalories=parseInt((_mealPlanData$weekday2=mealPlanData[weekday])===null||_mealPlanData$weekday2===void 0?void 0:(_mealPlanData$weekday3=_mealPlanData$weekday2.totalCalories)===null||_mealPlanData$weekday3===void 0?void 0:_mealPlanData$weekday3.split('-')[1])||2400;return{completed:completedCalories,total:targetCalories,weekday};});// Sum up the totals\nreturn{...weekDays.reduce((acc,day)=>({completed:acc.completed+day.completed,total:acc.total+day.total}),{completed:0,total:0}),days:weekDays};},[currentDate,mealData,mealPlanData,addedMeals,getMealItemsWithPortionSize]);const weekPercentage=weekStats.total>0?Math.round(weekStats.completed/weekStats.total*100):0;const getProgressColor=percentage=>{if(percentage<=33)return'#ef4444';// Red\nif(percentage<=66)return'#f59e0b';// Yellow/Orange\nreturn'#22c55e';// Green\n};return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"stats-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Today's Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-label\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Calories\"}),/*#__PURE__*/_jsxs(\"span\",{className:stats.overThreshold?'over-threshold':'',children:[stats.completed,\"/\",stats.total,\" (\",stats.percentage,\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:`progress-fill ${stats.overThreshold?'over-threshold':''}`,style:{width:`${stats.displayPercentage}%`,backgroundColor:stats.overThreshold?'#ef4444':getProgressColor(stats.percentage)}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Weekly Progress (Mon-Sun)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-label\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Week Calories\"}),/*#__PURE__*/_jsxs(\"span\",{children:[weekStats.completed.toLocaleString(),\"/\",weekStats.total.toLocaleString(),\" (\",weekPercentage,\"%)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${weekPercentage}%`,backgroundColor:getProgressColor(weekPercentage)}})})]})]})]})});};const CommentModal=()=>{if(!commentModal.isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add Comment\"}),/*#__PURE__*/_jsx(\"textarea\",{value:commentModal.comment,onChange:e=>setCommentModal(prev=>({...prev,comment:e.target.value})),placeholder:\"Enter your comment...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCommentSave,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCommentModal({isOpen:false,mealKey:null,comment:''}),children:\"Cancel\"})]})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"meal-planner\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Keto-Cycling Meal Plan\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-navigation\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentDate(prev=>{const newDate=new Date(prev);newDate.setDate(prev.getDate()-1);return newDate;}),children:\"Prev\"}),/*#__PURE__*/_jsx(\"h2\",{children:currentDate.toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric',year:'numeric'})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentDate(prev=>{const newDate=new Date(prev);newDate.setDate(prev.getDate()+1);return newDate;}),children:\"Next\"})]})]}),/*#__PURE__*/_jsx(Dashboard,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"daily-overview\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"meal-type\",children:mealPlanData[selectedDay].type}),/*#__PURE__*/_jsx(\"div\",{className:\"meal-goals\",children:mealPlanData[selectedDay].goals.map((goal,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"goal-tag\",children:goal},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"meal-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Carbs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:mealPlanData[selectedDay].totalCarbs})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Calories\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:mealPlanData[selectedDay].totalCalories})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Liver Intake\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:mealPlanData[selectedDay].liver})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Completion\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[stats.percentage,\"%\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meal-list\",children:[getMealsForCurrentDate().map((meal,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"meal-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"meal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:meal.time}),/*#__PURE__*/_jsxs(\"div\",{className:\"meal-actions\",children:[meal.isAdded&&/*#__PURE__*/_jsx(\"button\",{className:\"remove-button\",onClick:()=>handleRemoveMeal(index),children:\"Remove\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"portion-toggle\",onClick:()=>togglePortionSize(meal.time),\"data-active\":getPortionSize(meal.time)==='large',children:[/*#__PURE__*/_jsx(\"span\",{className:\"toggle-label\",children:\"Large Portion\"}),/*#__PURE__*/_jsx(\"div\",{className:\"toggle-switch\"})]}),/*#__PURE__*/_jsxs(\"button\",{ref:index===activeMealSwap?swapButtonRef:null,className:\"swap-button\",onClick:()=>setActiveMealSwap(activeMealSwap===index?null:index),children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\"})}),\"Swap\"]}),activeMealSwap===index&&/*#__PURE__*/_jsxs(\"div\",{ref:swapMenuRef,className:\"swap-menu\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"swap-menu-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Swap Meal\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setActiveMealSwap(null),children:\"\\xD7\"})]}),days.filter(day=>day!==selectedDay).map(day=>/*#__PURE__*/_jsxs(\"div\",{className:\"swap-day-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"swap-day-header\",children:day.charAt(0).toUpperCase()+day.slice(1)}),mealPlanData[day].meals.map((swapMeal,swapIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"swap-menu-item\",onClick:()=>handleMealSwap(index,day,swapIndex),children:/*#__PURE__*/_jsxs(\"div\",{className:\"swap-meal-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"swap-meal-time\",children:swapMeal.time}),/*#__PURE__*/_jsx(\"div\",{className:\"swap-meal-items\",children:swapMeal.items.map(item=>item.name).join(', ')})]})},`${day}-${swapIndex}`))]},day))]}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"meal-checkbox\",checked:isMealCompleted(meal.time),onChange:()=>toggleMealCompletion(meal.time)})]})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"meal-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Food\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Portion\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Calories\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:getMealItemsWithPortionSize(meal).map((item,itemIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.portion}),/*#__PURE__*/_jsxs(\"td\",{children:[item.calories,\" kcal\"]})]},itemIndex))})]})]},index)),/*#__PURE__*/_jsx(\"button\",{className:\"add-meal-button\",onClick:()=>setShowAddMeal(true),children:\"+ Add Meal\"})]}),/*#__PURE__*/_jsx(CommentModal,{}),showAddMeal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Add New Meal\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Time\"}),/*#__PURE__*/_jsx(\"select\",{value:newMealTime,onChange:e=>setNewMealTime(e.target.value),className:\"time-select\",children:timeOptions.map(time=>/*#__PURE__*/_jsx(\"option\",{value:time,children:time},time))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Meal\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedMealTemplate,onChange:e=>setSelectedMealTemplate(e.target.value),className:\"meal-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a meal...\"}),getAllMealTemplates().map((template,index)=>/*#__PURE__*/_jsx(\"option\",{value:template.description,children:template.description},index))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAddMeal,children:\"Add Meal\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowAddMeal(false);setNewMealTime('12:00 PM');setSelectedMealTemplate('');},children:\"Cancel\"})]})]})})]});};export default MealPlanner;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","jsx","_jsx","jsxs","_jsxs","initialMealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portions","regular","portion","calories","large","tuesday","wednesday","thursday","friday","saturday","sunday","MealPlanner","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealPlanData","setMealPlanData","mealData","setMealData","saved","localStorage","getItem","JSON","parse","portionSizes","setPortionSizes","addedMeals","setAddedMeals","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","showAddMeal","setShowAddMeal","newMealTime","setNewMealTime","selectedMealTemplate","setSelectedMealTemplate","timeOptions","swapMenuRef","swapButtonRef","setItem","stringify","cleanupMealData","updatedMealData","Object","keys","forEach","key","includes","dateStr","split","date","day","getDay","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDateKey","toISOString","convertTo24Hour","time12h","timeMatch","match","_","hours","minutes","modifier","parseInt","toUpperCase","toString","padStart","isMealCompleted","mealTime","_mealData$mealKey","completed","getPortionSize","dateKey","togglePortionSize","prev","getMealItemsWithPortionSize","meal","currentPortionSize","map","item","getMealsForCurrentDate","_mealPlanData$selecte","defaultMeals","dateSpecificMeals","sort","a","b","timeA","timeB","localeCompare","calculateStats","_mealPlanData$selecte2","_mealPlanData$selecte3","todayMeals","totalCaloriesTarget","completedCalories","reduce","acc","sum","percentage","Math","round","total","overThreshold","displayPercentage","min","calculateMacros","weeklyCarbs","values","carbs","weeklyCalories","weeklyAvgCarbs","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","newMealIndex","currentMeal","newMeal","_mealData$mealKey2","wasCompleted","updatedData","updatedMeals","toggleMealCompletion","_prev$mealKey","handleCommentOpen","handleCommentSave","getAllMealTemplates","templates","some","t","push","description","join","handleAddMeal","selectedTemplate","find","isAdded","handleRemoveMeal","index","allMeals","mealToRemove","updatedDateMeals","filter","newAddedMeals","length","days","stats","Dashboard","weekStats","weekStart","diff","getDate","setDate","weekDays","Array","from","i","_mealPlanData$weekday","_mealPlanData$weekday2","_mealPlanData$weekday3","dayKey","dayMeals","_mealData$mealKey3","targetCalories","weekPercentage","getProgressColor","className","children","style","width","backgroundColor","toLocaleString","CommentModal","value","onChange","e","placeholder","onClick","newDate","month","year","goal","ref","xmlns","viewBox","fill","d","charAt","slice","swapMeal","swapIndex","checked","itemIndex","template"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~11 AM)',\n        items: [\n          {\n            name: 'Beef (or Chicken) + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Mahi Mahi OR Tuna',\n            portions: {\n              regular: { portion: '8-10 oz', calories: 400 },\n              large: { portion: '10-12 oz', calories: 500 }\n            }\n          },\n          {\n            name: 'Eggs + Butter',\n            portions: {\n              regular: { portion: '2 eggs + 1 tbsp butter', calories: 260 },\n              large: { portion: '3 eggs + 1 tbsp butter', calories: 360 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n        ]\n      }\n    ]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4 oz chicken liver',\n    meals: [\n      {\n        time: 'Pre-Walk (~10 AM)',\n        items: [\n          { name: 'Honey', portion: '1 tsp', calories: 20 },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Butter',\n            portions: {\n              regular: { portion: '3 eggs + 1 tbsp butter', calories: 400 },\n              large: { portion: '4 eggs + 1.5 tbsp butter', calories: 550 }\n            }\n          },\n          {\n            name: 'Fresh Fish',\n            portions: {\n              regular: { portion: '8-10 oz', calories: 350 },\n              large: { portion: '10-12 oz', calories: 450 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 600 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 750 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Chicken Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 300 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          {\n            name: 'Honey + Banana',\n            portions: {\n              regular: { portion: '1 tbsp honey + ½ banana', calories: 100 },\n              large: { portion: '1.5 tbsp honey + 1 banana', calories: 150 }\n            }\n          },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Beef + Sweet Potato',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef/Chicken + Rice',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup rice', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup rice', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Banana/Pineapple',\n            portions: {\n              regular: { portion: '½ fruit', calories: 50 },\n              large: { portion: '1 fruit', calories: 100 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Fish + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter + Sauerkraut',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Beef Liver',\n            portions: {\n              regular: { portion: '4 oz', calories: 350 },\n              large: { portion: '6 oz', calories: 450 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          {\n            name: 'Honey + Banana',\n            portions: {\n              regular: { portion: '1 tbsp honey + ½ banana', calories: 100 },\n              large: { portion: '1.5 tbsp honey + 1 banana', calories: 150 }\n            }\n          },\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Beef + Sweet Potato',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef/Chicken + Rice',\n            portions: {\n              regular: { portion: '8-10 oz + ½ cup rice', calories: 550 },\n              large: { portion: '10-12 oz + ¾ cup rice', calories: 700 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Banana/Pineapple',\n            portions: {\n              regular: { portion: '½ fruit', calories: 50 },\n              large: { portion: '1 fruit', calories: 100 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Fish + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: 'None',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          {\n            name: 'Coffee + Coconut Oil',\n            portions: {\n              regular: { portion: '1 tbsp coconut oil', calories: 120 },\n              large: { portion: '1.5 tbsp coconut oil', calories: 180 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          {\n            name: 'Eggs + Fish',\n            portions: {\n              regular: { portion: '3 eggs + 8-10 oz fish', calories: 500 },\n              large: { portion: '3 eggs + 10-12 oz fish', calories: 650 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          {\n            name: 'Beef + Butter',\n            portions: {\n              regular: { portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n              large: { portion: '10-12 oz + 1 tbsp butter', calories: 750 }\n            }\n          },\n          {\n            name: 'Avocado',\n            portions: {\n              regular: { portion: '½ medium', calories: 120 },\n              large: { portion: '1 medium', calories: 240 }\n            }\n          },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          {\n            name: 'Chicken + Avocado',\n            portions: {\n              regular: { portion: '8-10 oz + ½ avocado', calories: 450 },\n              large: { portion: '10-12 oz + ½ avocado', calories: 570 }\n            }\n          },\n          {\n            name: 'Butter',\n            portions: {\n              regular: { portion: '1 tbsp', calories: 100 },\n              large: { portion: '1.5 tbsp', calories: 150 }\n            }\n          },\n          {\n            name: 'Eggs',\n            portions: {\n              regular: { portion: '2 eggs', calories: 160 },\n              large: { portion: '3 eggs', calories: 240 }\n            }\n          }\n        ]\n      }\n    ]\n  }\n};\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [portionSizes, setPortionSizes] = useState(() => {\n    const saved = localStorage.getItem('portionSizes');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [addedMeals, setAddedMeals] = useState(() => {\n    const saved = localStorage.getItem('addedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [selectedMealTemplate, setSelectedMealTemplate] = useState('');\n  const timeOptions = [\n    '6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM',\n    '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM',\n    '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'\n  ];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  useEffect(() => {\n    localStorage.setItem('portionSizes', JSON.stringify(portionSizes));\n  }, [portionSizes]);\n\n  useEffect(() => {\n    localStorage.setItem('addedMeals', JSON.stringify(addedMeals));\n  }, [addedMeals]);\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n\n  useEffect(() => {\n    // Clean up any unwanted meals from localStorage\n    const cleanupMealData = () => {\n      const updatedMealData = { ...mealData };\n      Object.keys(updatedMealData).forEach(key => {\n        if (key.includes('2:00 PM')) {\n          const [dateStr] = key.split('-');\n          const date = new Date(dateStr);\n          const day = date.getDay();\n          if (day === 6) {\n            delete updatedMealData[key];\n          }\n        }\n      });\n      setMealData(updatedMealData);\n    };\n    \n    cleanupMealData();\n  }, []);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (activeMealSwap !== null &&\n          swapMenuRef.current &&\n          !swapMenuRef.current.contains(event.target) &&\n          swapButtonRef.current &&\n          !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const convertTo24Hour = (time12h) => {\n    const timeMatch = time12h.match(/(\\d{1,2}):?(\\d{2})?\\s*(AM|PM)/i);\n    if (!timeMatch) return '00:00';\n    \n    let [_, hours, minutes = '00', modifier] = timeMatch;\n    hours = parseInt(hours);\n    \n    if (hours === 12) {\n      hours = modifier.toUpperCase() === 'PM' ? 12 : 0;\n    } else if (modifier.toUpperCase() === 'PM') {\n      hours = hours + 12;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n\n  const isMealCompleted = useCallback((mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  }, [currentDate, mealData]);\n\n  const getPortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    return portionSizes[mealKey] || 'regular';\n  };\n\n  const togglePortionSize = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setPortionSizes(prev => ({\n      ...prev,\n      [mealKey]: prev[mealKey] === 'regular' ? 'large' : 'regular'\n    }));\n  };\n\n  const getMealItemsWithPortionSize = (meal) => {\n    const currentPortionSize = getPortionSize(meal.time);\n    \n    return meal.items.map(item => {\n      if (item.portions) {\n        return {\n          ...item,\n          portion: item.portions[currentPortionSize].portion,\n          calories: item.portions[currentPortionSize].calories\n        };\n      }\n      return item;\n    });\n  };\n\n  const getMealsForCurrentDate = useCallback(() => {\n    const dateKey = getDateKey(currentDate);\n    const defaultMeals = mealPlanData[selectedDay]?.meals || [];\n    const dateSpecificMeals = addedMeals[dateKey] || [];\n    \n    // Combine and sort all meals\n    return [...defaultMeals, ...dateSpecificMeals].sort((a, b) => {\n      const timeA = convertTo24Hour(a.time);\n      const timeB = convertTo24Hour(b.time);\n      return timeA.localeCompare(timeB);\n    });\n  }, [currentDate, selectedDay, mealPlanData, addedMeals]);\n\n  const calculateStats = useCallback(() => {\n    const todayMeals = getMealsForCurrentDate();\n    const totalCaloriesTarget = parseInt(mealPlanData[selectedDay]?.totalCalories?.split('-')[1]) || 2400;\n    \n    const completedCalories = todayMeals.reduce((acc, meal) => {\n      if (isMealCompleted(meal.time)) {\n        const items = getMealItemsWithPortionSize(meal);\n        return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n      }\n      return acc;\n    }, 0);\n\n    const percentage = Math.round((completedCalories / totalCaloriesTarget) * 100);\n    \n    return {\n      completed: completedCalories,\n      total: totalCaloriesTarget,\n      percentage,\n      overThreshold: completedCalories > totalCaloriesTarget,\n      displayPercentage: Math.min(percentage, 100)\n    };\n  }, [selectedDay, isMealCompleted, getMealsForCurrentDate, getMealItemsWithPortionSize, mealPlanData]);\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    \n    if (newMeal) {\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = mealData[mealKey]?.completed || false;\n      \n      setMealPlanData(prev => {\n        const updatedData = { ...prev };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      \n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const getAllMealTemplates = useCallback(() => {\n    const templates = [];\n    Object.values(mealPlanData).forEach(day => {\n      day.meals.forEach(meal => {\n        if (!templates.some(t => \n          JSON.stringify(t.items) === JSON.stringify(meal.items)\n        )) {\n          templates.push({\n            items: meal.items,\n            description: meal.items.map(item => item.name).join(', ')\n          });\n        }\n      });\n    });\n    return templates;\n  }, [mealPlanData]);\n\n  const handleAddMeal = () => {\n    if (!newMealTime || !selectedMealTemplate) return;\n    \n    const selectedTemplate = getAllMealTemplates().find(t => \n      t.description === selectedMealTemplate\n    );\n    \n    if (!selectedTemplate) return;\n\n    const dateKey = getDateKey(currentDate);\n    \n    setAddedMeals(prev => ({\n      ...prev,\n      [dateKey]: [\n        ...(prev[dateKey] || []),\n        {\n          time: newMealTime,\n          items: selectedTemplate.items,\n          isAdded: true\n        }\n      ].sort((a, b) => {\n        const timeA = convertTo24Hour(a.time);\n        const timeB = convertTo24Hour(b.time);\n        return timeA.localeCompare(timeB);\n      })\n    }));\n    \n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setSelectedMealTemplate('');\n  };\n\n  const handleRemoveMeal = (index) => {\n    const dateKey = getDateKey(currentDate);\n    const allMeals = getMealsForCurrentDate();\n    const mealToRemove = allMeals[index];\n    \n    // Only proceed if it's an added meal\n    if (!mealToRemove.isAdded) return;\n    \n    setAddedMeals(prev => {\n      const updatedDateMeals = (prev[dateKey] || []).filter(meal => \n        meal.time !== mealToRemove.time || \n        JSON.stringify(meal.items) !== JSON.stringify(mealToRemove.items)\n      );\n      \n      const newAddedMeals = { ...prev };\n      if (updatedDateMeals.length === 0) {\n        delete newAddedMeals[dateKey];\n      } else {\n        newAddedMeals[dateKey] = updatedDateMeals;\n      }\n      \n      return newAddedMeals;\n    });\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      // Get the start of the current week (Monday)\n      const weekStart = new Date(currentDate);\n      const day = weekStart.getDay();\n      const diff = weekStart.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n      weekStart.setDate(diff);\n      \n      // Calculate stats for each day of the current week (Monday to Sunday)\n      const weekDays = Array.from({ length: 7 }, (_, i) => {\n        const date = new Date(weekStart);\n        date.setDate(weekStart.getDate() + i);\n        const dayKey = getDateKey(date);\n        const weekday = date.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n        \n        // Get all meals for this day\n        const dayMeals = [...(mealPlanData[weekday]?.meals || [])];\n        const dateSpecificMeals = addedMeals[dayKey] || [];\n        const allMeals = [...dayMeals, ...dateSpecificMeals];\n\n        // Calculate completed calories for this day\n        const completedCalories = allMeals.reduce((acc, meal) => {\n          const mealKey = `${dayKey}-${meal.time}`;\n          if (mealData[mealKey]?.completed) {\n            const items = getMealItemsWithPortionSize({ ...meal, time: meal.time });\n            return acc + items.reduce((sum, item) => sum + (item.calories || 0), 0);\n          }\n          return acc;\n        }, 0);\n\n        // Get target calories for this day\n        const targetCalories = parseInt(mealPlanData[weekday]?.totalCalories?.split('-')[1]) || 2400;\n        \n        return {\n          completed: completedCalories,\n          total: targetCalories,\n          weekday\n        };\n      });\n      \n      // Sum up the totals\n      return {\n        ...weekDays.reduce((acc, day) => ({\n          completed: acc.completed + day.completed,\n          total: acc.total + day.total\n        }), { completed: 0, total: 0 }),\n        days: weekDays\n      };\n    }, [currentDate, mealData, mealPlanData, addedMeals, getMealItemsWithPortionSize]);\n\n    const weekPercentage = weekStats.total > 0 \n      ? Math.round((weekStats.completed / weekStats.total) * 100)\n      : 0;\n    \n    const getProgressColor = (percentage) => {\n      if (percentage <= 33) return '#ef4444';  // Red\n      if (percentage <= 66) return '#f59e0b';  // Yellow/Orange\n      return '#22c55e';  // Green\n    };\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Calories</span>\n                <span className={stats.overThreshold ? 'over-threshold' : ''}>\n                  {stats.completed}/{stats.total} ({stats.percentage}%)\n                </span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className={`progress-fill ${stats.overThreshold ? 'over-threshold' : ''}`}\n                  style={{ \n                    width: `${stats.displayPercentage}%`,\n                    backgroundColor: stats.overThreshold ? '#ef4444' : getProgressColor(stats.percentage),\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"stats-section\">\n            <h3>Weekly Progress (Mon-Sun)</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Week Calories</span>\n                <span>{weekStats.completed.toLocaleString()}/{weekStats.total.toLocaleString()} ({weekPercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${weekPercentage}%`,\n                    backgroundColor: getProgressColor(weekPercentage)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"meal-planner\">\n      <header className=\"header\">\n        <h1>Keto-Cycling Meal Plan</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Prev\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n      </header>\n\n      <Dashboard />\n\n      <div className=\"daily-overview\">\n        <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n        \n        <div className=\"meal-goals\">\n          {mealPlanData[selectedDay].goals.map((goal, index) => (\n            <span key={index} className=\"goal-tag\">{goal}</span>\n          ))}\n        </div>\n\n        <div className=\"meal-stats\">\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Carbs</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCarbs}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Calories</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCalories}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Liver Intake</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].liver}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Completion</div>\n            <div className=\"stat-value\">{stats.percentage}%</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meal-list\">\n        {getMealsForCurrentDate().map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                {meal.isAdded && (\n                  <button \n                    className=\"remove-button\"\n                    onClick={() => handleRemoveMeal(index)}\n                  >\n                    Remove\n                  </button>\n                )}\n                <button\n                  className=\"portion-toggle\"\n                  onClick={() => togglePortionSize(meal.time)}\n                  data-active={getPortionSize(meal.time) === 'large'}\n                >\n                  <span className=\"toggle-label\">Large Portion</span>\n                  <div className=\"toggle-switch\" />\n                </button>\n                <button \n                  ref={index === activeMealSwap ? swapButtonRef : null}\n                  className=\"swap-button\"\n                  onClick={() => setActiveMealSwap(activeMealSwap === index ? null : index)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                  </svg>\n                  Swap\n                </button>\n                {activeMealSwap === index && (\n                  <div ref={swapMenuRef} className=\"swap-menu\">\n                    <div className=\"swap-menu-header\">\n                      <h4>Swap Meal</h4>\n                      <button \n                        className=\"close-button\"\n                        onClick={() => setActiveMealSwap(null)}\n                      >\n                        ×\n                      </button>\n                    </div>\n                    {days\n                      .filter(day => day !== selectedDay)\n                      .map(day => (\n                        <div key={day} className=\"swap-day-section\">\n                          <div className=\"swap-day-header\">{day.charAt(0).toUpperCase() + day.slice(1)}</div>\n                          {mealPlanData[day].meals.map((swapMeal, swapIndex) => (\n                            <div \n                              key={`${day}-${swapIndex}`}\n                              className=\"swap-menu-item\"\n                              onClick={() => handleMealSwap(index, day, swapIndex)}\n                            >\n                              <div className=\"swap-meal-info\">\n                                <div className=\"swap-meal-time\">{swapMeal.time}</div>\n                                <div className=\"swap-meal-items\">\n                                  {swapMeal.items.map(item => item.name).join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                  </div>\n                )}\n                <input\n                  type=\"checkbox\"\n                  className=\"meal-checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getMealItemsWithPortionSize(meal).map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n        <button \n          className=\"add-meal-button\"\n          onClick={() => setShowAddMeal(true)}\n        >\n          + Add Meal\n        </button>\n      </div>\n      \n      <CommentModal />\n      \n      {showAddMeal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Add New Meal</h3>\n            <div className=\"input-group\">\n              <label>Select Time</label>\n              <select\n                value={newMealTime}\n                onChange={(e) => setNewMealTime(e.target.value)}\n                className=\"time-select\"\n              >\n                {timeOptions.map(time => (\n                  <option key={time} value={time}>{time}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"input-group\">\n              <label>Select Meal</label>\n              <select\n                value={selectedMealTemplate}\n                onChange={(e) => setSelectedMealTemplate(e.target.value)}\n                className=\"meal-select\"\n              >\n                <option value=\"\">Select a meal...</option>\n                {getAllMealTemplates().map((template, index) => (\n                  <option key={index} value={template.description}>\n                    {template.description}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"modal-buttons\">\n              <button onClick={handleAddMeal}>Add Meal</button>\n              <button onClick={() => {\n                setShowAddMeal(false);\n                setNewMealTime('12:00 PM');\n                setSelectedMealTemplate('');\n              }}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}