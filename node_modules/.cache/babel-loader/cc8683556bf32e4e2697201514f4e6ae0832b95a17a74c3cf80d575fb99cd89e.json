{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MealPlanner=()=>{const[currentDate,setCurrentDate]=useState(new Date());const[selectedDay,setSelectedDay]=useState(()=>{const weekday=currentDate.toLocaleDateString('en-US',{weekday:'long'}).toLowerCase();return weekday;});const[completedMeals,setCompletedMeals]=useState(()=>{const saved=localStorage.getItem('completedMeals');return saved?JSON.parse(saved):{};});useEffect(()=>{localStorage.setItem('completedMeals',JSON.stringify(completedMeals));},[completedMeals]);const mealPlanData={monday:{type:'Strict Keto Day',goals:['Fat-burning','Low insulin response','High satiety'],totalCarbs:'30-40g',totalCalories:'2200-2400',liver:'4-6 oz beef liver',meals:[{time:'Morning (Fasted) OR Coffee',items:[{name:'Coffee + Coconut Oil',portion:'1 tbsp coconut oil',calories:120}]},{time:'Meal 1 (~11 AM)',items:[{name:'Beef (or Chicken) + Butter',portion:'8-10 oz + 1 tbsp butter',calories:600},{name:'Avocado',portion:'½ medium',calories:120},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Mahi Mahi OR Tuna',portion:'8-10 oz',calories:400},{name:'Eggs',portion:'2 eggs',calories:160}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portion:'4-6 oz',calories:350},{name:'Avocado',portion:'½ medium',calories:120},{name:'Chamomile OR Lemon Balm Tea',portion:'1 cup',calories:0}]}]},tuesday:{type:'Strict Keto Day (With Honey)',goals:['Continue fat-burning','Small honey boost for energy'],totalCarbs:'30-40g',totalCalories:'2000-2200',liver:'4 oz chicken liver',meals:[{time:'Pre-Walk (~10 AM)',items:[{name:'Honey',portion:'1 tsp',calories:20}]},{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Butter',portion:'3 eggs + 1 tbsp butter',calories:400},{name:'Fresh Fish',portion:'8 oz',calories:350}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Avocado',portion:'8 oz + ½ avocado',calories:600},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Chicken Liver',portion:'4 oz',calories:300}]}]},wednesday:{type:'Carb Refeed Day',goals:['Refuel glycogen','Metabolic reset','Hormone support'],totalCarbs:'100-120g',totalCalories:'2200-2400',liver:'None (Refeed day)',meals:[{time:'Pre-Workout (~10 AM)',items:[{name:'Honey + Banana',portion:'1 tbsp honey + ½ banana',calories:100}]},{time:'Meal 1 (~12 PM)',items:[{name:'Beef + Sweet Potato',portion:'8 oz + ½ cup',calories:550},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef/Chicken + Rice',portion:'8 oz + ½ cup rice',calories:550},{name:'Banana/Pineapple',portion:'½ fruit',calories:50}]},{time:'Meal 3 (~8 PM)',items:[{name:'Fish + Avocado',portion:'6 oz + ½ avocado',calories:450}]}]},thursday:{type:'Strict Keto Day',goals:['Return to ketosis','Maintain stable energy'],totalCarbs:'30-40g',totalCalories:'2000-2200',liver:'6 oz beef liver',meals:[{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portion:'3 eggs + 8 oz fish',calories:500}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter + Sauerkraut',portion:'8 oz + 1 tbsp butter',calories:550}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portion:'6 oz',calories:450}]}]},friday:{type:'Strict Keto Day',goals:['Deep fat-burning','Satiety','Nutrient rebalancing'],totalCarbs:'30-40g',totalCalories:'2000-2200',liver:'4-6 oz beef liver',meals:[{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portion:'3 eggs + 8 oz fish',calories:500}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter',portion:'8 oz + 1 tbsp butter',calories:550},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Beef Liver',portion:'4-6 oz',calories:450}]}]},saturday:{type:'Carb Refeed Day',goals:['Glycogen replenishment','Performance support'],totalCarbs:'100-120g',totalCalories:'2200-2400',liver:'None (Refeed day)',meals:[{time:'Pre-Workout (~10 AM)',items:[{name:'Honey + Banana',portion:'1 tbsp honey + ½ banana',calories:100}]},{time:'Meal 1 (~12 PM)',items:[{name:'Beef + Sweet Potato',portion:'8 oz + ½ cup',calories:550},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef/Chicken + Rice',portion:'8 oz + ½ cup rice',calories:550},{name:'Banana/Pineapple',portion:'½ fruit',calories:50}]}]},sunday:{type:'Strict Keto Day',goals:['Fat adaptation','Recovery'],totalCarbs:'30-40g',totalCalories:'2000-2200',liver:'None',meals:[{time:'Meal 1 (~12 PM)',items:[{name:'Eggs + Fish',portion:'3 eggs + 8 oz fish',calories:500}]},{time:'Meal 2 (~4 PM)',items:[{name:'Beef + Butter',portion:'8 oz + 1 tbsp butter',calories:550},{name:'Sauerkraut',portion:'¼ cup',calories:10}]},{time:'Meal 3 (~8 PM)',items:[{name:'Chicken + Avocado',portion:'8 oz + ½ avocado',calories:450}]}]}};const toggleMealCompletion=mealTime=>{const mealKey=`${currentDate.toISOString().split('T')[0]}-${mealTime}`;setCompletedMeals(prev=>({...prev,[mealKey]:!prev[mealKey]}));};const isMealCompleted=mealTime=>{const mealKey=`${currentDate.toISOString().split('T')[0]}-${mealTime}`;return completedMeals[mealKey]||false;};const days=['monday','tuesday','wednesday','thursday','friday','saturday','sunday'];return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'800px',margin:'0 auto',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:'center',marginBottom:'20px'},children:\"Keto-Cycling Meal Plan\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',gap:'15px',marginBottom:'20px',padding:'10px',backgroundColor:'#f5f5f5',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newDate=new Date(currentDate);newDate.setDate(currentDate.getDate()-1);setCurrentDate(newDate);},style:{padding:'8px 16px',border:'1px solid #ccc',borderRadius:'4px',backgroundColor:'white',cursor:'pointer'},children:\"Previous\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',padding:'8px 16px',minWidth:'150px',textAlign:'center'},children:currentDate.toLocaleDateString('en-US',{month:'short',day:'numeric',year:'numeric'})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const newDate=new Date(currentDate);newDate.setDate(currentDate.getDate()+1);setCurrentDate(newDate);},style:{padding:'8px 16px',border:'1px solid #ccc',borderRadius:'4px',backgroundColor:'white',cursor:'pointer'},children:\"Next\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'20px'},children:days.map(day=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedDay(day),style:{padding:'10px',backgroundColor:selectedDay===day?'#e0e0e0':'white',border:'1px solid #ccc',borderRadius:'4px',cursor:'pointer'},children:day.charAt(0).toUpperCase()+day.slice(1,3)},day))}),mealPlanData[selectedDay]&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:mealPlanData[selectedDay].type}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'20px'},children:mealPlanData[selectedDay].goals.map((goal,index)=>/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',padding:'5px 10px',margin:'5px',backgroundColor:'#f0f0f0',borderRadius:'15px'},children:goal},index))}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Carbs:\"}),\" \",mealPlanData[selectedDay].totalCarbs]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Calories:\"}),\" \",mealPlanData[selectedDay].totalCalories]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Liver Intake:\"}),\" \",mealPlanData[selectedDay].liver]})]}),mealPlanData[selectedDay].meals.map((meal,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{border:'1px solid #ccc',borderRadius:'8px',padding:'15px',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0},children:meal.time}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isMealCompleted(meal.time),onChange:()=>toggleMealCompletion(meal.time)}),\"Complete\"]})]}),/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left'},children:\"Food\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left'},children:\"Portion\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'right'},children:\"Calories\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:meal.items.map((item,itemIndex)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:item.name}),/*#__PURE__*/_jsx(\"td\",{children:item.portion}),/*#__PURE__*/_jsxs(\"td\",{style:{textAlign:'right'},children:[item.calories,\" kcal\"]})]},itemIndex))})]})]},index))]})]});};export default MealPlanner;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","MealPlanner","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","completedMeals","setCompletedMeals","saved","localStorage","getItem","JSON","parse","setItem","stringify","mealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portion","calories","tuesday","wednesday","thursday","friday","saturday","sunday","toggleMealCompletion","mealTime","mealKey","toISOString","split","prev","isMealCompleted","days","style","maxWidth","margin","padding","children","textAlign","marginBottom","display","justifyContent","alignItems","gap","backgroundColor","borderRadius","onClick","newDate","setDate","getDate","border","cursor","fontWeight","minWidth","month","day","year","map","charAt","toUpperCase","slice","goal","index","meal","checked","onChange","width","marginTop","item","itemIndex"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [completedMeals, setCompletedMeals] = useState(() => {\n    const saved = localStorage.getItem('completedMeals');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  useEffect(() => {\n    localStorage.setItem('completedMeals', JSON.stringify(completedMeals));\n  }, [completedMeals]);\n\n  const mealPlanData = {\n    monday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n      totalCarbs: '30-40g',\n      totalCalories: '2200-2400',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Morning (Fasted) OR Coffee',\n          items: [\n            { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~11 AM)',\n          items: [\n            { name: 'Beef (or Chicken) + Butter', portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Mahi Mahi OR Tuna', portion: '8-10 oz', calories: 400 },\n            { name: 'Eggs', portion: '2 eggs', calories: 160 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n            { name: 'Avocado', portion: '½ medium', calories: 120 },\n            { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n          ]\n        }\n      ]\n    },\n    tuesday: {\n      type: 'Strict Keto Day (With Honey)',\n      goals: ['Continue fat-burning', 'Small honey boost for energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4 oz chicken liver',\n      meals: [\n        {\n          time: 'Pre-Walk (~10 AM)',\n          items: [\n            { name: 'Honey', portion: '1 tsp', calories: 20 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n            { name: 'Fresh Fish', portion: '8 oz', calories: 350 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Avocado', portion: '8 oz + ½ avocado', calories: 600 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken Liver', portion: '4 oz', calories: 300 }\n          ]\n        }\n      ]\n    },\n    wednesday: {\n      type: 'Carb Refeed Day',\n      goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Fish + Avocado', portion: '6 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    },\n    thursday: {\n      type: 'Strict Keto Day',\n      goals: ['Return to ketosis', 'Maintain stable energy'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter + Sauerkraut', portion: '8 oz + 1 tbsp butter', calories: 550 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    friday: {\n      type: 'Strict Keto Day',\n      goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: '4-6 oz beef liver',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Beef Liver', portion: '4-6 oz', calories: 450 }\n          ]\n        }\n      ]\n    },\n    saturday: {\n      type: 'Carb Refeed Day',\n      goals: ['Glycogen replenishment', 'Performance support'],\n      totalCarbs: '100-120g',\n      totalCalories: '2200-2400',\n      liver: 'None (Refeed day)',\n      meals: [\n        {\n          time: 'Pre-Workout (~10 AM)',\n          items: [\n            { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n          ]\n        },\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n            { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n          ]\n        }\n      ]\n    },\n    sunday: {\n      type: 'Strict Keto Day',\n      goals: ['Fat adaptation', 'Recovery'],\n      totalCarbs: '30-40g',\n      totalCalories: '2000-2200',\n      liver: 'None',\n      meals: [\n        {\n          time: 'Meal 1 (~12 PM)',\n          items: [\n            { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n          ]\n        },\n        {\n          time: 'Meal 2 (~4 PM)',\n          items: [\n            { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n            { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n          ]\n        },\n        {\n          time: 'Meal 3 (~8 PM)',\n          items: [\n            { name: 'Chicken + Avocado', portion: '8 oz + ½ avocado', calories: 450 }\n          ]\n        }\n      ]\n    }\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    setCompletedMeals(prev => ({\n      ...prev,\n      [mealKey]: !prev[mealKey]\n    }));\n  };\n\n  const isMealCompleted = (mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return completedMeals[mealKey] || false;\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '20px' }}>\n      <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Keto-Cycling Meal Plan</h1>\n      \n      {/* Date Navigation */}\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        gap: '15px',\n        marginBottom: '20px',\n        padding: '10px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        <button \n          onClick={() => {\n            const newDate = new Date(currentDate);\n            newDate.setDate(currentDate.getDate() - 1);\n            setCurrentDate(newDate);\n          }}\n          style={{\n            padding: '8px 16px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            backgroundColor: 'white',\n            cursor: 'pointer'\n          }}\n        >\n          Previous\n        </button>\n        <div style={{ \n          fontWeight: 'bold',\n          padding: '8px 16px',\n          minWidth: '150px',\n          textAlign: 'center'\n        }}>\n          {currentDate.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}\n        </div>\n        <button \n          onClick={() => {\n            const newDate = new Date(currentDate);\n            newDate.setDate(currentDate.getDate() + 1);\n            setCurrentDate(newDate);\n          }}\n          style={{\n            padding: '8px 16px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            backgroundColor: 'white',\n            cursor: 'pointer'\n          }}\n        >\n          Next\n        </button>\n      </div>\n\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n        {days.map(day => (\n          <button\n            key={day}\n            onClick={() => setSelectedDay(day)}\n            style={{\n              padding: '10px',\n              backgroundColor: selectedDay === day ? '#e0e0e0' : 'white',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            {day.charAt(0).toUpperCase() + day.slice(1, 3)}\n          </button>\n        ))}\n      </div>\n\n      {mealPlanData[selectedDay] && (\n        <div>\n          <h2>{mealPlanData[selectedDay].type}</h2>\n          <div style={{ marginBottom: '20px' }}>\n            {mealPlanData[selectedDay].goals.map((goal, index) => (\n              <span\n                key={index}\n                style={{\n                  display: 'inline-block',\n                  padding: '5px 10px',\n                  margin: '5px',\n                  backgroundColor: '#f0f0f0',\n                  borderRadius: '15px'\n                }}\n              >\n                {goal}\n              </span>\n            ))}\n          </div>\n\n          <div style={{ marginBottom: '20px' }}>\n            <div><strong>Total Carbs:</strong> {mealPlanData[selectedDay].totalCarbs}</div>\n            <div><strong>Total Calories:</strong> {mealPlanData[selectedDay].totalCalories}</div>\n            <div><strong>Liver Intake:</strong> {mealPlanData[selectedDay].liver}</div>\n          </div>\n\n          {mealPlanData[selectedDay].meals.map((meal, index) => (\n            <div\n              key={index}\n              style={{\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n                padding: '15px',\n                marginBottom: '15px'\n              }}\n            >\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <h3 style={{ margin: 0 }}>{meal.time}</h3>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={isMealCompleted(meal.time)}\n                    onChange={() => toggleMealCompletion(meal.time)}\n                  />\n                  Complete\n                </label>\n              </div>\n              <table style={{ width: '100%', marginTop: '10px' }}>\n                <thead>\n                  <tr>\n                    <th style={{ textAlign: 'left' }}>Food</th>\n                    <th style={{ textAlign: 'left' }}>Portion</th>\n                    <th style={{ textAlign: 'right' }}>Calories</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {meal.items.map((item, itemIndex) => (\n                    <tr key={itemIndex}>\n                      <td>{item.name}</td>\n                      <td>{item.portion}</td>\n                      <td style={{ textAlign: 'right' }}>{item.calories} kcal</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}