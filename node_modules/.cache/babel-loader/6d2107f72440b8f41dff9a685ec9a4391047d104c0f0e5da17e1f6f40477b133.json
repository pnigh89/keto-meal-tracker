{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~11 AM)',\n      items: [{\n        name: 'Beef (or Chicken) + Butter',\n        portion: '8-10 oz + 1 tbsp butter',\n        calories: 600\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Mahi Mahi OR Tuna',\n        portion: '8-10 oz',\n        calories: 400\n      }, {\n        name: 'Eggs',\n        portion: '2 eggs',\n        calories: 160\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 350\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Chamomile OR Lemon Balm Tea',\n        portion: '1 cup',\n        calories: 0\n      }]\n    }]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4 oz chicken liver',\n    meals: [{\n      time: 'Pre-Walk (~10 AM)',\n      items: [{\n        name: 'Honey',\n        portion: '1 tsp',\n        calories: 20\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Butter',\n        portion: '3 eggs + 1 tbsp butter',\n        calories: 400\n      }, {\n        name: 'Fresh Fish',\n        portion: '8 oz',\n        calories: 350\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Avocado',\n        portion: '8 oz + ½ avocado',\n        calories: 600\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken Liver',\n        portion: '4 oz',\n        calories: 300\n      }]\n    }]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '8 oz + ½ cup',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '8 oz + ½ cup rice',\n        calories: 550\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portion: '6 oz + ½ avocado',\n        calories: 450\n      }]\n    }]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '6 oz beef liver',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter + Sauerkraut',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '6 oz',\n        calories: 450\n      }]\n    }]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 450\n      }]\n    }]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '8 oz + ½ cup',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '8 oz + ½ cup rice',\n        calories: 550\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: 'None',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken + Avocado',\n        portion: '8 oz + ½ avocado',\n        calories: 450\n      }]\n    }]\n  }\n};\nconst MealPlanner = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const isMealCompleted = useCallback(mealTime => {\n    var _mealData$mealKey;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n  }, [currentDate, mealData]);\n  const calculateStats = useCallback(() => {\n    var _mealPlanData$selecte;\n    const todayMeals = ((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : _mealPlanData$selecte.meals) || [];\n    const completed = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n    const total = todayMeals.length;\n    const percentage = total > 0 ? completed / total * 100 : 0;\n\n    // Calculate calories\n    const totalCalories = todayMeals.reduce((acc, meal) => {\n      return acc + meal.items.reduce((mealAcc, item) => mealAcc + (item.calories || 0), 0);\n    }, 0);\n    const consumedCalories = todayMeals.filter(meal => isMealCompleted(meal.time)).reduce((acc, meal) => {\n      return acc + meal.items.reduce((mealAcc, item) => mealAcc + (item.calories || 0), 0);\n    }, 0);\n    return {\n      completed,\n      total,\n      percentage: Math.round(percentage),\n      totalCalories,\n      consumedCalories,\n      caloriePercentage: Math.round(consumedCalories / totalCalories * 100) || 0\n    };\n  }, [selectedDay, isMealCompleted]);\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    if (newMeal) {\n      var _mealData$mealKey2;\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n      setMealPlanData(prev => {\n        const updatedData = {\n          ...prev\n        };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    setActiveMealSwap(null);\n  };\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n  const Dashboard = () => {\n    _s();\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      return days.reduce((acc, day) => {\n        var _mealPlanData$day;\n        const dayMeals = ((_mealPlanData$day = mealPlanData[day]) === null || _mealPlanData$day === void 0 ? void 0 : _mealPlanData$day.meals) || [];\n        const completed = dayMeals.filter(meal => {\n          var _mealData$mealKey3;\n          const mealKey = `${getDateKey(currentDate)}-${meal.time}`;\n          return ((_mealData$mealKey3 = mealData[mealKey]) === null || _mealData$mealKey3 === void 0 ? void 0 : _mealData$mealKey3.completed) || false;\n        }).length;\n        const total = dayMeals.length;\n        return {\n          completed: acc.completed + completed,\n          total: acc.total + total\n        };\n      }, {\n        completed: 0,\n        total: 0\n      });\n    }, [mealData, currentDate]);\n    const weekPercentage = Math.round(weekStats.completed / weekStats.total * 100) || 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Meals Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [stats.completed, \"/\", stats.total, \" (\", stats.percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${stats.percentage}%`,\n                  backgroundColor: `hsl(${stats.percentage * 1.2}, 70%, 45%)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Calories Consumed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [stats.consumedCalories, \"/\", stats.totalCalories, \" (\", stats.caloriePercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${stats.caloriePercentage}%`,\n                  backgroundColor: `hsl(${stats.caloriePercentage * 1.2}, 70%, 45%)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Weekly Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Week Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weekStats.completed, \"/\", weekStats.total, \" (\", weekPercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${weekPercentage}%`,\n                  backgroundColor: `hsl(${weekPercentage * 1.2}, 70%, 45%)`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Dashboard, \"3A1WL06O40UxZKevtBh+/wpgfgc=\");\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Keto-Cycling Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          }),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDate.toLocaleDateString('en-US', {\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-selector\",\n        children: days.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedDay === day ? 'active' : '',\n          onClick: () => setSelectedDay(day),\n          children: day.charAt(0).toUpperCase() + day.slice(1, 3)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meal-type\",\n        children: mealPlanData[selectedDay].type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-goals\",\n        children: mealPlanData[selectedDay].goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"goal-tag\",\n          children: goal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCarbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Liver Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].liver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [stats.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-list\",\n      children: mealPlanData[selectedDay].meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"swap-button\",\n              onClick: () => setActiveMealSwap(activeMealSwap === index ? null : index),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), \"Swap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), activeMealSwap === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"swap-menu\",\n              children: days.filter(day => day !== selectedDay).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-day-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-day-header\",\n                  children: day.charAt(0).toUpperCase() + day.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 27\n                }, this), mealPlanData[day].meals.map((swapMeal, swapIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-menu-item\",\n                  onClick: () => handleMealSwap(index, day, swapIndex),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"swap-meal-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-time\",\n                      children: swapMeal.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-items\",\n                      children: swapMeal.items.map(item => item.name).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 31\n                  }, this)\n                }, `${day}-${swapIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 29\n                }, this))]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"meal-checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: meal.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.portion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.calories, \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n_s2(MealPlanner, \"nR1klu3JOWbUh909MXELFhDxOtM=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","jsxDEV","_jsxDEV","initialMealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portion","calories","tuesday","wednesday","thursday","friday","saturday","sunday","MealPlanner","_s2","_s","$RefreshSig$","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealPlanData","setMealPlanData","mealData","setMealData","saved","localStorage","getItem","JSON","parse","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","setItem","stringify","getDateKey","date","toISOString","split","isMealCompleted","mealTime","_mealData$mealKey","completed","calculateStats","_mealPlanData$selecte","todayMeals","filter","meal","length","total","percentage","reduce","acc","mealAcc","item","consumedCalories","Math","round","caloriePercentage","calculateMacros","weeklyCarbs","Object","values","day","carbs","parseInt","weeklyCalories","weeklyAvgCarbs","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","newMealIndex","currentMeal","newMeal","_mealData$mealKey2","dateKey","wasCompleted","prev","updatedData","updatedMeals","toggleMealCompletion","_prev$mealKey","handleCommentOpen","handleCommentSave","days","stats","Dashboard","weekStats","_mealPlanData$day","dayMeals","_mealData$mealKey3","weekPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","CommentModal","value","onChange","e","target","placeholder","onClick","newDate","setDate","getDate","month","year","map","charAt","toUpperCase","slice","goal","index","xmlns","viewBox","fill","d","swapMeal","swapIndex","join","checked","itemIndex","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\n\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~11 AM)',\n        items: [\n          { name: 'Beef (or Chicken) + Butter', portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Mahi Mahi OR Tuna', portion: '8-10 oz', calories: 400 },\n          { name: 'Eggs', portion: '2 eggs', calories: 160 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n        ]\n      }\n    ]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4 oz chicken liver',\n    meals: [\n      {\n        time: 'Pre-Walk (~10 AM)',\n        items: [\n          { name: 'Honey', portion: '1 tsp', calories: 20 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n          { name: 'Fresh Fish', portion: '8 oz', calories: 350 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Avocado', portion: '8 oz + ½ avocado', calories: 600 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken Liver', portion: '4 oz', calories: 300 }\n        ]\n      }\n    ]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Fish + Avocado', portion: '6 oz + ½ avocado', calories: 450 }\n        ]\n      }\n    ]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '6 oz beef liver',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter + Sauerkraut', portion: '8 oz + 1 tbsp butter', calories: 550 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '6 oz', calories: 450 }\n        ]\n      }\n    ]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 450 }\n        ]\n      }\n    ]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      }\n    ]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: 'None',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken + Avocado', portion: '8 oz + ½ avocado', calories: 450 }\n        ]\n      }\n    ]\n  }\n};\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const isMealCompleted = useCallback((mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  }, [currentDate, mealData]);\n\n  const calculateStats = useCallback(() => {\n    const todayMeals = mealPlanData[selectedDay]?.meals || [];\n    const completed = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n    const total = todayMeals.length;\n    const percentage = total > 0 ? (completed / total) * 100 : 0;\n    \n    // Calculate calories\n    const totalCalories = todayMeals.reduce((acc, meal) => {\n      return acc + meal.items.reduce((mealAcc, item) => mealAcc + (item.calories || 0), 0);\n    }, 0);\n    \n    const consumedCalories = todayMeals\n      .filter(meal => isMealCompleted(meal.time))\n      .reduce((acc, meal) => {\n        return acc + meal.items.reduce((mealAcc, item) => mealAcc + (item.calories || 0), 0);\n      }, 0);\n    \n    return {\n      completed,\n      total,\n      percentage: Math.round(percentage),\n      totalCalories,\n      consumedCalories,\n      caloriePercentage: Math.round((consumedCalories / totalCalories) * 100) || 0\n    };\n  }, [selectedDay, isMealCompleted]);\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    \n    if (newMeal) {\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = mealData[mealKey]?.completed || false;\n      \n      setMealPlanData(prev => {\n        const updatedData = { ...prev };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      \n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      return days.reduce((acc, day) => {\n        const dayMeals = mealPlanData[day]?.meals || [];\n        const completed = dayMeals.filter(meal => {\n          const mealKey = `${getDateKey(currentDate)}-${meal.time}`;\n          return mealData[mealKey]?.completed || false;\n        }).length;\n        const total = dayMeals.length;\n        return {\n          completed: acc.completed + completed,\n          total: acc.total + total\n        };\n      }, { completed: 0, total: 0 });\n    }, [mealData, currentDate]);\n\n    const weekPercentage = Math.round((weekStats.completed / weekStats.total) * 100) || 0;\n    \n    return (\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Meals Completed</span>\n                <span>{stats.completed}/{stats.total} ({stats.percentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${stats.percentage}%`,\n                    backgroundColor: `hsl(${stats.percentage * 1.2}, 70%, 45%)`\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Calories Consumed</span>\n                <span>{stats.consumedCalories}/{stats.totalCalories} ({stats.caloriePercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${stats.caloriePercentage}%`,\n                    backgroundColor: `hsl(${stats.caloriePercentage * 1.2}, 70%, 45%)`\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"stats-section\">\n            <h3>Weekly Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Week Total</span>\n                <span>{weekStats.completed}/{weekStats.total} ({weekPercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${weekPercentage}%`,\n                    backgroundColor: `hsl(${weekPercentage * 1.2}, 70%, 45%)`\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"meal-planner\">\n      <header className=\"header\">\n        <h1>Keto-Cycling Meal Plan</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Previous\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n\n        <div className=\"day-selector\">\n          {days.map(day => (\n            <button \n              key={day}\n              className={selectedDay === day ? 'active' : ''}\n              onClick={() => setSelectedDay(day)}\n            >\n              {day.charAt(0).toUpperCase() + day.slice(1, 3)}\n            </button>\n          ))}\n        </div>\n      </header>\n\n      <div className=\"daily-overview\">\n        <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n        \n        <div className=\"meal-goals\">\n          {mealPlanData[selectedDay].goals.map((goal, index) => (\n            <span key={index} className=\"goal-tag\">{goal}</span>\n          ))}\n        </div>\n\n        <div className=\"meal-stats\">\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Carbs</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCarbs}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Calories</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCalories}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Liver Intake</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].liver}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Completion</div>\n            <div className=\"stat-value\">{stats.percentage}%</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meal-list\">\n        {mealPlanData[selectedDay].meals.map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                <button \n                  className=\"swap-button\"\n                  onClick={() => setActiveMealSwap(activeMealSwap === index ? null : index)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                  </svg>\n                  Swap\n                </button>\n                {activeMealSwap === index && (\n                  <div className=\"swap-menu\">\n                    {days\n                      .filter(day => day !== selectedDay)\n                      .map(day => (\n                        <div key={day} className=\"swap-day-section\">\n                          <div className=\"swap-day-header\">{day.charAt(0).toUpperCase() + day.slice(1)}</div>\n                          {mealPlanData[day].meals.map((swapMeal, swapIndex) => (\n                            <div \n                              key={`${day}-${swapIndex}`}\n                              className=\"swap-menu-item\"\n                              onClick={() => handleMealSwap(index, day, swapIndex)}\n                            >\n                              <div className=\"swap-meal-info\">\n                                <div className=\"swap-meal-time\">{swapMeal.time}</div>\n                                <div className=\"swap-meal-items\">\n                                  {swapMeal.items.map(item => item.name).join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                  </div>\n                )}\n                <input\n                  type=\"checkbox\"\n                  className=\"meal-checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {meal.items.map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n      </div>\n      \n      <CommentModal />\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}