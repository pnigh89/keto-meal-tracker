{"ast":null,"code":"var _jsxFileName = \"/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Morning (Fasted) OR Coffee',\n      items: [{\n        name: 'Coffee + Coconut Oil',\n        portion: '1 tbsp coconut oil',\n        calories: 120\n      }]\n    }, {\n      time: 'Meal 1 (~11 AM)',\n      items: [{\n        name: 'Beef (or Chicken) + Butter',\n        portion: '8-10 oz + 1 tbsp butter',\n        calories: 600\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Mahi Mahi OR Tuna',\n        portion: '8-10 oz',\n        calories: 400\n      }, {\n        name: 'Eggs',\n        portion: '2 eggs',\n        calories: 160\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 350\n      }, {\n        name: 'Avocado',\n        portion: '½ medium',\n        calories: 120\n      }, {\n        name: 'Chamomile OR Lemon Balm Tea',\n        portion: '1 cup',\n        calories: 0\n      }]\n    }]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4 oz chicken liver',\n    meals: [{\n      time: 'Pre-Walk (~10 AM)',\n      items: [{\n        name: 'Honey',\n        portion: '1 tsp',\n        calories: 20\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Butter',\n        portion: '3 eggs + 1 tbsp butter',\n        calories: 400\n      }, {\n        name: 'Fresh Fish',\n        portion: '8 oz',\n        calories: 350\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Avocado',\n        portion: '8 oz + ½ avocado',\n        calories: 600\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken Liver',\n        portion: '4 oz',\n        calories: 300\n      }]\n    }]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '8 oz + ½ cup',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '8 oz + ½ cup rice',\n        calories: 550\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Fish + Avocado',\n        portion: '6 oz + ½ avocado',\n        calories: 450\n      }]\n    }]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '6 oz beef liver',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter + Sauerkraut',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '6 oz',\n        calories: 450\n      }]\n    }]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4-6 oz beef liver',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Beef Liver',\n        portion: '4-6 oz',\n        calories: 450\n      }]\n    }]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [{\n      time: 'Pre-Workout (~10 AM)',\n      items: [{\n        name: 'Honey + Banana',\n        portion: '1 tbsp honey + ½ banana',\n        calories: 100\n      }]\n    }, {\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Beef + Sweet Potato',\n        portion: '8 oz + ½ cup',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef/Chicken + Rice',\n        portion: '8 oz + ½ cup rice',\n        calories: 550\n      }, {\n        name: 'Banana/Pineapple',\n        portion: '½ fruit',\n        calories: 50\n      }]\n    }]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: 'None',\n    meals: [{\n      time: 'Meal 1 (~12 PM)',\n      items: [{\n        name: 'Eggs + Fish',\n        portion: '3 eggs + 8 oz fish',\n        calories: 500\n      }]\n    }, {\n      time: 'Meal 2 (~4 PM)',\n      items: [{\n        name: 'Beef + Butter',\n        portion: '8 oz + 1 tbsp butter',\n        calories: 550\n      }, {\n        name: 'Sauerkraut',\n        portion: '¼ cup',\n        calories: 10\n      }]\n    }, {\n      time: 'Meal 3 (~8 PM)',\n      items: [{\n        name: 'Chicken + Avocado',\n        portion: '8 oz + ½ avocado',\n        calories: 450\n      }]\n    }]\n  }\n};\nconst MealPlanner = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    return weekday;\n  });\n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [newMealItems, setNewMealItems] = useState([{\n    name: '',\n    portion: '',\n    calories: 0\n  }]);\n  const timeOptions = ['6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM', '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM', '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (activeMealSwap !== null && swapMenuRef.current && !swapMenuRef.current.contains(event.target) && swapButtonRef.current && !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n  const getDateKey = date => date.toISOString().split('T')[0];\n  const isMealCompleted = useCallback(mealTime => {\n    var _mealData$mealKey;\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return ((_mealData$mealKey = mealData[mealKey]) === null || _mealData$mealKey === void 0 ? void 0 : _mealData$mealKey.completed) || false;\n  }, [currentDate, mealData]);\n  const calculateStats = useCallback(() => {\n    var _mealPlanData$selecte;\n    const todayMeals = ((_mealPlanData$selecte = mealPlanData[selectedDay]) === null || _mealPlanData$selecte === void 0 ? void 0 : _mealPlanData$selecte.meals) || [];\n    const completed = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n    const total = todayMeals.length;\n    const percentage = total > 0 ? completed / total * 100 : 0;\n    return {\n      completed,\n      total,\n      percentage: Math.round(percentage)\n    };\n  }, [selectedDay, isMealCompleted]);\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    if (newMeal) {\n      var _mealData$mealKey2;\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = ((_mealData$mealKey2 = mealData[mealKey]) === null || _mealData$mealKey2 === void 0 ? void 0 : _mealData$mealKey2.completed) || false;\n      setMealPlanData(prev => {\n        const updatedData = {\n          ...prev\n        };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    setActiveMealSwap(null);\n  };\n  const toggleMealCompletion = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => {\n      var _prev$mealKey;\n      return {\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: !((_prev$mealKey = prev[mealKey]) !== null && _prev$mealKey !== void 0 && _prev$mealKey.completed)\n        }\n      };\n    });\n  };\n  const handleCommentOpen = mealTime => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({\n        isOpen: false,\n        mealKey: null,\n        comment: ''\n      });\n    }\n  };\n  const convertTo24Hour = time12h => {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours);\n    if (hours === 12) {\n      hours = modifier === 'PM' ? 12 : 0;\n    } else if (modifier === 'PM') {\n      hours = hours + 12;\n    }\n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n  const handleAddMealItem = () => {\n    setNewMealItems(prev => [...prev, {\n      name: '',\n      portion: '',\n      calories: 0\n    }]);\n  };\n  const handleRemoveMealItem = index => {\n    setNewMealItems(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleMealItemChange = (index, field, value) => {\n    setNewMealItems(prev => {\n      const updated = [...prev];\n      updated[index] = {\n        ...updated[index],\n        [field]: value\n      };\n      if (field === 'calories') {\n        updated[index].calories = parseInt(value) || 0;\n      }\n      return updated;\n    });\n  };\n  const handleAddMeal = () => {\n    if (!newMealTime || newMealItems.some(item => !item.name)) return;\n    setMealPlanData(prev => {\n      const updatedData = {\n        ...prev\n      };\n      const updatedMeals = [...prev[selectedDay].meals];\n\n      // Add new meal\n      updatedMeals.push({\n        time: newMealTime,\n        items: newMealItems.filter(item => item.name)\n      });\n\n      // Sort meals by time\n      updatedMeals.sort((a, b) => {\n        const timeA = convertTo24Hour(a.time.replace(/[^0-9:APM ]/g, '').trim());\n        const timeB = convertTo24Hour(b.time.replace(/[^0-9:APM ]/g, '').trim());\n        return timeA.localeCompare(timeB);\n      });\n      updatedData[selectedDay] = {\n        ...prev[selectedDay],\n        meals: updatedMeals\n      };\n      return updatedData;\n    });\n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setNewMealItems([{\n      name: '',\n      portion: '',\n      calories: 0\n    }]);\n  };\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n  const Dashboard = () => {\n    _s();\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      return days.reduce((acc, day) => {\n        var _mealPlanData$day;\n        const dayMeals = ((_mealPlanData$day = mealPlanData[day]) === null || _mealPlanData$day === void 0 ? void 0 : _mealPlanData$day.meals) || [];\n        const completed = dayMeals.filter(meal => {\n          var _mealData$mealKey3;\n          const mealKey = `${getDateKey(currentDate)}-${meal.time}`;\n          return ((_mealData$mealKey3 = mealData[mealKey]) === null || _mealData$mealKey3 === void 0 ? void 0 : _mealData$mealKey3.completed) || false;\n        }).length;\n        const total = dayMeals.length;\n        return {\n          completed: acc.completed + completed,\n          total: acc.total + total\n        };\n      }, {\n        completed: 0,\n        total: 0\n      });\n    }, [mealData, currentDate]);\n    const weekPercentage = Math.round(weekStats.completed / weekStats.total * 100) || 0;\n    const getProgressColor = percentage => {\n      if (percentage <= 33) return '#ef4444'; // Red\n      if (percentage <= 66) return '#f59e0b'; // Yellow/Orange\n      return '#22c55e'; // Green\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Today's Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Meals Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [stats.completed, \"/\", stats.total, \" (\", stats.percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${stats.percentage}%`,\n                  backgroundColor: getProgressColor(stats.percentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Weekly Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Week Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [weekStats.completed, \"/\", weekStats.total, \" (\", weekPercentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: `${weekPercentage}%`,\n                  backgroundColor: getProgressColor(weekPercentage)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this);\n  };\n  _s(Dashboard, \"3A1WL06O40UxZKevtBh+/wpgfgc=\");\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: commentModal.comment,\n          onChange: e => setCommentModal(prev => ({\n            ...prev,\n            comment: e.target.value\n          })),\n          placeholder: \"Enter your comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCommentModal({\n              isOpen: false,\n              mealKey: null,\n              comment: ''\n            }),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Keto-Cycling Meal Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          }),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentDate.toLocaleDateString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          }),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meal-type\",\n        children: mealPlanData[selectedDay].type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-goals\",\n        children: mealPlanData[selectedDay].goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"goal-tag\",\n          children: goal\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Carbs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCarbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Total Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].totalCalories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Liver Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: mealPlanData[selectedDay].liver\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Completion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: [stats.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meal-list\",\n      children: [mealPlanData[selectedDay].meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: meal.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              ref: index === activeMealSwap ? swapButtonRef : null,\n              className: \"swap-button\",\n              onClick: () => setActiveMealSwap(activeMealSwap === index ? null : index),\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this), \"Swap\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), activeMealSwap === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: swapMenuRef,\n              className: \"swap-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-menu-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Swap Meal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"close-button\",\n                  onClick: () => setActiveMealSwap(null),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), days.filter(day => day !== selectedDay).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swap-day-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-day-header\",\n                  children: day.charAt(0).toUpperCase() + day.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 27\n                }, this), mealPlanData[day].meals.map((swapMeal, swapIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"swap-menu-item\",\n                  onClick: () => handleMealSwap(index, day, swapIndex),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"swap-meal-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-time\",\n                      children: swapMeal.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 667,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"swap-meal-items\",\n                      children: swapMeal.items.map(item => item.name).join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 31\n                  }, this)\n                }, `${day}-${swapIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 29\n                }, this))]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"meal-checkbox\",\n              checked: isMealCompleted(meal.time),\n              onChange: () => toggleMealCompletion(meal.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"meal-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Food\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Portion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: meal.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.portion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [item.calories, \" kcal\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this)]\n            }, itemIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-meal-button\",\n        onClick: () => setShowAddMeal(true),\n        children: \"+ Add Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this), showAddMeal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newMealTime,\n            onChange: e => setNewMealTime(e.target.value),\n            className: \"time-select\",\n            children: timeOptions.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: time,\n              children: time\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), newMealItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-item-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Food\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.name,\n              onChange: e => handleMealItemChange(index, 'name', e.target.value),\n              placeholder: \"Enter food name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Portion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: item.portion,\n              onChange: e => handleMealItemChange(index, 'portion', e.target.value),\n              placeholder: \"Enter portion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: item.calories || '',\n              onChange: e => handleMealItemChange(index, 'calories', e.target.value),\n              placeholder: \"Enter calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 17\n          }, this), newMealItems.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-item-button\",\n            onClick: () => handleRemoveMealItem(index),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-item-button\",\n          onClick: handleAddMealItem,\n          children: \"+ Add Food Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddMeal,\n            children: \"Add Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowAddMeal(false);\n              setNewMealTime('12:00 PM');\n              setNewMealItems([{\n                name: '',\n                portion: '',\n                calories: 0\n              }]);\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 5\n  }, this);\n};\n_s2(MealPlanner, \"xZkQumzVHQ76z/7aNQZwW1MrWaQ=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","jsxDEV","_jsxDEV","initialMealPlanData","monday","type","goals","totalCarbs","totalCalories","liver","meals","time","items","name","portion","calories","tuesday","wednesday","thursday","friday","saturday","sunday","MealPlanner","_s2","_s","$RefreshSig$","currentDate","setCurrentDate","Date","selectedDay","setSelectedDay","weekday","toLocaleDateString","toLowerCase","mealPlanData","setMealPlanData","mealData","setMealData","saved","localStorage","getItem","JSON","parse","mealComments","setMealComments","commentModal","setCommentModal","isOpen","mealKey","comment","showExpandedStats","setShowExpandedStats","activeMealSwap","setActiveMealSwap","showAddMeal","setShowAddMeal","newMealTime","setNewMealTime","newMealItems","setNewMealItems","timeOptions","swapMenuRef","swapButtonRef","setItem","stringify","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","getDateKey","date","toISOString","split","isMealCompleted","mealTime","_mealData$mealKey","completed","calculateStats","_mealPlanData$selecte","todayMeals","filter","meal","length","total","percentage","Math","round","calculateMacros","weeklyCarbs","Object","values","reduce","acc","day","carbs","parseInt","weeklyCalories","weeklyAvgCarbs","weeklyAvgCalories","monthlyAvgCarbs","monthlyAvgCalories","handleMealSwap","mealIndex","newMealDay","newMealIndex","currentMeal","newMeal","_mealData$mealKey2","dateKey","wasCompleted","prev","updatedData","updatedMeals","toggleMealCompletion","_prev$mealKey","handleCommentOpen","handleCommentSave","convertTo24Hour","time12h","modifier","hours","minutes","toString","padStart","handleAddMealItem","handleRemoveMealItem","index","_","i","handleMealItemChange","field","value","updated","handleAddMeal","some","item","push","sort","a","b","timeA","replace","trim","timeB","localeCompare","days","stats","Dashboard","weekStats","_mealPlanData$day","dayMeals","_mealData$mealKey3","weekPercentage","getProgressColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","CommentModal","onChange","e","placeholder","onClick","newDate","setDate","getDate","month","year","map","goal","ref","xmlns","viewBox","fill","d","charAt","toUpperCase","slice","swapMeal","swapIndex","join","checked","itemIndex","_c","$RefreshReg$"],"sources":["/Users/peternigh/Desktop/keto-meal-tracker/src/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nconst initialMealPlanData = {\n  monday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat-burning', 'Low insulin response', 'High satiety'],\n    totalCarbs: '30-40g',\n    totalCalories: '2200-2400',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Morning (Fasted) OR Coffee',\n        items: [\n          { name: 'Coffee + Coconut Oil', portion: '1 tbsp coconut oil', calories: 120 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~11 AM)',\n        items: [\n          { name: 'Beef (or Chicken) + Butter', portion: '8-10 oz + 1 tbsp butter', calories: 600 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Mahi Mahi OR Tuna', portion: '8-10 oz', calories: 400 },\n          { name: 'Eggs', portion: '2 eggs', calories: 160 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 350 },\n          { name: 'Avocado', portion: '½ medium', calories: 120 },\n          { name: 'Chamomile OR Lemon Balm Tea', portion: '1 cup', calories: 0 }\n        ]\n      }\n    ]\n  },\n  tuesday: {\n    type: 'Strict Keto Day (With Honey)',\n    goals: ['Continue fat-burning', 'Small honey boost for energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4 oz chicken liver',\n    meals: [\n      {\n        time: 'Pre-Walk (~10 AM)',\n        items: [\n          { name: 'Honey', portion: '1 tsp', calories: 20 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Butter', portion: '3 eggs + 1 tbsp butter', calories: 400 },\n          { name: 'Fresh Fish', portion: '8 oz', calories: 350 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Avocado', portion: '8 oz + ½ avocado', calories: 600 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken Liver', portion: '4 oz', calories: 300 }\n        ]\n      }\n    ]\n  },\n  wednesday: {\n    type: 'Carb Refeed Day',\n    goals: ['Refuel glycogen', 'Metabolic reset', 'Hormone support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Fish + Avocado', portion: '6 oz + ½ avocado', calories: 450 }\n        ]\n      }\n    ]\n  },\n  thursday: {\n    type: 'Strict Keto Day',\n    goals: ['Return to ketosis', 'Maintain stable energy'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '6 oz beef liver',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter + Sauerkraut', portion: '8 oz + 1 tbsp butter', calories: 550 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '6 oz', calories: 450 }\n        ]\n      }\n    ]\n  },\n  friday: {\n    type: 'Strict Keto Day',\n    goals: ['Deep fat-burning', 'Satiety', 'Nutrient rebalancing'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: '4-6 oz beef liver',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Beef Liver', portion: '4-6 oz', calories: 450 }\n        ]\n      }\n    ]\n  },\n  saturday: {\n    type: 'Carb Refeed Day',\n    goals: ['Glycogen replenishment', 'Performance support'],\n    totalCarbs: '100-120g',\n    totalCalories: '2200-2400',\n    liver: 'None (Refeed day)',\n    meals: [\n      {\n        time: 'Pre-Workout (~10 AM)',\n        items: [\n          { name: 'Honey + Banana', portion: '1 tbsp honey + ½ banana', calories: 100 }\n        ]\n      },\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Beef + Sweet Potato', portion: '8 oz + ½ cup', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef/Chicken + Rice', portion: '8 oz + ½ cup rice', calories: 550 },\n          { name: 'Banana/Pineapple', portion: '½ fruit', calories: 50 }\n        ]\n      }\n    ]\n  },\n  sunday: {\n    type: 'Strict Keto Day',\n    goals: ['Fat adaptation', 'Recovery'],\n    totalCarbs: '30-40g',\n    totalCalories: '2000-2200',\n    liver: 'None',\n    meals: [\n      {\n        time: 'Meal 1 (~12 PM)',\n        items: [\n          { name: 'Eggs + Fish', portion: '3 eggs + 8 oz fish', calories: 500 }\n        ]\n      },\n      {\n        time: 'Meal 2 (~4 PM)',\n        items: [\n          { name: 'Beef + Butter', portion: '8 oz + 1 tbsp butter', calories: 550 },\n          { name: 'Sauerkraut', portion: '¼ cup', calories: 10 }\n        ]\n      },\n      {\n        time: 'Meal 3 (~8 PM)',\n        items: [\n          { name: 'Chicken + Avocado', portion: '8 oz + ½ avocado', calories: 450 }\n        ]\n      }\n    ]\n  }\n};\n\nconst MealPlanner = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDay, setSelectedDay] = useState(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    return weekday;\n  });\n  \n  const [mealPlanData, setMealPlanData] = useState(initialMealPlanData);\n  const [mealData, setMealData] = useState(() => {\n    const saved = localStorage.getItem('mealData');\n    return saved ? JSON.parse(saved) : {};\n  });\n  \n  const [mealComments, setMealComments] = useState(() => {\n    const saved = localStorage.getItem('mealComments');\n    return saved ? JSON.parse(saved) : {};\n  });\n\n  const [commentModal, setCommentModal] = useState({\n    isOpen: false,\n    mealKey: null,\n    comment: ''\n  });\n\n  const [showExpandedStats, setShowExpandedStats] = useState(false);\n  const [activeMealSwap, setActiveMealSwap] = useState(null);\n  const [showAddMeal, setShowAddMeal] = useState(false);\n  const [newMealTime, setNewMealTime] = useState('12:00 PM');\n  const [newMealItems, setNewMealItems] = useState([\n    { name: '', portion: '', calories: 0 }\n  ]);\n  const timeOptions = [\n    '6:00 AM', '7:00 AM', '8:00 AM', '9:00 AM', '10:00 AM', '11:00 AM',\n    '12:00 PM', '1:00 PM', '2:00 PM', '3:00 PM', '4:00 PM', '5:00 PM',\n    '6:00 PM', '7:00 PM', '8:00 PM', '9:00 PM', '10:00 PM'\n  ];\n  const swapMenuRef = useRef(null);\n  const swapButtonRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem('mealData', JSON.stringify(mealData));\n  }, [mealData]);\n\n  useEffect(() => {\n    localStorage.setItem('mealComments', JSON.stringify(mealComments));\n  }, [mealComments]);\n\n  useEffect(() => {\n    const weekday = currentDate.toLocaleDateString('en-US', { weekday: 'long' }).toLowerCase();\n    setSelectedDay(weekday);\n  }, [currentDate]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (activeMealSwap !== null &&\n          swapMenuRef.current &&\n          !swapMenuRef.current.contains(event.target) &&\n          swapButtonRef.current &&\n          !swapButtonRef.current.contains(event.target)) {\n        setActiveMealSwap(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [activeMealSwap]);\n\n  const getDateKey = (date) => date.toISOString().split('T')[0];\n\n  const isMealCompleted = useCallback((mealTime) => {\n    const mealKey = `${currentDate.toISOString().split('T')[0]}-${mealTime}`;\n    return mealData[mealKey]?.completed || false;\n  }, [currentDate, mealData]);\n\n  const calculateStats = useCallback(() => {\n    const todayMeals = mealPlanData[selectedDay]?.meals || [];\n    const completed = todayMeals.filter(meal => isMealCompleted(meal.time)).length;\n    const total = todayMeals.length;\n    const percentage = total > 0 ? (completed / total) * 100 : 0;\n    \n    return {\n      completed,\n      total,\n      percentage: Math.round(percentage)\n    };\n  }, [selectedDay, isMealCompleted]);\n\n  const calculateMacros = () => {\n    const weeklyCarbs = Object.values(mealPlanData).reduce((acc, day) => {\n      const carbs = parseInt(day.totalCarbs) || 0;\n      return acc + carbs;\n    }, 0);\n    \n    const weeklyCalories = Object.values(mealPlanData).reduce((acc, day) => {\n      const calories = parseInt(day.totalCalories) || 0;\n      return acc + calories;\n    }, 0);\n\n    return {\n      weeklyAvgCarbs: Math.round(weeklyCarbs / 7),\n      weeklyAvgCalories: Math.round(weeklyCalories / 7),\n      monthlyAvgCarbs: Math.round(weeklyCarbs / 7 * 30),\n      monthlyAvgCalories: Math.round(weeklyCalories / 7 * 30)\n    };\n  };\n\n  const handleMealSwap = (mealIndex, newMealDay, newMealIndex) => {\n    const currentMeal = mealPlanData[selectedDay].meals[mealIndex];\n    const newMeal = mealPlanData[newMealDay].meals[newMealIndex];\n    \n    if (newMeal) {\n      const dateKey = getDateKey(currentDate);\n      const mealKey = `${dateKey}-${currentMeal.time}`;\n      const wasCompleted = mealData[mealKey]?.completed || false;\n      \n      setMealPlanData(prev => {\n        const updatedData = { ...prev };\n        const updatedMeals = [...prev[selectedDay].meals];\n        updatedMeals[mealIndex] = {\n          ...newMeal,\n          time: currentMeal.time\n        };\n        updatedData[selectedDay] = {\n          ...prev[selectedDay],\n          meals: updatedMeals\n        };\n        return updatedData;\n      });\n      \n      setMealData(prev => ({\n        ...prev,\n        [mealKey]: {\n          ...prev[mealKey],\n          completed: wasCompleted\n        }\n      }));\n    }\n    \n    setActiveMealSwap(null);\n  };\n\n  const toggleMealCompletion = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setMealData(prev => ({\n      ...prev,\n      [mealKey]: {\n        ...prev[mealKey],\n        completed: !prev[mealKey]?.completed\n      }\n    }));\n  };\n\n  const handleCommentOpen = (mealTime) => {\n    const dateKey = getDateKey(currentDate);\n    const mealKey = `${dateKey}-${mealTime}`;\n    setCommentModal({\n      isOpen: true,\n      mealKey,\n      comment: mealComments[mealKey] || ''\n    });\n  };\n\n  const handleCommentSave = () => {\n    if (commentModal.mealKey) {\n      setMealComments(prev => ({\n        ...prev,\n        [commentModal.mealKey]: commentModal.comment\n      }));\n      setCommentModal({ isOpen: false, mealKey: null, comment: '' });\n    }\n  };\n\n  const convertTo24Hour = (time12h) => {\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours);\n    \n    if (hours === 12) {\n      hours = modifier === 'PM' ? 12 : 0;\n    } else if (modifier === 'PM') {\n      hours = hours + 12;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n  };\n\n  const handleAddMealItem = () => {\n    setNewMealItems(prev => [...prev, { name: '', portion: '', calories: 0 }]);\n  };\n\n  const handleRemoveMealItem = (index) => {\n    setNewMealItems(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleMealItemChange = (index, field, value) => {\n    setNewMealItems(prev => {\n      const updated = [...prev];\n      updated[index] = { ...updated[index], [field]: value };\n      if (field === 'calories') {\n        updated[index].calories = parseInt(value) || 0;\n      }\n      return updated;\n    });\n  };\n\n  const handleAddMeal = () => {\n    if (!newMealTime || newMealItems.some(item => !item.name)) return;\n    \n    setMealPlanData(prev => {\n      const updatedData = { ...prev };\n      const updatedMeals = [...prev[selectedDay].meals];\n      \n      // Add new meal\n      updatedMeals.push({\n        time: newMealTime,\n        items: newMealItems.filter(item => item.name)\n      });\n      \n      // Sort meals by time\n      updatedMeals.sort((a, b) => {\n        const timeA = convertTo24Hour(a.time.replace(/[^0-9:APM ]/g, '').trim());\n        const timeB = convertTo24Hour(b.time.replace(/[^0-9:APM ]/g, '').trim());\n        return timeA.localeCompare(timeB);\n      });\n      \n      updatedData[selectedDay] = {\n        ...prev[selectedDay],\n        meals: updatedMeals\n      };\n      \n      return updatedData;\n    });\n    \n    setShowAddMeal(false);\n    setNewMealTime('12:00 PM');\n    setNewMealItems([{ name: '', portion: '', calories: 0 }]);\n  };\n\n  const days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n  const stats = calculateStats();\n\n  const Dashboard = () => {\n    const stats = calculateStats();\n    const weekStats = useMemo(() => {\n      return days.reduce((acc, day) => {\n        const dayMeals = mealPlanData[day]?.meals || [];\n        const completed = dayMeals.filter(meal => {\n          const mealKey = `${getDateKey(currentDate)}-${meal.time}`;\n          return mealData[mealKey]?.completed || false;\n        }).length;\n        const total = dayMeals.length;\n        return {\n          completed: acc.completed + completed,\n          total: acc.total + total\n        };\n      }, { completed: 0, total: 0 });\n    }, [mealData, currentDate]);\n\n    const weekPercentage = Math.round((weekStats.completed / weekStats.total) * 100) || 0;\n    \n    const getProgressColor = (percentage) => {\n      if (percentage <= 33) return '#ef4444';  // Red\n      if (percentage <= 66) return '#f59e0b';  // Yellow/Orange\n      return '#22c55e';  // Green\n    };\n\n    return (\n      <div className=\"dashboard\">\n        <div className=\"stats-container\">\n          <div className=\"stats-section\">\n            <h3>Today's Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Meals Completed</span>\n                <span>{stats.completed}/{stats.total} ({stats.percentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${stats.percentage}%`,\n                    backgroundColor: getProgressColor(stats.percentage)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"stats-section\">\n            <h3>Weekly Progress</h3>\n            <div className=\"progress-container\">\n              <div className=\"progress-label\">\n                <span>Week Total</span>\n                <span>{weekStats.completed}/{weekStats.total} ({weekPercentage}%)</span>\n              </div>\n              <div className=\"progress-bar\">\n                <div \n                  className=\"progress-fill\"\n                  style={{ \n                    width: `${weekPercentage}%`,\n                    backgroundColor: getProgressColor(weekPercentage)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const CommentModal = () => {\n    if (!commentModal.isOpen) return null;\n    \n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <h3>Add Comment</h3>\n          <textarea\n            value={commentModal.comment}\n            onChange={(e) => setCommentModal(prev => ({\n              ...prev,\n              comment: e.target.value\n            }))}\n            placeholder=\"Enter your comment...\"\n          />\n          <div className=\"modal-buttons\">\n            <button onClick={handleCommentSave}>Save</button>\n            <button onClick={() => setCommentModal({ isOpen: false, mealKey: null, comment: '' })}>\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"meal-planner\">\n      <header className=\"header\">\n        <h1>Keto-Cycling Meal Plan</h1>\n        \n        <div className=\"date-navigation\">\n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() - 1);\n            return newDate;\n          })}>\n            Prev\n          </button>\n          \n          <h2>{currentDate.toLocaleDateString('en-US', { \n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric'\n          })}</h2>\n          \n          <button onClick={() => setCurrentDate(prev => {\n            const newDate = new Date(prev);\n            newDate.setDate(prev.getDate() + 1);\n            return newDate;\n          })}>\n            Next\n          </button>\n        </div>\n      </header>\n\n      <Dashboard />\n\n      <div className=\"daily-overview\">\n        <h2 className=\"meal-type\">{mealPlanData[selectedDay].type}</h2>\n        \n        <div className=\"meal-goals\">\n          {mealPlanData[selectedDay].goals.map((goal, index) => (\n            <span key={index} className=\"goal-tag\">{goal}</span>\n          ))}\n        </div>\n\n        <div className=\"meal-stats\">\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Carbs</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCarbs}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Total Calories</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].totalCalories}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Liver Intake</div>\n            <div className=\"stat-value\">{mealPlanData[selectedDay].liver}</div>\n          </div>\n          <div className=\"stat-item\">\n            <div className=\"stat-label\">Completion</div>\n            <div className=\"stat-value\">{stats.percentage}%</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"meal-list\">\n        {mealPlanData[selectedDay].meals.map((meal, index) => (\n          <div key={index} className=\"meal-item\">\n            <div className=\"meal-header\">\n              <h3>{meal.time}</h3>\n              <div className=\"meal-actions\">\n                <button \n                  ref={index === activeMealSwap ? swapButtonRef : null}\n                  className=\"swap-button\"\n                  onClick={() => setActiveMealSwap(activeMealSwap === index ? null : index)}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path d=\"M8 5a1 1 0 100 2h5.586l-1.293 1.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L13.586 5H8zM12 15a1 1 0 100-2H6.414l1.293-1.293a1 1 0 10-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L6.414 15H12z\" />\n                  </svg>\n                  Swap\n                </button>\n                {activeMealSwap === index && (\n                  <div ref={swapMenuRef} className=\"swap-menu\">\n                    <div className=\"swap-menu-header\">\n                      <h4>Swap Meal</h4>\n                      <button \n                        className=\"close-button\"\n                        onClick={() => setActiveMealSwap(null)}\n                      >\n                        ×\n                      </button>\n                    </div>\n                    {days\n                      .filter(day => day !== selectedDay)\n                      .map(day => (\n                        <div key={day} className=\"swap-day-section\">\n                          <div className=\"swap-day-header\">{day.charAt(0).toUpperCase() + day.slice(1)}</div>\n                          {mealPlanData[day].meals.map((swapMeal, swapIndex) => (\n                            <div \n                              key={`${day}-${swapIndex}`}\n                              className=\"swap-menu-item\"\n                              onClick={() => handleMealSwap(index, day, swapIndex)}\n                            >\n                              <div className=\"swap-meal-info\">\n                                <div className=\"swap-meal-time\">{swapMeal.time}</div>\n                                <div className=\"swap-meal-items\">\n                                  {swapMeal.items.map(item => item.name).join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      ))}\n                  </div>\n                )}\n                <input\n                  type=\"checkbox\"\n                  className=\"meal-checkbox\"\n                  checked={isMealCompleted(meal.time)}\n                  onChange={() => toggleMealCompletion(meal.time)}\n                />\n              </div>\n            </div>\n            <table className=\"meal-table\">\n              <thead>\n                <tr>\n                  <th>Food</th>\n                  <th>Portion</th>\n                  <th>Calories</th>\n                </tr>\n              </thead>\n              <tbody>\n                {meal.items.map((item, itemIndex) => (\n                  <tr key={itemIndex}>\n                    <td>{item.name}</td>\n                    <td>{item.portion}</td>\n                    <td>{item.calories} kcal</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ))}\n\n        <button \n          className=\"add-meal-button\"\n          onClick={() => setShowAddMeal(true)}\n        >\n          + Add Meal\n        </button>\n      </div>\n      \n      <CommentModal />\n      \n      {showAddMeal && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h3>Add New Meal</h3>\n            <div className=\"input-group\">\n              <label>Select Time</label>\n              <select\n                value={newMealTime}\n                onChange={(e) => setNewMealTime(e.target.value)}\n                className=\"time-select\"\n              >\n                {timeOptions.map(time => (\n                  <option key={time} value={time}>{time}</option>\n                ))}\n              </select>\n            </div>\n\n            {newMealItems.map((item, index) => (\n              <div key={index} className=\"meal-item-inputs\">\n                <div className=\"input-group\">\n                  <label>Food</label>\n                  <input\n                    type=\"text\"\n                    value={item.name}\n                    onChange={(e) => handleMealItemChange(index, 'name', e.target.value)}\n                    placeholder=\"Enter food name\"\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <label>Portion</label>\n                  <input\n                    type=\"text\"\n                    value={item.portion}\n                    onChange={(e) => handleMealItemChange(index, 'portion', e.target.value)}\n                    placeholder=\"Enter portion\"\n                  />\n                </div>\n                <div className=\"input-group\">\n                  <label>Calories</label>\n                  <input\n                    type=\"number\"\n                    value={item.calories || ''}\n                    onChange={(e) => handleMealItemChange(index, 'calories', e.target.value)}\n                    placeholder=\"Enter calories\"\n                  />\n                </div>\n                {newMealItems.length > 1 && (\n                  <button\n                    className=\"remove-item-button\"\n                    onClick={() => handleRemoveMealItem(index)}\n                  >\n                    ×\n                  </button>\n                )}\n              </div>\n            ))}\n\n            <button\n              className=\"add-item-button\"\n              onClick={handleAddMealItem}\n            >\n              + Add Food Item\n            </button>\n\n            <div className=\"modal-buttons\">\n              <button onClick={handleAddMeal}>Add Meal</button>\n              <button onClick={() => {\n                setShowAddMeal(false);\n                setNewMealTime('12:00 PM');\n                setNewMealItems([{ name: '', portion: '', calories: 0 }]);\n              }}>Cancel</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}